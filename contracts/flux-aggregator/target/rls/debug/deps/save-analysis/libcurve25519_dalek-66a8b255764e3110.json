{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","curve25519_dalek","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"u64_backend\"","-C","metadata=66a8b255764e3110","-C","extra-filename=-66a8b255764e3110","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","byteorder=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libbyteorder-48bc312eec0a2903.rmeta","--extern","digest=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libdigest-54f6c60dd1903370.rmeta","--extern","rand_core=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/librand_core-068c259e0461f3fc.rmeta","--extern","subtle=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libsubtle-2fa1dd64c20bf922.rmeta","--extern","zeroize=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libzeroize-cd593b3727d4564c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcurve25519_dalek-66a8b255764e3110.rmeta"},"prelude":{"crate_id":{"name":"curve25519_dalek","disambiguator":[1710251577914765931,15921235370094257782]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[3071847127673975179,7003147510126265182]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":20,"id":{"name":"digest","disambiguator":[11815551155626523553,13150518862568951459]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":21,"id":{"name":"generic_array","disambiguator":[2843115902605017426,8992412963017954804]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":22,"id":{"name":"typenum","disambiguator":[15595204929548488895,11009855742131221505]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":23,"id":{"name":"rand_core","disambiguator":[15262903449215184178,1965405531746979256]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":24,"id":{"name":"getrandom","disambiguator":[17970065197973694116,6812716713039249432]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[18066125678311518643,11358915899814267326]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[2521045491498281214,2123948796851982599]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":27,"id":{"name":"zeroize","disambiguator":[4196693835647716122,2424233725925652009]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","num":28,"id":{"name":"subtle","disambiguator":[13649248947348070893,10545555751276563020]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":316,"byte_end":3073,"line_start":12,"line_end":101,"column_start":1,"column_end":23}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197194,"byte_end":197195,"line_start":42,"line_end":42,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"EIGHT_TORSION, MONTGOMERY_A_NEG, MINUS_ONE, ONE_MINUS_EDWARDS_D_SQUARED, R, LFACTOR, ED25519_BASEPOINT_POINT, EDWARDS_D, RR, MONTGOMERY_A, L, EDWARDS_D_MINUS_ONE_SQUARED, INVSQRT_A_MINUS_D, SQRT_M1, APLUS2_OVER_FOUR, SQRT_AD_MINUS_ONE, EDWARDS_D2, ED25519_BASEPOINT_TABLE, AFFINE_ODD_MULTIPLES_OF_BASEPOINT","parent":{"krate":0,"index":840}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":316,"byte_end":3073,"line_start":12,"line_end":101,"column_start":1,"column_end":23},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":17},{"krate":0,"index":269},{"krate":0,"index":360},{"krate":0,"index":606},{"krate":0,"index":840},{"krate":0,"index":866},{"krate":0,"index":922},{"krate":0,"index":965},{"krate":0,"index":1459},{"krate":0,"index":1463}],"decl_id":null,"docs":" Note that docs will only build on nightly Rust until\n [RFC 1990 stabilizes](https://github.com/rust-lang/rust/issues/44732).\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":316,"byte_end":326,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"/ Note that docs will only build on nightly Rust until","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":993,"byte_end":1049,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [RFC 1990 stabilizes](https://github.com/rust-lang/rust/issues/44732).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":1050,"byte_end":1124,"line_start":28,"line_end":28,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":98},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":1535},{"krate":0,"index":120},{"krate":0,"index":1537},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":125},{"krate":0,"index":1548},{"krate":0,"index":128},{"krate":0,"index":1550},{"krate":0,"index":1554},{"krate":0,"index":1558},{"krate":0,"index":133},{"krate":0,"index":1561},{"krate":0,"index":136},{"krate":0,"index":1563},{"krate":0,"index":1567},{"krate":0,"index":1571},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":177},{"krate":0,"index":187},{"krate":0,"index":197},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":264}],"decl_id":null,"docs":" Arithmetic on scalars (integers mod the group order).","sig":null,"attributes":[{"value":"/ Arithmetic on scalars (integers mod the group order).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6671,"byte_end":6728,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6729,"byte_end":6732,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Both the Ristretto group and the Ed25519 basepoint have prime order","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6733,"byte_end":6804,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ \\\\( \\ell = 2\\^{252} + 27742317777372353535851937790883648493 \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6805,"byte_end":6874,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6875,"byte_end":6878,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This code is intended to be useful with both the Ristretto group","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6879,"byte_end":6947,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ (where everything is done modulo \\\\( \\ell \\\\)), and the X/Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":6948,"byte_end":7017,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ setting, which mandates specific bit-twiddles that are not","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7018,"byte_end":7080,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ well-defined modulo \\\\( \\ell \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7081,"byte_end":7118,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7119,"byte_end":7122,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ All arithmetic on `Scalars` is done modulo \\\\( \\ell \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7123,"byte_end":7183,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7184,"byte_end":7187,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Constructing a scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7188,"byte_end":7215,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7216,"byte_end":7219,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ To create a [`Scalar`](struct.Scalar.html) from a supposedly canonical encoding, use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7220,"byte_end":7308,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ [`Scalar::from_canonical_bytes`](struct.Scalar.html#method.from_canonical_bytes).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7309,"byte_end":7394,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7395,"byte_end":7398,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function does input validation, ensuring that the input bytes","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7399,"byte_end":7469,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ are the canonical encoding of a `Scalar`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7470,"byte_end":7515,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ If they are, we'll get","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7516,"byte_end":7542,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/ `Some(Scalar)` in return:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7543,"byte_end":7572,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7573,"byte_end":7576,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7577,"byte_end":7584,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7585,"byte_end":7626,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7627,"byte_end":7630,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let one_as_bytes: [u8; 32] = Scalar::one().to_bytes();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7631,"byte_end":7689,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(one_as_bytes);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7690,"byte_end":7761,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7762,"byte_end":7765,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_some());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7766,"byte_end":7791,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7792,"byte_end":7799,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7800,"byte_end":7803,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ However, if we give it bytes representing a scalar larger than \\\\( \\ell \\\\)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7804,"byte_end":7883,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ (in this case, \\\\( \\ell + 2 \\\\)), we'll get `None` back:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7884,"byte_end":7944,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7945,"byte_end":7948,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7949,"byte_end":7956,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7957,"byte_end":7998,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":7999,"byte_end":8002,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8003,"byte_end":8041,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8042,"byte_end":8096,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8097,"byte_end":8151,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8152,"byte_end":8206,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8207,"byte_end":8261,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8262,"byte_end":8268,"line_start":56,"line_end":56,"column_start":1,"column_end":7}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(l_plus_two_bytes);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8269,"byte_end":8344,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8345,"byte_end":8348,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_none());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8349,"byte_end":8374,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8375,"byte_end":8382,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8383,"byte_end":8386,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Another way to create a `Scalar` is by reducing a \\\\(256\\\\)-bit integer mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8387,"byte_end":8466,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ \\\\( \\ell \\\\), for which one may use the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8467,"byte_end":8510,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/ [`Scalar::from_bytes_mod_order`](struct.Scalar.html#method.from_bytes_mod_order)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8511,"byte_end":8595,"line_start":64,"line_end":64,"column_start":1,"column_end":85}},{"value":"/ method.  In the case of the second example above, this would reduce the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8596,"byte_end":8671,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ resultant scalar \\\\( \\mod \\ell \\\\), producing \\\\( 2 \\\\):","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8672,"byte_end":8732,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8733,"byte_end":8736,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8737,"byte_end":8744,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8745,"byte_end":8786,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8787,"byte_end":8790,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8791,"byte_end":8829,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8830,"byte_end":8884,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8885,"byte_end":8939,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8940,"byte_end":8994,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":8995,"byte_end":9049,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9050,"byte_end":9056,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bytes_mod_order(l_plus_two_bytes);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9057,"byte_end":9124,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9125,"byte_end":9128,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9129,"byte_end":9181,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9182,"byte_end":9185,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert!(a == two);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9186,"byte_end":9208,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9209,"byte_end":9216,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9217,"byte_end":9220,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ There is also a constructor that reduces a \\\\(512\\\\)-bit integer,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9221,"byte_end":9290,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ [`Scalar::from_bytes_mod_order_wide`](struct.Scalar.html#method.from_bytes_mod_order_wide).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9291,"byte_end":9386,"line_start":85,"line_end":85,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9387,"byte_end":9390,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ To construct a `Scalar` as the hash of some input data, use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9391,"byte_end":9454,"line_start":87,"line_end":87,"column_start":1,"column_end":64}},{"value":"/ [`Scalar::hash_from_bytes`](struct.Scalar.html#method.hash_from_bytes),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9455,"byte_end":9530,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ which takes a buffer, or","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9531,"byte_end":9559,"line_start":89,"line_end":89,"column_start":1,"column_end":29}},{"value":"/ [`Scalar::from_hash`](struct.Scalar.html#method.from_hash),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9560,"byte_end":9623,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/ which allows an IUF API.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9624,"byte_end":9652,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9653,"byte_end":9656,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9657,"byte_end":9664,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9665,"byte_end":9701,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ # extern crate sha2;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9702,"byte_end":9726,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9727,"byte_end":9732,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9733,"byte_end":9750,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/ use sha2::{Digest, Sha512};","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9751,"byte_end":9782,"line_start":98,"line_end":98,"column_start":1,"column_end":32}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9783,"byte_end":9824,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9825,"byte_end":9828,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Hashing a single byte slice","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9829,"byte_end":9863,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/ let a = Scalar::hash_from_bytes::<Sha512>(b\"Abolish ICE\");","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9864,"byte_end":9926,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9927,"byte_end":9930,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // Streaming data into a hash object","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9931,"byte_end":9971,"line_start":104,"line_end":104,"column_start":1,"column_end":41}},{"value":"/ let mut hasher = Sha512::default();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":9972,"byte_end":10011,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ hasher.update(b\"Abolish \");","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10012,"byte_end":10043,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/ hasher.update(b\"ICE\");","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10044,"byte_end":10070,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/ let a2 = Scalar::from_hash(hasher);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10071,"byte_end":10110,"line_start":108,"line_end":108,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10111,"byte_end":10114,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, a2);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10115,"byte_end":10137,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10138,"byte_end":10145,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10146,"byte_end":10153,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10154,"byte_end":10157,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Finally, to create a `Scalar` with a specific bit-pattern","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10158,"byte_end":10219,"line_start":114,"line_end":114,"column_start":1,"column_end":62}},{"value":"/ (e.g., for compatibility with X/Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10220,"byte_end":10263,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/ [\"clamping\"](https://github.com/isislovecruft/ed25519-dalek/blob/f790bd2ce/src/ed25519.rs#L349)),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10264,"byte_end":10365,"line_start":116,"line_end":116,"column_start":1,"column_end":102}},{"value":"/ use [`Scalar::from_bits`](struct.Scalar.html#method.from_bits). This","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10366,"byte_end":10438,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/ constructs a scalar with exactly the bit pattern given, without any","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10439,"byte_end":10510,"line_start":118,"line_end":118,"column_start":1,"column_end":72}},{"value":"/ assurances as to reduction modulo the group order:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10511,"byte_end":10565,"line_start":119,"line_end":119,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10566,"byte_end":10569,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10570,"byte_end":10577,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10578,"byte_end":10619,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10620,"byte_end":10623,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10624,"byte_end":10662,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10663,"byte_end":10717,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10718,"byte_end":10772,"line_start":126,"line_end":126,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10773,"byte_end":10827,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10828,"byte_end":10882,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10883,"byte_end":10889,"line_start":129,"line_end":129,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bits(l_plus_two_bytes);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10890,"byte_end":10946,"line_start":130,"line_end":130,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10947,"byte_end":10950,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":10951,"byte_end":11003,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11004,"byte_end":11007,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ assert!(a != two);              // the scalar is not reduced (mod l)…","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11008,"byte_end":11083,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/ assert!(! a.is_canonical());    // …and therefore is not canonical.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11084,"byte_end":11157,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ assert!(a.reduce() == two);     // if we were to reduce it manually, it would be.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11158,"byte_end":11243,"line_start":136,"line_end":136,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11244,"byte_end":11251,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11252,"byte_end":11255,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The resulting `Scalar` has exactly the specified bit pattern,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11256,"byte_end":11321,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ **except for the highest bit, which will be set to 0**.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":11322,"byte_end":11381,"line_start":140,"line_end":140,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1525},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":12996,"byte_end":13002,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"Scalar {  }","parent":null,"children":[{"krate":0,"index":1526}],"decl_id":null,"docs":" The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which\n represents an element of \\\\(\\mathbb Z / \\ell\\\\).\n","sig":null,"attributes":[{"value":"/ The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":12836,"byte_end":12902,"line_start":193,"line_end":193,"column_start":1,"column_end":67}},{"value":"/ represents an element of \\\\(\\mathbb Z / \\ell\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":12903,"byte_end":12955,"line_start":194,"line_end":194,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":13770,"byte_end":13790,"line_start":215,"line_end":215,"column_start":12,"column_end":32},"name":"from_bytes_mod_order","qualname":"<Scalar>::from_bytes_mod_order","value":"pub fn from_bytes_mod_order([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 256-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 256-bit little-endian integer","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":13645,"byte_end":13713,"line_start":213,"line_end":213,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":13718,"byte_end":13758,"line_start":214,"line_end":214,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14231,"byte_end":14256,"line_start":228,"line_end":228,"column_start":12,"column_end":37},"name":"from_bytes_mod_order_wide","qualname":"<Scalar>::from_bytes_mod_order_wide","value":"pub fn from_bytes_mod_order_wide(&[u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 512-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 512-bit little-endian integer","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14106,"byte_end":14174,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14179,"byte_end":14219,"line_start":227,"line_end":227,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14668,"byte_end":14688,"line_start":239,"line_end":239,"column_start":12,"column_end":32},"name":"from_canonical_bytes","qualname":"<Scalar>::from_canonical_bytes","value":"pub fn from_canonical_bytes([u8; ]) -> Option<Scalar>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to construct a `Scalar` from a canonical byte representation.","sig":null,"attributes":[{"value":"/ Attempt to construct a `Scalar` from a canonical byte representation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14352,"byte_end":14425,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14430,"byte_end":14433,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14438,"byte_end":14450,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14455,"byte_end":14458,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ - `Some(s)`, where `s` is the `Scalar` corresponding to `bytes`,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14463,"byte_end":14531,"line_start":236,"line_end":236,"column_start":5,"column_end":73}},{"value":"/   if `bytes` is a canonical byte representation;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14536,"byte_end":14588,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/ - `None` if `bytes` is not a canonical byte representation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14593,"byte_end":14656,"line_start":238,"line_end":238,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15244,"byte_end":15253,"line_start":256,"line_end":256,"column_start":18,"column_end":27},"name":"from_bits","qualname":"<Scalar>::from_bits","value":"pub const fn from_bits([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` from the low 255 bits of a 256-bit integer.","sig":null,"attributes":[{"value":"/ Construct a `Scalar` from the low 255 bits of a 256-bit integer.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":14996,"byte_end":15064,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15069,"byte_end":15072,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function is intended for applications like X25519 which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15077,"byte_end":15141,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/ require specific bit-patterns when performing scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15146,"byte_end":15202,"line_start":254,"line_end":254,"column_start":5,"column_end":61}},{"value":"/ multiplication.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15207,"byte_end":15226,"line_start":255,"line_end":255,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23844,"byte_end":23850,"line_start":568,"line_end":568,"column_start":12,"column_end":18},"name":"random","qualname":"<Scalar>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `Scalar` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `Scalar` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23230,"byte_end":23305,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23310,"byte_end":23313,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23318,"byte_end":23330,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23335,"byte_end":23338,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23343,"byte_end":23417,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23422,"byte_end":23425,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23430,"byte_end":23443,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23448,"byte_end":23451,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ A random scalar within ℤ/lℤ.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23456,"byte_end":23492,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23497,"byte_end":23500,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23505,"byte_end":23518,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23523,"byte_end":23526,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23531,"byte_end":23538,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ extern crate rand_core;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23543,"byte_end":23570,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23575,"byte_end":23611,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23616,"byte_end":23621,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23626,"byte_end":23643,"line_start":560,"line_end":560,"column_start":5,"column_end":22}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23648,"byte_end":23689,"line_start":561,"line_end":561,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23694,"byte_end":23697,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23702,"byte_end":23727,"line_start":563,"line_end":563,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23732,"byte_end":23735,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let mut csprng = OsRng;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23740,"byte_end":23767,"line_start":565,"line_end":565,"column_start":5,"column_end":32}},{"value":"/ let a: Scalar = Scalar::random(&mut csprng);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23772,"byte_end":23820,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23825,"byte_end":23832,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24842,"byte_end":24857,"line_start":597,"line_end":597,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<Scalar>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> Scalar where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a scalar.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24051,"byte_end":24091,"line_start":574,"line_end":574,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24096,"byte_end":24099,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24104,"byte_end":24170,"line_start":576,"line_end":576,"column_start":5,"column_end":71}},{"value":"/ bytes (512 bits) of output.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24175,"byte_end":24206,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24211,"byte_end":24214,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24219,"byte_end":24262,"line_start":579,"line_end":579,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24267,"byte_end":24270,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24275,"byte_end":24288,"line_start":581,"line_end":581,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24293,"byte_end":24296,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24301,"byte_end":24308,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24313,"byte_end":24349,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24354,"byte_end":24397,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24402,"byte_end":24424,"line_start":586,"line_end":586,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24429,"byte_end":24432,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24437,"byte_end":24458,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24463,"byte_end":24466,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24471,"byte_end":24534,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24539,"byte_end":24624,"line_start":591,"line_end":591,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24629,"byte_end":24646,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24651,"byte_end":24739,"line_start":593,"line_end":593,"column_start":5,"column_end":93}},{"value":"/ let s = Scalar::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24744,"byte_end":24806,"line_start":594,"line_end":594,"column_start":5,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24811,"byte_end":24818,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":24823,"byte_end":24830,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26541,"byte_end":26550,"line_start":639,"line_end":639,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<Scalar>::from_hash","value":"pub fn from_hash<D>(D) -> Scalar where D: Digest<OutputSize = U64>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a scalar from an existing `Digest` instance.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25051,"byte_end":25109,"line_start":605,"line_end":605,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25114,"byte_end":25117,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25122,"byte_end":25188,"line_start":607,"line_end":607,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25193,"byte_end":25256,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25261,"byte_end":25271,"line_start":609,"line_end":609,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25276,"byte_end":25279,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25284,"byte_end":25297,"line_start":611,"line_end":611,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25302,"byte_end":25305,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25310,"byte_end":25317,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25322,"byte_end":25358,"line_start":614,"line_end":614,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25363,"byte_end":25406,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25411,"byte_end":25433,"line_start":616,"line_end":616,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25438,"byte_end":25441,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ use sha2::Digest;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25446,"byte_end":25467,"line_start":618,"line_end":618,"column_start":5,"column_end":26}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25472,"byte_end":25493,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25498,"byte_end":25501,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25506,"byte_end":25523,"line_start":621,"line_end":621,"column_start":5,"column_end":22}},{"value":"/ let mut h = Sha512::new()","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25528,"byte_end":25557,"line_start":622,"line_end":622,"column_start":5,"column_end":34}},{"value":"/     .chain(\"To really appreciate architecture, you may even need to commit a murder.\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25562,"byte_end":25652,"line_start":623,"line_end":623,"column_start":5,"column_end":95}},{"value":"/     .chain(\"While the programs used for The Manhattan Transcripts are of the most extreme\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25657,"byte_end":25752,"line_start":624,"line_end":624,"column_start":5,"column_end":100}},{"value":"/     .chain(\"nature, they also parallel the most common formula plot: the archetype of\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25757,"byte_end":25848,"line_start":625,"line_end":625,"column_start":5,"column_end":96}},{"value":"/     .chain(\"murder. Other phantasms were occasionally used to underline the fact that\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25853,"byte_end":25944,"line_start":626,"line_end":626,"column_start":5,"column_end":96}},{"value":"/     .chain(\"perhaps all architecture, rather than being about functional standards, is\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":25949,"byte_end":26041,"line_start":627,"line_end":627,"column_start":5,"column_end":97}},{"value":"/     .chain(\"about love and death.\");","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26046,"byte_end":26086,"line_start":628,"line_end":628,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26091,"byte_end":26094,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let s = Scalar::from_hash(h);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26099,"byte_end":26132,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26137,"byte_end":26140,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", s.to_bytes());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26145,"byte_end":26180,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/ assert!(s == Scalar::from_bits([ 21,  88, 208, 252,  63, 122, 210, 152,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26185,"byte_end":26260,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/                                 154,  38,  15,  23,  16, 167,  80, 150,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26265,"byte_end":26340,"line_start":634,"line_end":634,"column_start":5,"column_end":80}},{"value":"/                                 192, 221,  77, 226,  62,  25, 224, 148,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26345,"byte_end":26420,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/                                 239,  48, 176,  10, 185,  69, 168,  11, ]));","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26425,"byte_end":26505,"line_start":636,"line_end":636,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26510,"byte_end":26517,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26522,"byte_end":26529,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27057,"byte_end":27065,"line_start":658,"line_end":658,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Scalar` to its underlying sequence of bytes.","sig":null,"attributes":[{"value":"/ Convert this `Scalar` to its underlying sequence of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26779,"byte_end":26841,"line_start":647,"line_end":647,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26846,"byte_end":26849,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26854,"byte_end":26867,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26872,"byte_end":26875,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26880,"byte_end":26887,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26892,"byte_end":26933,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26938,"byte_end":26941,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26946,"byte_end":26981,"line_start":654,"line_end":654,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26986,"byte_end":26989,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ assert!(s.to_bytes() == [0u8; 32]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":26994,"byte_end":27033,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27038,"byte_end":27045,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27415,"byte_end":27423,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Scalar>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View the little-endian byte encoding of the integer representing this Scalar.","sig":null,"attributes":[{"value":"/ View the little-endian byte encoding of the integer representing this Scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27117,"byte_end":27198,"line_start":662,"line_end":662,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27203,"byte_end":27206,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27211,"byte_end":27224,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27229,"byte_end":27232,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27237,"byte_end":27244,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27249,"byte_end":27290,"line_start":667,"line_end":667,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27295,"byte_end":27298,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27303,"byte_end":27338,"line_start":669,"line_end":669,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27343,"byte_end":27346,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ assert!(s.as_bytes() == &[0u8; 32]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27351,"byte_end":27391,"line_start":671,"line_end":671,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27396,"byte_end":27403,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27524,"byte_end":27528,"line_start":678,"line_end":678,"column_start":12,"column_end":16},"name":"zero","qualname":"<Scalar>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 0 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 0 \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27477,"byte_end":27512,"line_start":677,"line_end":677,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27634,"byte_end":27637,"line_start":683,"line_end":683,"column_start":12,"column_end":15},"name":"one","qualname":"<Scalar>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 1 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 1 \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27587,"byte_end":27622,"line_start":682,"line_end":682,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29323,"byte_end":29329,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero `Scalar`, compute its multiplicative inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero `Scalar`, compute its multiplicative inverse.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27852,"byte_end":27917,"line_start":692,"line_end":692,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27922,"byte_end":27925,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27930,"byte_end":27943,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27948,"byte_end":27951,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ `self` **MUST** be nonzero.  If you cannot","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":27956,"byte_end":28002,"line_start":696,"line_end":696,"column_start":5,"column_end":51}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28007,"byte_end":28067,"line_start":697,"line_end":697,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28072,"byte_end":28087,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28092,"byte_end":28095,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28100,"byte_end":28113,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28118,"byte_end":28121,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The multiplicative inverse of the this `Scalar`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28126,"byte_end":28178,"line_start":702,"line_end":702,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28183,"byte_end":28186,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28191,"byte_end":28204,"line_start":704,"line_end":704,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28209,"byte_end":28212,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28217,"byte_end":28224,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28229,"byte_end":28270,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28275,"byte_end":28278,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ // x = 2238329342913194256032495932344128051776374960164957527413114840482143558222","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28283,"byte_end":28370,"line_start":709,"line_end":709,"column_start":5,"column_end":92}},{"value":"/ let X: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28375,"byte_end":28425,"line_start":710,"line_end":710,"column_start":5,"column_end":55}},{"value":"/         0x4e, 0x5a, 0xb4, 0x34, 0x5d, 0x47, 0x08, 0x84,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28430,"byte_end":28489,"line_start":711,"line_end":711,"column_start":5,"column_end":64}},{"value":"/         0x59, 0x13, 0xb4, 0x64, 0x1b, 0xc2, 0x7d, 0x52,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28494,"byte_end":28553,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/         0x52, 0xa5, 0x85, 0x10, 0x1b, 0xcc, 0x42, 0x44,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28558,"byte_end":28617,"line_start":713,"line_end":713,"column_start":5,"column_end":64}},{"value":"/         0xd4, 0x49, 0xf4, 0xa8, 0x79, 0xd9, 0xf2, 0x04,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28622,"byte_end":28681,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28686,"byte_end":28697,"line_start":715,"line_end":715,"column_start":5,"column_end":16}},{"value":"/ // 1/x = 6859937278830797291664592131120606308688036382723378951768035303146619657244","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28702,"byte_end":28791,"line_start":716,"line_end":716,"column_start":5,"column_end":94}},{"value":"/ let XINV: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28796,"byte_end":28849,"line_start":717,"line_end":717,"column_start":5,"column_end":58}},{"value":"/         0x1c, 0xdc, 0x17, 0xfc, 0xe0, 0xe9, 0xa5, 0xbb,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28854,"byte_end":28913,"line_start":718,"line_end":718,"column_start":5,"column_end":64}},{"value":"/         0xd9, 0x24, 0x7e, 0x56, 0xbb, 0x01, 0x63, 0x47,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28918,"byte_end":28977,"line_start":719,"line_end":719,"column_start":5,"column_end":64}},{"value":"/         0xbb, 0xba, 0x31, 0xed, 0xd5, 0xa9, 0xbb, 0x96,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":28982,"byte_end":29041,"line_start":720,"line_end":720,"column_start":5,"column_end":64}},{"value":"/         0xd5, 0x0b, 0xcd, 0x7a, 0x3f, 0x96, 0x2a, 0x0f,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29046,"byte_end":29105,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29110,"byte_end":29121,"line_start":722,"line_end":722,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29126,"byte_end":29129,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let inv_X: Scalar = X.invert();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29134,"byte_end":29169,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/ assert!(XINV == inv_X);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29174,"byte_end":29201,"line_start":725,"line_end":725,"column_start":5,"column_end":32}},{"value":"/ let should_be_one: Scalar = &inv_X * &X;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29206,"byte_end":29250,"line_start":726,"line_end":726,"column_start":5,"column_end":49}},{"value":"/ assert!(should_be_one == Scalar::one());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29255,"byte_end":29299,"line_start":727,"line_end":727,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29304,"byte_end":29311,"line_start":728,"line_end":728,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30605,"byte_end":30617,"line_start":771,"line_end":771,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<Scalar>::batch_invert","value":"pub fn batch_invert(&mut [Scalar]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of nonzero (possibly secret) `Scalar`s,\n compute their inverses in a batch.","sig":null,"attributes":[{"value":"/ Given a slice of nonzero (possibly secret) `Scalar`s,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29398,"byte_end":29455,"line_start":733,"line_end":733,"column_start":5,"column_end":62}},{"value":"/ compute their inverses in a batch.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29460,"byte_end":29498,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29503,"byte_end":29506,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29511,"byte_end":29523,"line_start":736,"line_end":736,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29528,"byte_end":29531,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Each element of `inputs` is replaced by its inverse.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29536,"byte_end":29592,"line_start":738,"line_end":738,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29597,"byte_end":29600,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ The product of all inverses is returned.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29605,"byte_end":29649,"line_start":740,"line_end":740,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29654,"byte_end":29657,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29662,"byte_end":29675,"line_start":742,"line_end":742,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29680,"byte_end":29683,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ All input `Scalars` **MUST** be nonzero.  If you cannot","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29688,"byte_end":29747,"line_start":744,"line_end":744,"column_start":5,"column_end":64}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29752,"byte_end":29812,"line_start":745,"line_end":745,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29817,"byte_end":29832,"line_start":746,"line_end":746,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29837,"byte_end":29840,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29845,"byte_end":29858,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29863,"byte_end":29866,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29871,"byte_end":29878,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29883,"byte_end":29919,"line_start":751,"line_end":751,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29924,"byte_end":29967,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29972,"byte_end":29989,"line_start":753,"line_end":753,"column_start":5,"column_end":22}},{"value":"/ let mut scalars = [","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":29994,"byte_end":30017,"line_start":754,"line_end":754,"column_start":5,"column_end":28}},{"value":"/     Scalar::from(3u64),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30022,"byte_end":30049,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(5u64),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30054,"byte_end":30081,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(7u64),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30086,"byte_end":30113,"line_start":757,"line_end":757,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(11u64),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30118,"byte_end":30146,"line_start":758,"line_end":758,"column_start":5,"column_end":33}},{"value":"/ ];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30151,"byte_end":30157,"line_start":759,"line_end":759,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30162,"byte_end":30165,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let allinv = Scalar::batch_invert(&mut scalars);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30170,"byte_end":30222,"line_start":761,"line_end":761,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30227,"byte_end":30230,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(allinv, Scalar::from(3*5*7*11u64).invert());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30235,"byte_end":30294,"line_start":763,"line_end":763,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(scalars[0], Scalar::from(3u64).invert());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30299,"byte_end":30355,"line_start":764,"line_end":764,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[1], Scalar::from(5u64).invert());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30360,"byte_end":30416,"line_start":765,"line_end":765,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[2], Scalar::from(7u64).invert());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30421,"byte_end":30477,"line_start":766,"line_end":766,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[3], Scalar::from(11u64).invert());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30482,"byte_end":30539,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30544,"byte_end":30551,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30556,"byte_end":30563,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":30568,"byte_end":30593,"line_start":770,"line_end":770,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":43741,"byte_end":43747,"line_start":1104,"line_end":1104,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Scalar>::reduce","value":"pub fn reduce(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Reduce this `Scalar` modulo \\\\(\\ell\\\\).\n","sig":null,"attributes":[{"value":"/ Reduce this `Scalar` modulo \\\\(\\ell\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":43657,"byte_end":43700,"line_start":1102,"line_end":1102,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":43705,"byte_end":43729,"line_start":1103,"line_end":1103,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44653,"byte_end":44665,"line_start":1129,"line_end":1129,"column_start":12,"column_end":24},"name":"is_canonical","qualname":"<Scalar>::is_canonical","value":"pub fn is_canonical(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","sig":null,"attributes":[{"value":"/ Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":43960,"byte_end":44039,"line_start":1111,"line_end":1111,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44044,"byte_end":44047,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ This is intended for uses like input validation, where variable-time code is acceptable.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44052,"byte_end":44144,"line_start":1113,"line_end":1113,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44149,"byte_end":44152,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44157,"byte_end":44164,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44169,"byte_end":44205,"line_start":1116,"line_end":1116,"column_start":5,"column_end":41}},{"value":"/ # extern crate subtle;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44210,"byte_end":44236,"line_start":1117,"line_end":1117,"column_start":5,"column_end":31}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44241,"byte_end":44284,"line_start":1118,"line_end":1118,"column_start":5,"column_end":48}},{"value":"/ # use subtle::ConditionallySelectable;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44289,"byte_end":44331,"line_start":1119,"line_end":1119,"column_start":5,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44336,"byte_end":44353,"line_start":1120,"line_end":1120,"column_start":5,"column_end":22}},{"value":"/ // 2^255 - 1, since `from_bits` clears the high bit","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44358,"byte_end":44413,"line_start":1121,"line_end":1121,"column_start":5,"column_end":60}},{"value":"/ let _2_255_minus_1 = Scalar::from_bits([0xff;32]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44418,"byte_end":44472,"line_start":1122,"line_end":1122,"column_start":5,"column_end":59}},{"value":"/ assert!(!_2_255_minus_1.is_canonical());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44477,"byte_end":44521,"line_start":1123,"line_end":1123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44526,"byte_end":44529,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ let reduced = _2_255_minus_1.reduce();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44534,"byte_end":44576,"line_start":1125,"line_end":1125,"column_start":5,"column_end":47}},{"value":"/ assert!(reduced.is_canonical());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44581,"byte_end":44617,"line_start":1126,"line_end":1126,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44622,"byte_end":44629,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44634,"byte_end":44641,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":269},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"montgomery","qualname":"::montgomery","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":1574},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":336},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1612},{"krate":0,"index":1616},{"krate":0,"index":346},{"krate":0,"index":352},{"krate":0,"index":355}],"decl_id":null,"docs":" Scalar multiplication on the Montgomery form of Curve25519.","sig":null,"attributes":[{"value":"/ Scalar multiplication on the Montgomery form of Curve25519.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67217,"byte_end":67280,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67281,"byte_end":67284,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To avoid notational confusion with the Edwards code, we use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67285,"byte_end":67348,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ variables \\\\( u, v \\\\) for the Montgomery curve, so that “Montgomery","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67349,"byte_end":67423,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ \\\\(u\\\\)” here corresponds to “Montgomery \\\\(x\\\\)” elsewhere.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67424,"byte_end":67494,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67495,"byte_end":67498,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Montgomery arithmetic works not on the curve itself, but on the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67499,"byte_end":67566,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/ \\\\(u\\\\)-line, which discards sign information and unifies the curve","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67567,"byte_end":67638,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ and its quadratic twist.  See [_Montgomery curves and their","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67639,"byte_end":67702,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/ arithmetic_][costello-smith] by Costello and Smith for more details.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67703,"byte_end":67775,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67776,"byte_end":67779,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `MontgomeryPoint` struct contains the affine \\\\(u\\\\)-coordinate","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67780,"byte_end":67851,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\_0(P)\\\\) of a point \\\\(P\\\\) on either the curve or the twist.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67852,"byte_end":67922,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ Here the map \\\\(u\\_0 : \\mathcal M \\rightarrow \\mathbb F\\_p \\\\) is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67923,"byte_end":67992,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ defined by \\\\(u\\_0((u,v)) = u\\\\); \\\\(u\\_0(\\mathcal O) = 0\\\\).  See","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":67993,"byte_end":68063,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ section 5.4 of Costello-Smith for more details.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68064,"byte_end":68115,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68116,"byte_end":68119,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Scalar Multiplication","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68120,"byte_end":68147,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68148,"byte_end":68151,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on `MontgomeryPoint`s is provided by the `*`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68152,"byte_end":68222,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ operator, which implements the Montgomery ladder.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68223,"byte_end":68276,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68277,"byte_end":68280,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Edwards Conversion","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68281,"byte_end":68305,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68306,"byte_end":68309,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The \\\\(2\\\\)-to-\\\\(1\\\\) map from the Edwards model to the Montgomery","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68310,"byte_end":68381,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\\\)-line is provided by `EdwardsPoint::to_montgomery()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68382,"byte_end":68446,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68447,"byte_end":68450,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ To lift a `MontgomeryPoint` to an `EdwardsPoint`, use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68451,"byte_end":68508,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/ `MontgomeryPoint::to_edwards()`, which takes a sign parameter.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68509,"byte_end":68575,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ This function rejects `MontgomeryPoints` which correspond to points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68576,"byte_end":68647,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ on the twist.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68648,"byte_end":68665,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68666,"byte_end":68669,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [costello-smith]: https://eprint.iacr.org/2017/212.pdf","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":68670,"byte_end":68728,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69010,"byte_end":69035,"line_start":50,"line_end":50,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69614,"byte_end":69629,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"MontgomeryPoint","qualname":"::montgomery::MontgomeryPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of\n Curve25519 or its twist.\n","sig":null,"attributes":[{"value":"/ Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69391,"byte_end":69460,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/ Curve25519 or its twist.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69461,"byte_end":69489,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1576},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69630,"byte_end":69642,"line_start":71,"line_end":71,"column_start":28,"column_end":40},"name":"0","qualname":"::montgomery::MontgomeryPoint::0","value":"[u8; 32]","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70439,"byte_end":70447,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MontgomeryPoint>::as_bytes","value":"pub fn as_bytes<'a>(&'a Self) -> &'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `MontgomeryPoint` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `MontgomeryPoint` as an array of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70374,"byte_end":70427,"line_start":104,"line_end":104,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70575,"byte_end":70583,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MontgomeryPoint>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `MontgomeryPoint` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Convert this `MontgomeryPoint` to an array of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70507,"byte_end":70563,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":71220,"byte_end":71230,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"to_edwards","qualname":"<MontgomeryPoint>::to_edwards","value":"pub fn to_edwards(&Self, u8) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert to an `EdwardsPoint`, using the supplied\n choice of sign for the `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to convert to an `EdwardsPoint`, using the supplied","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70631,"byte_end":70694,"line_start":114,"line_end":114,"column_start":5,"column_end":68}},{"value":"/ choice of sign for the `EdwardsPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70699,"byte_end":70741,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70746,"byte_end":70749,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70754,"byte_end":70766,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70771,"byte_end":70774,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ * `sign`: a `u8` donating the desired sign of the resulting","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70779,"byte_end":70842,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/   `EdwardsPoint`.  `0` denotes positive and `1` negative.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70847,"byte_end":70908,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70913,"byte_end":70916,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70921,"byte_end":70933,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70938,"byte_end":70941,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ * `Some(EdwardsPoint)` if `self` is the \\\\(u\\\\)-coordinate of a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70946,"byte_end":71013,"line_start":124,"line_end":124,"column_start":5,"column_end":72}},{"value":"/ point on (the Montgomery form of) Curve25519;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":71018,"byte_end":71067,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":71072,"byte_end":71075,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ * `None` if `self` is the \\\\(u\\\\)-coordinate of a point on the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":71080,"byte_end":71146,"line_start":127,"line_end":127,"column_start":5,"column_end":71}},{"value":"/ twist of (the Montgomery form of) Curve25519;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":71151,"byte_end":71200,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":71205,"byte_end":71208,"line_start":129,"line_end":129,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"edwards","qualname":"::edwards","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":1619},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":1638},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1654},{"krate":0,"index":522},{"krate":0,"index":1657},{"krate":0,"index":525},{"krate":0,"index":1659},{"krate":0,"index":1663},{"krate":0,"index":1667},{"krate":0,"index":530},{"krate":0,"index":1670},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":548},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":579},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":1696},{"krate":0,"index":1704},{"krate":0,"index":1709},{"krate":0,"index":1714},{"krate":0,"index":1742},{"krate":0,"index":1746},{"krate":0,"index":1722},{"krate":0,"index":1730},{"krate":0,"index":1735},{"krate":0,"index":1740},{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1748},{"krate":0,"index":1756},{"krate":0,"index":1761},{"krate":0,"index":1766},{"krate":0,"index":1794},{"krate":0,"index":1798},{"krate":0,"index":1774},{"krate":0,"index":1782},{"krate":0,"index":1787},{"krate":0,"index":1792},{"krate":0,"index":1820},{"krate":0,"index":1824},{"krate":0,"index":1800},{"krate":0,"index":1808},{"krate":0,"index":1813},{"krate":0,"index":1818},{"krate":0,"index":1826},{"krate":0,"index":1830},{"krate":0,"index":582},{"krate":0,"index":588},{"krate":0,"index":593},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":599},{"krate":0,"index":604}],"decl_id":null,"docs":" Group operations for Curve25519, in Edwards form.","sig":null,"attributes":[{"value":"/ Group operations for Curve25519, in Edwards form.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82187,"byte_end":82240,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82241,"byte_end":82244,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82245,"byte_end":82273,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82274,"byte_end":82277,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedEdwardsY`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82278,"byte_end":82347,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82348,"byte_end":82403,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82404,"byte_end":82407,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82408,"byte_end":82431,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82432,"byte_end":82435,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The `EdwardsPoint` struct implements the `subtle::ConstantTimeEq`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82436,"byte_end":82505,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ trait for constant-time equality checking, and the Rust `Eq` trait","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82506,"byte_end":82576,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ for variable-time equality checking.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82577,"byte_end":82617,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82618,"byte_end":82621,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Cofactor-related functions","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82622,"byte_end":82655,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82656,"byte_end":82659,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The order of the group of points on the curve \\\\(\\mathcal E\\\\)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82660,"byte_end":82726,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ is \\\\(|\\mathcal E| = 8\\ell \\\\), so its structure is \\\\( \\mathcal","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82727,"byte_end":82795,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ E = \\mathcal E[8] \\times \\mathcal E[\\ell]\\\\).  The torsion","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82796,"byte_end":82858,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ subgroup \\\\( \\mathcal E[8] \\\\) consists of eight points of small","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82859,"byte_end":82927,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ order.  Technically, all of \\\\(\\mathcal E\\\\) is torsion, but we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82928,"byte_end":82995,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ use the word only to refer to the small \\\\(\\mathcal E[8]\\\\) part, not","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":82996,"byte_end":83069,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ the large prime-order \\\\(\\mathcal E[\\ell]\\\\) part.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83070,"byte_end":83124,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83125,"byte_end":83128,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[8] \\\\), use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83129,"byte_end":83184,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/ `EdwardsPoint::is_small_order()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83185,"byte_end":83222,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83223,"byte_end":83226,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[\\ell] \\\\), use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83227,"byte_end":83285,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ `EdwardsPoint::is_torsion_free()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83286,"byte_end":83324,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83325,"byte_end":83328,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To multiply by the cofactor, use `EdwardsPoint::mul_by_cofactor()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83329,"byte_end":83400,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83401,"byte_end":83404,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To avoid dealing with cofactors entirely, consider using Ristretto.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83405,"byte_end":83476,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83477,"byte_end":83480,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83481,"byte_end":83495,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83496,"byte_end":83499,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  To construct a scalar with a specific bit","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83500,"byte_end":83594,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ pattern, see `Scalar::from_bits()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83595,"byte_end":83634,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83635,"byte_end":83638,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83639,"byte_end":83667,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83668,"byte_end":83671,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Edwards points is provided by:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83672,"byte_end":83731,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83732,"byte_end":83735,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `EdwardsPoint`, which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83736,"byte_end":83805,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83806,"byte_end":83869,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83870,"byte_end":83873,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83874,"byte_end":83921,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ `EdwardsBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83922,"byte_end":83990,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ scalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":83991,"byte_end":84017,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84018,"byte_end":84021,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84022,"byte_end":84052,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84053,"byte_end":84122,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84123,"byte_end":84182,"line_start":63,"line_end":63,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84183,"byte_end":84186,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84187,"byte_end":84217,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84218,"byte_end":84291,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84292,"byte_end":84361,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84362,"byte_end":84365,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84366,"byte_end":84387,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84388,"byte_end":84391,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The Edwards arithmetic is implemented using the “extended twisted","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84392,"byte_end":84463,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/ coordinates” of Hisil, Wong, Carter, and Dawson, and the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84464,"byte_end":84526,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/ corresponding complete formulas.  For more details,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84527,"byte_end":84582,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ see the [`curve_models` submodule][curve_models]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84583,"byte_end":84635,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/ of the internal documentation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84636,"byte_end":84670,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84671,"byte_end":84674,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Validity Checking","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84675,"byte_end":84699,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84700,"byte_end":84703,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ There is no function for checking whether a point is valid.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84704,"byte_end":84767,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/ Instead, the `EdwardsPoint` struct is guaranteed to hold a valid","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84768,"byte_end":84836,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/ point on the curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84837,"byte_end":84860,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84861,"byte_end":84864,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ We use the Rust type system to make invalid points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84865,"byte_end":84919,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/ unrepresentable: `EdwardsPoint` objects can only be created via","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84920,"byte_end":84987,"line_start":84,"line_end":84,"column_start":1,"column_end":68}},{"value":"/ successful decompression of a compressed point, or else by","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":84988,"byte_end":85050,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/ operations on other (valid) `EdwardsPoint`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":85051,"byte_end":85099,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":85100,"byte_end":85103,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [curve_models]: https://doc-internal.dalek.rs/curve25519_dalek/backend/serial/curve_models/index.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":85104,"byte_end":85209,"line_start":88,"line_end":88,"column_start":1,"column_end":106}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":85491,"byte_end":85516,"line_start":94,"line_end":94,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1619},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87472,"byte_end":87490,"line_start":161,"line_end":161,"column_start":12,"column_end":30},"name":"CompressedEdwardsY","qualname":"::edwards::CompressedEdwardsY","value":"","parent":null,"children":[],"decl_id":null,"docs":" In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is\n determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","sig":null,"attributes":[{"value":"/ In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87132,"byte_end":87201,"line_start":155,"line_end":155,"column_start":1,"column_end":70}},{"value":"/ determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87202,"byte_end":87267,"line_start":156,"line_end":156,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87268,"byte_end":87271,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The first 255 bits of a `CompressedEdwardsY` represent the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87272,"byte_end":87334,"line_start":158,"line_end":158,"column_start":1,"column_end":63}},{"value":"/ \\\\(y\\\\)-coordinate.  The high bit of the 32nd byte gives the sign of \\\\(x\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87335,"byte_end":87416,"line_start":159,"line_end":159,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1621},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87491,"byte_end":87503,"line_start":161,"line_end":161,"column_start":31,"column_end":43},"name":"0","qualname":"::edwards::CompressedEdwardsY::0","value":"[u8; 32]","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87950,"byte_end":87958,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedEdwardsY>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedEdwardsY` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedEdwardsY` as an array of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87882,"byte_end":87938,"line_start":176,"line_end":176,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88076,"byte_end":88084,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedEdwardsY>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy this `CompressedEdwardsY` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Copy this `CompressedEdwardsY` to an array of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88008,"byte_end":88064,"line_start":181,"line_end":181,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88291,"byte_end":88301,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedEdwardsY>::decompress","value":"pub fn decompress(&Self) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `EdwardsPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88132,"byte_end":88179,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88184,"byte_end":88187,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input is not the \\\\(y\\\\)-coordinate of a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88192,"byte_end":88258,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/ curve point.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":88263,"byte_end":88279,"line_start":189,"line_end":189,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1638},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":92905,"byte_end":92917,"line_start":319,"line_end":319,"column_start":12,"column_end":24},"name":"EdwardsPoint","qualname":"::edwards::EdwardsPoint","value":"EdwardsPoint {  }","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642}],"decl_id":null,"docs":" An `EdwardsPoint` represents a point on the Edwards form of Curve25519.\n","sig":null,"attributes":[{"value":"/ An `EdwardsPoint` represents a point on the Edwards form of Curve25519.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":92772,"byte_end":92847,"line_start":316,"line_end":316,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":92871,"byte_end":92893,"line_start":318,"line_end":318,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93845,"byte_end":93855,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedEdwardsY>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedEdwardsY` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedEdwardsY` from a slice of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93676,"byte_end":93735,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93740,"byte_end":93743,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93748,"byte_end":93760,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93765,"byte_end":93768,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93773,"byte_end":93833,"line_start":350,"line_end":350,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":98074,"byte_end":98087,"line_start":480,"line_end":480,"column_start":12,"column_end":25},"name":"to_montgomery","qualname":"<EdwardsPoint>::to_montgomery","value":"pub fn to_montgomery(&Self) -> MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this `EdwardsPoint` on the Edwards model to the\n corresponding `MontgomeryPoint` on the Montgomery model.","sig":null,"attributes":[{"value":"/ Convert this `EdwardsPoint` on the Edwards model to the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97633,"byte_end":97692,"line_start":471,"line_end":471,"column_start":5,"column_end":64}},{"value":"/ corresponding `MontgomeryPoint` on the Montgomery model.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97697,"byte_end":97757,"line_start":472,"line_end":472,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97762,"byte_end":97765,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This function has one exceptional case; the identity point of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97770,"byte_end":97835,"line_start":474,"line_end":474,"column_start":5,"column_end":70}},{"value":"/ the Edwards curve is sent to the 2-torsion point \\\\((0,0)\\\\)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97840,"byte_end":97904,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ on the Montgomery curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97909,"byte_end":97937,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97942,"byte_end":97945,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Note that this is a one-way conversion, since the Montgomery","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":97950,"byte_end":98014,"line_start":478,"line_end":478,"column_start":5,"column_end":69}},{"value":"/ model does not retain sign information.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":98019,"byte_end":98062,"line_start":479,"line_end":479,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":98584,"byte_end":98592,"line_start":493,"line_end":493,"column_start":12,"column_end":20},"name":"compress","qualname":"<EdwardsPoint>::compress","value":"pub fn compress(&Self) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Compress this point to `CompressedEdwardsY` format.\n","sig":null,"attributes":[{"value":"/ Compress this point to `CompressedEdwardsY` format.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":98517,"byte_end":98572,"line_start":492,"line_end":492,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":105248,"byte_end":105276,"line_start":710,"line_end":710,"column_start":12,"column_end":40},"name":"VartimeEdwardsPrecomputation","qualname":"::edwards::VartimeEdwardsPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":104973,"byte_end":105058,"line_start":705,"line_end":705,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":105211,"byte_end":105236,"line_start":709,"line_end":709,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106280,"byte_end":106315,"line_start":744,"line_end":744,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<EdwardsPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &EdwardsPoint, &Scalar)\n-> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106185,"byte_end":106268,"line_start":743,"line_end":743,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1716},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":112324,"byte_end":112352,"line_start":904,"line_end":904,"column_start":31,"column_end":59},"name":"EdwardsBasepointTableRadix16","qualname":"::edwards::EdwardsBasepointTableRadix16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106629,"byte_end":106698,"line_start":756,"line_end":756,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106699,"byte_end":106764,"line_start":757,"line_end":757,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106765,"byte_end":106818,"line_start":758,"line_end":758,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106819,"byte_end":106822,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106823,"byte_end":106903,"line_start":760,"line_end":760,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106904,"byte_end":106907,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106908,"byte_end":106988,"line_start":762,"line_end":762,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106989,"byte_end":107023,"line_start":763,"line_end":763,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107024,"byte_end":107027,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107028,"byte_end":107077,"line_start":765,"line_end":765,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107078,"byte_end":107155,"line_start":766,"line_end":766,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107156,"byte_end":107206,"line_start":767,"line_end":767,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107207,"byte_end":107258,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107259,"byte_end":107310,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107311,"byte_end":107314,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107315,"byte_end":107352,"line_start":771,"line_end":771,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107353,"byte_end":107356,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107357,"byte_end":107436,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107437,"byte_end":107515,"line_start":774,"line_end":774,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107516,"byte_end":107597,"line_start":775,"line_end":775,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107598,"byte_end":107674,"line_start":776,"line_end":776,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107675,"byte_end":107752,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107753,"byte_end":107832,"line_start":778,"line_end":778,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107833,"byte_end":107905,"line_start":779,"line_end":779,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107906,"byte_end":107961,"line_start":780,"line_end":780,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107962,"byte_end":107968,"line_start":781,"line_end":781,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107969,"byte_end":108036,"line_start":782,"line_end":782,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108037,"byte_end":108043,"line_start":783,"line_end":783,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108044,"byte_end":108122,"line_start":784,"line_end":784,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108123,"byte_end":108176,"line_start":785,"line_end":785,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":112467,"byte_end":112495,"line_start":905,"line_end":905,"column_start":31,"column_end":59},"name":"EdwardsBasepointTableRadix32","qualname":"::edwards::EdwardsBasepointTableRadix32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106629,"byte_end":106698,"line_start":756,"line_end":756,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106699,"byte_end":106764,"line_start":757,"line_end":757,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106765,"byte_end":106818,"line_start":758,"line_end":758,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106819,"byte_end":106822,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106823,"byte_end":106903,"line_start":760,"line_end":760,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106904,"byte_end":106907,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106908,"byte_end":106988,"line_start":762,"line_end":762,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106989,"byte_end":107023,"line_start":763,"line_end":763,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107024,"byte_end":107027,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107028,"byte_end":107077,"line_start":765,"line_end":765,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107078,"byte_end":107155,"line_start":766,"line_end":766,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107156,"byte_end":107206,"line_start":767,"line_end":767,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107207,"byte_end":107258,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107259,"byte_end":107310,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107311,"byte_end":107314,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107315,"byte_end":107352,"line_start":771,"line_end":771,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107353,"byte_end":107356,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107357,"byte_end":107436,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107437,"byte_end":107515,"line_start":774,"line_end":774,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107516,"byte_end":107597,"line_start":775,"line_end":775,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107598,"byte_end":107674,"line_start":776,"line_end":776,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107675,"byte_end":107752,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107753,"byte_end":107832,"line_start":778,"line_end":778,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107833,"byte_end":107905,"line_start":779,"line_end":779,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107906,"byte_end":107961,"line_start":780,"line_end":780,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107962,"byte_end":107968,"line_start":781,"line_end":781,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107969,"byte_end":108036,"line_start":782,"line_end":782,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108037,"byte_end":108043,"line_start":783,"line_end":783,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108044,"byte_end":108122,"line_start":784,"line_end":784,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108123,"byte_end":108176,"line_start":785,"line_end":785,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":112610,"byte_end":112638,"line_start":906,"line_end":906,"column_start":31,"column_end":59},"name":"EdwardsBasepointTableRadix64","qualname":"::edwards::EdwardsBasepointTableRadix64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106629,"byte_end":106698,"line_start":756,"line_end":756,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106699,"byte_end":106764,"line_start":757,"line_end":757,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106765,"byte_end":106818,"line_start":758,"line_end":758,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106819,"byte_end":106822,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106823,"byte_end":106903,"line_start":760,"line_end":760,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106904,"byte_end":106907,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106908,"byte_end":106988,"line_start":762,"line_end":762,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106989,"byte_end":107023,"line_start":763,"line_end":763,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107024,"byte_end":107027,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107028,"byte_end":107077,"line_start":765,"line_end":765,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107078,"byte_end":107155,"line_start":766,"line_end":766,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107156,"byte_end":107206,"line_start":767,"line_end":767,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107207,"byte_end":107258,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107259,"byte_end":107310,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107311,"byte_end":107314,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107315,"byte_end":107352,"line_start":771,"line_end":771,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107353,"byte_end":107356,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107357,"byte_end":107436,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107437,"byte_end":107515,"line_start":774,"line_end":774,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107516,"byte_end":107597,"line_start":775,"line_end":775,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107598,"byte_end":107674,"line_start":776,"line_end":776,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107675,"byte_end":107752,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107753,"byte_end":107832,"line_start":778,"line_end":778,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107833,"byte_end":107905,"line_start":779,"line_end":779,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107906,"byte_end":107961,"line_start":780,"line_end":780,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107962,"byte_end":107968,"line_start":781,"line_end":781,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107969,"byte_end":108036,"line_start":782,"line_end":782,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108037,"byte_end":108043,"line_start":783,"line_end":783,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108044,"byte_end":108122,"line_start":784,"line_end":784,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108123,"byte_end":108176,"line_start":785,"line_end":785,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1794},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":112753,"byte_end":112782,"line_start":907,"line_end":907,"column_start":31,"column_end":60},"name":"EdwardsBasepointTableRadix128","qualname":"::edwards::EdwardsBasepointTableRadix128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106629,"byte_end":106698,"line_start":756,"line_end":756,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106699,"byte_end":106764,"line_start":757,"line_end":757,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106765,"byte_end":106818,"line_start":758,"line_end":758,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106819,"byte_end":106822,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106823,"byte_end":106903,"line_start":760,"line_end":760,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106904,"byte_end":106907,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106908,"byte_end":106988,"line_start":762,"line_end":762,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106989,"byte_end":107023,"line_start":763,"line_end":763,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107024,"byte_end":107027,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107028,"byte_end":107077,"line_start":765,"line_end":765,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107078,"byte_end":107155,"line_start":766,"line_end":766,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107156,"byte_end":107206,"line_start":767,"line_end":767,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107207,"byte_end":107258,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107259,"byte_end":107310,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107311,"byte_end":107314,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107315,"byte_end":107352,"line_start":771,"line_end":771,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107353,"byte_end":107356,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107357,"byte_end":107436,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107437,"byte_end":107515,"line_start":774,"line_end":774,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107516,"byte_end":107597,"line_start":775,"line_end":775,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107598,"byte_end":107674,"line_start":776,"line_end":776,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107675,"byte_end":107752,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107753,"byte_end":107832,"line_start":778,"line_end":778,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107833,"byte_end":107905,"line_start":779,"line_end":779,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107906,"byte_end":107961,"line_start":780,"line_end":780,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107962,"byte_end":107968,"line_start":781,"line_end":781,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107969,"byte_end":108036,"line_start":782,"line_end":782,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108037,"byte_end":108043,"line_start":783,"line_end":783,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108044,"byte_end":108122,"line_start":784,"line_end":784,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108123,"byte_end":108176,"line_start":785,"line_end":785,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1820},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":112898,"byte_end":112927,"line_start":908,"line_end":908,"column_start":31,"column_end":60},"name":"EdwardsBasepointTableRadix256","qualname":"::edwards::EdwardsBasepointTableRadix256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106629,"byte_end":106698,"line_start":756,"line_end":756,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106699,"byte_end":106764,"line_start":757,"line_end":757,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106765,"byte_end":106818,"line_start":758,"line_end":758,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106819,"byte_end":106822,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106823,"byte_end":106903,"line_start":760,"line_end":760,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106904,"byte_end":106907,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106908,"byte_end":106988,"line_start":762,"line_end":762,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106989,"byte_end":107023,"line_start":763,"line_end":763,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107024,"byte_end":107027,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107028,"byte_end":107077,"line_start":765,"line_end":765,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107078,"byte_end":107155,"line_start":766,"line_end":766,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107156,"byte_end":107206,"line_start":767,"line_end":767,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107207,"byte_end":107258,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107259,"byte_end":107310,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107311,"byte_end":107314,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107315,"byte_end":107352,"line_start":771,"line_end":771,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107353,"byte_end":107356,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107357,"byte_end":107436,"line_start":773,"line_end":773,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107437,"byte_end":107515,"line_start":774,"line_end":774,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107516,"byte_end":107597,"line_start":775,"line_end":775,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107598,"byte_end":107674,"line_start":776,"line_end":776,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107675,"byte_end":107752,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107753,"byte_end":107832,"line_start":778,"line_end":778,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107833,"byte_end":107905,"line_start":779,"line_end":779,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107906,"byte_end":107961,"line_start":780,"line_end":780,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107962,"byte_end":107968,"line_start":781,"line_end":781,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":107969,"byte_end":108036,"line_start":782,"line_end":782,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108037,"byte_end":108043,"line_start":783,"line_end":783,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108044,"byte_end":108122,"line_start":784,"line_end":784,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":108123,"byte_end":108176,"line_start":785,"line_end":785,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1826},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114855,"byte_end":114876,"line_start":945,"line_end":945,"column_start":12,"column_end":33},"name":"EdwardsBasepointTable","qualname":"::edwards::EdwardsBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113279,"byte_end":113348,"line_start":914,"line_end":914,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113349,"byte_end":113414,"line_start":915,"line_end":915,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113415,"byte_end":113468,"line_start":916,"line_end":916,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113469,"byte_end":113472,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113473,"byte_end":113553,"line_start":918,"line_end":918,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113554,"byte_end":113557,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113558,"byte_end":113638,"line_start":920,"line_end":920,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113639,"byte_end":113673,"line_start":921,"line_end":921,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113674,"byte_end":113677,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113678,"byte_end":113727,"line_start":923,"line_end":923,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113728,"byte_end":113805,"line_start":924,"line_end":924,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113806,"byte_end":113856,"line_start":925,"line_end":925,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113857,"byte_end":113908,"line_start":926,"line_end":926,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113909,"byte_end":113960,"line_start":927,"line_end":927,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113961,"byte_end":113964,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":113965,"byte_end":114002,"line_start":929,"line_end":929,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114003,"byte_end":114006,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114007,"byte_end":114086,"line_start":931,"line_end":931,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114087,"byte_end":114165,"line_start":932,"line_end":932,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114166,"byte_end":114247,"line_start":933,"line_end":933,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114248,"byte_end":114324,"line_start":934,"line_end":934,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114325,"byte_end":114402,"line_start":935,"line_end":935,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114403,"byte_end":114482,"line_start":936,"line_end":936,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114483,"byte_end":114555,"line_start":937,"line_end":937,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114556,"byte_end":114611,"line_start":938,"line_end":938,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114612,"byte_end":114618,"line_start":939,"line_end":939,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114619,"byte_end":114686,"line_start":940,"line_end":940,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114687,"byte_end":114693,"line_start":941,"line_end":941,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114694,"byte_end":114772,"line_start":942,"line_end":942,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114773,"byte_end":114826,"line_start":943,"line_end":943,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115054,"byte_end":115060,"line_start":950,"line_end":950,"column_start":12,"column_end":18},"name":"create","qualname":"<EdwardsBasepointTable>::create","value":"pub fn create(&EdwardsPoint) -> EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a table of precomputed multiples of `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a table of precomputed multiples of `basepoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114960,"byte_end":115019,"line_start":948,"line_end":948,"column_start":5,"column_end":64}},{"value":"allow(warnings)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115024,"byte_end":115042,"line_start":949,"line_end":949,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116506,"byte_end":116519,"line_start":982,"line_end":982,"column_start":12,"column_end":25},"name":"basepoint_mul","qualname":"<EdwardsBasepointTable>::basepoint_mul","value":"pub fn basepoint_mul(&Self, &Scalar) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The computation uses Pippenger's algorithm, as described on\n page 13 of the Ed25519 paper.  Write the scalar \\\\(a\\\\) in radix \\\\(16\\\\) with\n coefficients in \\\\([-8,8)\\\\), i.e.,\n $$\n     a = a\\_0 + a\\_1 16\\^1 + \\cdots + a\\_{63} 16\\^{63},\n $$\n with \\\\(-8 \\leq a_i < 8\\\\), \\\\(-8 \\leq a\\_{63} \\leq 8\\\\).  Then\n $$\n     a B = a\\_0 B + a\\_1 16\\^1 B + \\cdots + a\\_{63} 16\\^{63} B.\n $$\n Grouping even and odd coefficients gives\n $$\n \\begin{aligned}\n     a B = \\quad a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B    \\\\\\\\\n               + a\\_1 16\\^1 B +& a\\_3 16\\^3 B + \\cdots + a\\_{63} 16\\^{63} B    \\\\\\\\\n         = \\quad(a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B)   \\\\\\\\\n            + 16(a\\_1 16\\^0 B +& a\\_3 16\\^2 B + \\cdots + a\\_{63} 16\\^{62} B).  \\\\\\\\\n \\end{aligned}\n $$\n For each \\\\(i = 0 \\ldots 31\\\\), we create a lookup table of\n $$\n [16\\^{2i} B, \\ldots, 8\\cdot16\\^{2i} B],\n $$\n and use it to select \\\\( x \\cdot 16\\^{2i} \\cdot B \\\\) in constant time.","sig":null,"attributes":[{"value":"/ The computation uses Pippenger's algorithm, as described on","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115189,"byte_end":115252,"line_start":954,"line_end":954,"column_start":5,"column_end":68}},{"value":"/ page 13 of the Ed25519 paper.  Write the scalar \\\\(a\\\\) in radix \\\\(16\\\\) with","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115257,"byte_end":115339,"line_start":955,"line_end":955,"column_start":5,"column_end":87}},{"value":"/ coefficients in \\\\([-8,8)\\\\), i.e.,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115344,"byte_end":115383,"line_start":956,"line_end":956,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115388,"byte_end":115394,"line_start":957,"line_end":957,"column_start":5,"column_end":11}},{"value":"/     a = a\\_0 + a\\_1 16\\^1 + \\cdots + a\\_{63} 16\\^{63},","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115399,"byte_end":115457,"line_start":958,"line_end":958,"column_start":5,"column_end":63}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115462,"byte_end":115468,"line_start":959,"line_end":959,"column_start":5,"column_end":11}},{"value":"/ with \\\\(-8 \\leq a_i < 8\\\\), \\\\(-8 \\leq a\\_{63} \\leq 8\\\\).  Then","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115473,"byte_end":115540,"line_start":960,"line_end":960,"column_start":5,"column_end":72}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115545,"byte_end":115551,"line_start":961,"line_end":961,"column_start":5,"column_end":11}},{"value":"/     a B = a\\_0 B + a\\_1 16\\^1 B + \\cdots + a\\_{63} 16\\^{63} B.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115556,"byte_end":115622,"line_start":962,"line_end":962,"column_start":5,"column_end":71}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115627,"byte_end":115633,"line_start":963,"line_end":963,"column_start":5,"column_end":11}},{"value":"/ Grouping even and odd coefficients gives","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115638,"byte_end":115682,"line_start":964,"line_end":964,"column_start":5,"column_end":49}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115687,"byte_end":115693,"line_start":965,"line_end":965,"column_start":5,"column_end":11}},{"value":"/ \\begin{aligned}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115698,"byte_end":115717,"line_start":966,"line_end":966,"column_start":5,"column_end":24}},{"value":"/     a B = \\quad a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B    \\\\\\\\","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115722,"byte_end":115808,"line_start":967,"line_end":967,"column_start":5,"column_end":91}},{"value":"/               + a\\_1 16\\^1 B +& a\\_3 16\\^3 B + \\cdots + a\\_{63} 16\\^{63} B    \\\\\\\\","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115813,"byte_end":115899,"line_start":968,"line_end":968,"column_start":5,"column_end":91}},{"value":"/         = \\quad(a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B)   \\\\\\\\","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115904,"byte_end":115990,"line_start":969,"line_end":969,"column_start":5,"column_end":91}},{"value":"/            + 16(a\\_1 16\\^0 B +& a\\_3 16\\^2 B + \\cdots + a\\_{63} 16\\^{62} B).  \\\\\\\\","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":115995,"byte_end":116081,"line_start":970,"line_end":970,"column_start":5,"column_end":91}},{"value":"/ \\end{aligned}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116086,"byte_end":116103,"line_start":971,"line_end":971,"column_start":5,"column_end":22}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116108,"byte_end":116114,"line_start":972,"line_end":972,"column_start":5,"column_end":11}},{"value":"/ For each \\\\(i = 0 \\ldots 31\\\\), we create a lookup table of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116119,"byte_end":116182,"line_start":973,"line_end":973,"column_start":5,"column_end":68}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116187,"byte_end":116193,"line_start":974,"line_end":974,"column_start":5,"column_end":11}},{"value":"/ [16\\^{2i} B, \\ldots, 8\\cdot16\\^{2i} B],","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116198,"byte_end":116241,"line_start":975,"line_end":975,"column_start":5,"column_end":48}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116246,"byte_end":116252,"line_start":976,"line_end":976,"column_start":5,"column_end":11}},{"value":"/ and use it to select \\\\( x \\cdot 16\\^{2i} \\cdot B \\\\) in constant time.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116257,"byte_end":116332,"line_start":977,"line_end":977,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116337,"byte_end":116340,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The radix-\\\\(16\\\\) representation requires that the scalar is bounded","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116345,"byte_end":116418,"line_start":979,"line_end":979,"column_start":5,"column_end":78}},{"value":"/ by \\\\(2\\^{255}\\\\), which is always the case.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116423,"byte_end":116471,"line_start":980,"line_end":980,"column_start":5,"column_end":53}},{"value":"allow(warnings)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116476,"byte_end":116494,"line_start":981,"line_end":981,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":117074,"byte_end":117083,"line_start":1003,"line_end":1003,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<EdwardsBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as an `EdwardsPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as an `EdwardsPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":116981,"byte_end":117039,"line_start":1001,"line_end":1001,"column_start":5,"column_end":63}},{"value":"allow(warnings)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":117044,"byte_end":117062,"line_start":1002,"line_end":1002,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":119797,"byte_end":119812,"line_start":1065,"line_end":1065,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<EdwardsPoint>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Multiply by the cofactor: return \\\\([8]P\\\\).\n","sig":null,"attributes":[{"value":"/ Multiply by the cofactor: return \\\\([8]P\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":119737,"byte_end":119785,"line_start":1064,"line_end":1064,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121045,"byte_end":121059,"line_start":1104,"line_end":1104,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<EdwardsPoint>::is_small_order","value":"pub fn is_small_order(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is of small order.","sig":null,"attributes":[{"value":"/ Determine if this point is of small order.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120330,"byte_end":120376,"line_start":1081,"line_end":1081,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120381,"byte_end":120384,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120389,"byte_end":120401,"line_start":1083,"line_end":1083,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120406,"byte_end":120409,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` is in the torsion subgroup \\\\( \\mathcal E[8] \\\\);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120414,"byte_end":120486,"line_start":1085,"line_end":1085,"column_start":5,"column_end":77}},{"value":"/ * `false` if `self` is not in the torsion subgroup \\\\( \\mathcal E[8] \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120491,"byte_end":120568,"line_start":1086,"line_end":1086,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120573,"byte_end":120576,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120581,"byte_end":120594,"line_start":1088,"line_end":1088,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120599,"byte_end":120602,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120607,"byte_end":120614,"line_start":1090,"line_end":1090,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120619,"byte_end":120655,"line_start":1091,"line_end":1091,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120660,"byte_end":120663,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120668,"byte_end":120712,"line_start":1093,"line_end":1093,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120717,"byte_end":120764,"line_start":1094,"line_end":1094,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120769,"byte_end":120809,"line_start":1095,"line_end":1095,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120814,"byte_end":120854,"line_start":1096,"line_end":1096,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120859,"byte_end":120862,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ // P has large order","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120867,"byte_end":120891,"line_start":1098,"line_end":1098,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_small_order(), false);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120896,"byte_end":120938,"line_start":1099,"line_end":1099,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120943,"byte_end":120946,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ // Q has small order","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120951,"byte_end":120975,"line_start":1101,"line_end":1101,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Q.is_small_order(), true);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":120980,"byte_end":121021,"line_start":1102,"line_end":1102,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121026,"byte_end":121033,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121969,"byte_end":121984,"line_start":1134,"line_end":1134,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<EdwardsPoint>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is “torsion-free”, i.e., is contained in\n the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determine if this point is “torsion-free”, i.e., is contained in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121133,"byte_end":121205,"line_start":1108,"line_end":1108,"column_start":5,"column_end":73}},{"value":"/ the prime-order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121210,"byte_end":121239,"line_start":1109,"line_end":1109,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121244,"byte_end":121247,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121252,"byte_end":121264,"line_start":1111,"line_end":1111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121269,"byte_end":121272,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` has zero torsion component and is in the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121277,"byte_end":121340,"line_start":1113,"line_end":1113,"column_start":5,"column_end":68}},{"value":"/ prime-order subgroup;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121345,"byte_end":121370,"line_start":1114,"line_end":1114,"column_start":5,"column_end":30}},{"value":"/ * `false` if `self` has a nonzero torsion component and is not","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121375,"byte_end":121441,"line_start":1115,"line_end":1115,"column_start":5,"column_end":71}},{"value":"/ in the prime-order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121446,"byte_end":121478,"line_start":1116,"line_end":1116,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121483,"byte_end":121486,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121491,"byte_end":121504,"line_start":1118,"line_end":1118,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121509,"byte_end":121512,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121517,"byte_end":121524,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121529,"byte_end":121565,"line_start":1121,"line_end":1121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121570,"byte_end":121573,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121578,"byte_end":121622,"line_start":1123,"line_end":1123,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121627,"byte_end":121674,"line_start":1124,"line_end":1124,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121679,"byte_end":121719,"line_start":1125,"line_end":1125,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121724,"byte_end":121764,"line_start":1126,"line_end":1126,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121769,"byte_end":121772,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ // P is torsion-free","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121777,"byte_end":121801,"line_start":1128,"line_end":1128,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_torsion_free(), true);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121806,"byte_end":121848,"line_start":1129,"line_end":1129,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121853,"byte_end":121856,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ // P + Q is not torsion-free","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121861,"byte_end":121893,"line_start":1131,"line_end":1131,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((P+Q).is_torsion_free(), false);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121898,"byte_end":121945,"line_start":1132,"line_end":1132,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":121950,"byte_end":121957,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":606},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ristretto","qualname":"::ristretto","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":1892},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":712},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":1929},{"krate":0,"index":1933},{"krate":0,"index":1937},{"krate":0,"index":756},{"krate":0,"index":1940},{"krate":0,"index":759},{"krate":0,"index":1942},{"krate":0,"index":1946},{"krate":0,"index":1950},{"krate":0,"index":764},{"krate":0,"index":1953},{"krate":0,"index":767},{"krate":0,"index":772},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":787},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1961},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1976},{"krate":0,"index":792},{"krate":0,"index":798},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":819},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":821},{"krate":0,"index":826},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838}],"decl_id":null,"docs":" An implementation of [Ristretto][ristretto_main], which provides a\n prime-order group.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":143955,"byte_end":143980,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ An implementation of [Ristretto][ristretto_main], which provides a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":143982,"byte_end":144052,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ prime-order group.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144053,"byte_end":144075,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144076,"byte_end":144079,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # The Ristretto Group","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144080,"byte_end":144105,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144106,"byte_end":144109,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Ristretto is a modification of Mike Hamburg's Decaf scheme to work","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144110,"byte_end":144180,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ with cofactor-\\\\(8\\\\) curves, such as Curve25519.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144181,"byte_end":144234,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144235,"byte_end":144238,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The introduction of the Decaf paper, [_Decaf:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144239,"byte_end":144288,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ Eliminating cofactors through point","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144289,"byte_end":144328,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ compression_](https://eprint.iacr.org/2015/673.pdf), notes that while","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144329,"byte_end":144402,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ most cryptographic systems require a group of prime order, most","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144403,"byte_end":144470,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ concrete implementations using elliptic curve groups fall short –","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144471,"byte_end":144542,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ they either provide a group of prime order, but with incomplete or","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144543,"byte_end":144613,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ variable-time addition formulae (for instance, most Weierstrass","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144614,"byte_end":144681,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ models), or else they provide a fast and safe implementation of a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144682,"byte_end":144751,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ group whose order is not quite a prime \\\\(q\\\\), but \\\\(hq\\\\) for a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144752,"byte_end":144822,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ small cofactor \\\\(h\\\\) (for instance, Edwards curves, which have","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144823,"byte_end":144891,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ cofactor at least \\\\(4\\\\)).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144892,"byte_end":144923,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144924,"byte_end":144927,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This abstraction mismatch is commonly “handled” by pushing the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144928,"byte_end":144998,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ complexity upwards, adding ad-hoc protocol modifications.  But","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":144999,"byte_end":145065,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ these modifications require careful analysis and are a recurring","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145066,"byte_end":145134,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ source of [vulnerabilities][cryptonote] and [design","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145135,"byte_end":145190,"line_start":41,"line_end":41,"column_start":1,"column_end":56}},{"value":"/ complications][ed25519_hkd].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145191,"byte_end":145223,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145224,"byte_end":145227,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Instead, Decaf (and Ristretto) use a quotient group to implement a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145228,"byte_end":145298,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ prime-order group using a non-prime-order curve.  This provides","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145299,"byte_end":145366,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ the correct abstraction for cryptographic systems, while retaining","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145367,"byte_end":145437,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ the speed and safety benefits of an Edwards curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145438,"byte_end":145492,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145493,"byte_end":145496,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Decaf is named “after the procedure which divides the effect of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145497,"byte_end":145566,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ coffee by \\\\(4\\\\)”.  However, Curve25519 has a cofactor of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145567,"byte_end":145631,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ \\\\(8\\\\).  To eliminate its cofactor, Ristretto restricts further;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145632,"byte_end":145701,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ this [additional restriction][ristretto_coffee] gives the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145702,"byte_end":145763,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/ _Ristretto_ encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145764,"byte_end":145789,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145790,"byte_end":145793,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ More details on why Ristretto is necessary can be found in the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145794,"byte_end":145860,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ [Why Ristretto?][why_ristretto] section of the Ristretto website.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145861,"byte_end":145930,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145931,"byte_end":145934,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Ristretto","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145935,"byte_end":145948,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ points are provided in `curve25519-dalek` by the `RistrettoPoint`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":145949,"byte_end":146018,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ struct.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146019,"byte_end":146030,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146031,"byte_end":146034,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146035,"byte_end":146063,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146064,"byte_end":146067,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedRistretto`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146068,"byte_end":146138,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146139,"byte_end":146194,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146195,"byte_end":146198,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The encoding is not batchable, but it is possible to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146199,"byte_end":146255,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/ double-and-encode in a batch using","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146256,"byte_end":146294,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/ `RistrettoPoint::double_and_compress_batch`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146295,"byte_end":146343,"line_start":69,"line_end":69,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146344,"byte_end":146347,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146348,"byte_end":146371,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146372,"byte_end":146375,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Testing equality of points on an Edwards curve in projective","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146376,"byte_end":146440,"line_start":73,"line_end":73,"column_start":1,"column_end":65}},{"value":"/ coordinates requires an expensive inversion.  By contrast, equality","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146441,"byte_end":146512,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ checking in the Ristretto group can be done in projective","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146513,"byte_end":146574,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/ coordinates without requiring an inversion, so it is much faster.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146575,"byte_end":146644,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146645,"byte_end":146648,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The `RistrettoPoint` struct implements the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146649,"byte_end":146695,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/ `subtle::ConstantTimeEq` trait for constant-time equality","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146696,"byte_end":146757,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/ checking, and the Rust `Eq` trait for variable-time equality","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146758,"byte_end":146822,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/ checking.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146823,"byte_end":146836,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146837,"byte_end":146840,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146841,"byte_end":146855,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146856,"byte_end":146859,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  Each scalar has a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146860,"byte_end":146930,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/ canonical representative mod the group order.  To attempt to load","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":146931,"byte_end":147000,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/ a supposedly-canonical scalar, use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147001,"byte_end":147039,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ `Scalar::from_canonical_bytes()`. To check whether a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147040,"byte_end":147096,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/ representative is canonical, use `Scalar::is_canonical()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147097,"byte_end":147159,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147160,"byte_end":147163,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147164,"byte_end":147192,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147193,"byte_end":147196,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Ristretto points is provided by:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147197,"byte_end":147258,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147259,"byte_end":147262,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `RistrettoPoint`, which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147263,"byte_end":147334,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147335,"byte_end":147398,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147399,"byte_end":147402,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147403,"byte_end":147450,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/ `RistrettoBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147451,"byte_end":147521,"line_start":99,"line_end":99,"column_start":1,"column_end":71}},{"value":"/ scalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147522,"byte_end":147548,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147549,"byte_end":147552,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147553,"byte_end":147583,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147584,"byte_end":147653,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147654,"byte_end":147713,"line_start":104,"line_end":104,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147714,"byte_end":147717,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147718,"byte_end":147748,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147749,"byte_end":147822,"line_start":107,"line_end":107,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147823,"byte_end":147892,"line_start":108,"line_end":108,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147893,"byte_end":147896,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Random Points and Hashing to Ristretto","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147897,"byte_end":147942,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147943,"byte_end":147946,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The Ristretto group comes equipped with an Elligator map.  This is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":147947,"byte_end":148017,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ used to implement","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148018,"byte_end":148039,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148040,"byte_end":148043,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::random()`, which generates random points from an","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148044,"byte_end":148115,"line_start":115,"line_end":115,"column_start":1,"column_end":72}},{"value":"/ RNG;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148116,"byte_end":148124,"line_start":116,"line_end":116,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148125,"byte_end":148128,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::from_hash()` and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148129,"byte_end":148168,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/ `RistrettoPoint::hash_from_bytes()`, which perform hashing to the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148169,"byte_end":148238,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ group.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148239,"byte_end":148249,"line_start":120,"line_end":120,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148250,"byte_end":148253,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The Elligator map itself is not currently exposed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148254,"byte_end":148308,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148309,"byte_end":148312,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148313,"byte_end":148334,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148335,"byte_end":148338,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The Decaf suggestion is to use a quotient group, such as \\\\(\\mathcal","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148339,"byte_end":148411,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ E / \\mathcal E[4]\\\\) or \\\\(2 \\mathcal E / \\mathcal E[2] \\\\), to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148412,"byte_end":148479,"line_start":127,"line_end":127,"column_start":1,"column_end":68}},{"value":"/ implement a prime-order group using a non-prime-order curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148480,"byte_end":148544,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148545,"byte_end":148548,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This requires only changing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148549,"byte_end":148580,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148581,"byte_end":148584,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ 1. the function for equality checking (so that two representatives","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148585,"byte_end":148655,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/    of the same coset are considered equal);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148656,"byte_end":148703,"line_start":133,"line_end":133,"column_start":1,"column_end":48}},{"value":"/ 2. the function for encoding (so that two representatives of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148704,"byte_end":148772,"line_start":134,"line_end":134,"column_start":1,"column_end":69}},{"value":"/    same coset are encoded as identical bitstrings);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148773,"byte_end":148828,"line_start":135,"line_end":135,"column_start":1,"column_end":56}},{"value":"/ 3. the function for decoding (so that only the canonical encoding of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148829,"byte_end":148901,"line_start":136,"line_end":136,"column_start":1,"column_end":73}},{"value":"/    a coset is accepted).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148902,"byte_end":148930,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148931,"byte_end":148934,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Internally, each coset is represented by a curve point; two points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":148935,"byte_end":149005,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/ \\\\( P, Q \\\\) may represent the same coset in the same way that two","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149006,"byte_end":149076,"line_start":140,"line_end":140,"column_start":1,"column_end":71}},{"value":"/ points with different \\\\(X,Y,Z\\\\) coordinates may represent the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149077,"byte_end":149144,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ same point.  The group operations are carried out with no overhead","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149145,"byte_end":149215,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/ using Edwards formulas.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149216,"byte_end":149243,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149244,"byte_end":149247,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Notes on the details of the encoding can be found in the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149248,"byte_end":149308,"line_start":145,"line_end":145,"column_start":1,"column_end":61}},{"value":"/ [Details][ristretto_notes] section of the Ristretto website.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149309,"byte_end":149373,"line_start":146,"line_end":146,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149374,"byte_end":149377,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [cryptonote]:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149378,"byte_end":149395,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000898.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149396,"byte_end":149461,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/ [ed25519_hkd]:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149462,"byte_end":149480,"line_start":150,"line_end":150,"column_start":1,"column_end":19}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000858.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149481,"byte_end":149546,"line_start":151,"line_end":151,"column_start":1,"column_end":66}},{"value":"/ [ristretto_coffee]:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149547,"byte_end":149570,"line_start":152,"line_end":152,"column_start":1,"column_end":24}},{"value":"/ https://en.wikipedia.org/wiki/Ristretto","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149571,"byte_end":149614,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/ [ristretto_notes]:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149615,"byte_end":149637,"line_start":154,"line_end":154,"column_start":1,"column_end":23}},{"value":"/ https://ristretto.group/details/index.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149638,"byte_end":149684,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/ [why_ristretto]:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149685,"byte_end":149705,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"/ https://ristretto.group/why_ristretto.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149706,"byte_end":149752,"line_start":157,"line_end":157,"column_start":1,"column_end":47}},{"value":"/ [ristretto_main]:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149753,"byte_end":149774,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"/ https://ristretto.group/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":149775,"byte_end":149803,"line_start":159,"line_end":159,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1892},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151211,"byte_end":151230,"line_start":213,"line_end":213,"column_start":12,"column_end":31},"name":"CompressedRistretto","qualname":"::ristretto::CompressedRistretto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Ristretto point, in compressed wire format.","sig":null,"attributes":[{"value":"/ A Ristretto point, in compressed wire format.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":150991,"byte_end":151040,"line_start":208,"line_end":208,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151041,"byte_end":151044,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ The Ristretto encoding is canonical, so two points are equal if and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151045,"byte_end":151116,"line_start":210,"line_end":210,"column_start":1,"column_end":72}},{"value":"/ only if their encodings are equal.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151117,"byte_end":151155,"line_start":211,"line_end":211,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1894},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151231,"byte_end":151243,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"name":"0","qualname":"::ristretto::CompressedRistretto::0","value":"[u8; 32]","parent":{"krate":0,"index":1892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151503,"byte_end":151511,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedRistretto>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy the bytes of this `CompressedRistretto`.\n","sig":null,"attributes":[{"value":"/ Copy the bytes of this `CompressedRistretto`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151442,"byte_end":151491,"line_start":222,"line_end":222,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151628,"byte_end":151636,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedRistretto>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedRistretto` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedRistretto` as an array of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151559,"byte_end":151616,"line_start":227,"line_end":227,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151856,"byte_end":151866,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedRistretto>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedRistretto` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedRistretto` from a slice of bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151686,"byte_end":151746,"line_start":232,"line_end":232,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151751,"byte_end":151754,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151759,"byte_end":151771,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151776,"byte_end":151779,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151784,"byte_end":151844,"line_start":236,"line_end":236,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152275,"byte_end":152285,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedRistretto>::decompress","value":"pub fn decompress(&Self) -> Option<RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152021,"byte_end":152070,"line_start":245,"line_end":245,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152075,"byte_end":152078,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152083,"byte_end":152095,"line_start":247,"line_end":247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152100,"byte_end":152103,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ - `Some(RistrettoPoint)` if `self` was the canonical encoding of a point;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152108,"byte_end":152185,"line_start":249,"line_end":249,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152190,"byte_end":152193,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ - `None` if `self` was not the canonical encoding of a point.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":152198,"byte_end":152263,"line_start":251,"line_end":251,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1911},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158915,"byte_end":158929,"line_start":439,"line_end":439,"column_start":12,"column_end":26},"name":"RistrettoPoint","qualname":"::ristretto::RistrettoPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `RistrettoPoint` represents a point in the Ristretto group for\n Curve25519.  Ristretto, a variant of Decaf, constructs a\n prime-order group as a quotient group of a subgroup of (the\n Edwards form of) Curve25519.","sig":null,"attributes":[{"value":"/ A `RistrettoPoint` represents a point in the Ristretto group for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158345,"byte_end":158413,"line_start":427,"line_end":427,"column_start":1,"column_end":69}},{"value":"/ Curve25519.  Ristretto, a variant of Decaf, constructs a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158414,"byte_end":158474,"line_start":428,"line_end":428,"column_start":1,"column_end":61}},{"value":"/ prime-order group as a quotient group of a subgroup of (the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158475,"byte_end":158538,"line_start":429,"line_end":429,"column_start":1,"column_end":64}},{"value":"/ Edwards form of) Curve25519.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158539,"byte_end":158571,"line_start":430,"line_end":430,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158572,"byte_end":158575,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Internally, a `RistrettoPoint` is implemented as a wrapper type","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158576,"byte_end":158643,"line_start":432,"line_end":432,"column_start":1,"column_end":68}},{"value":"/ around `EdwardsPoint`, with custom equality, compression, and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158644,"byte_end":158709,"line_start":433,"line_end":433,"column_start":1,"column_end":66}},{"value":"/ decompression routines to account for the quotient.  This means that","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158710,"byte_end":158782,"line_start":434,"line_end":434,"column_start":1,"column_end":73}},{"value":"/ operations on `RistrettoPoint`s are exactly as fast as operations on","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158783,"byte_end":158855,"line_start":435,"line_end":435,"column_start":1,"column_end":73}},{"value":"/ `EdwardsPoint`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158856,"byte_end":158876,"line_start":436,"line_end":436,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158877,"byte_end":158880,"line_start":437,"line_end":437,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":159048,"byte_end":159056,"line_start":443,"line_end":443,"column_start":12,"column_end":20},"name":"compress","qualname":"<RistrettoPoint>::compress","value":"pub fn compress(&Self) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Compress this point using the Ristretto encoding.\n","sig":null,"attributes":[{"value":"/ Compress this point using the Ristretto encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158983,"byte_end":159036,"line_start":442,"line_end":442,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161360,"byte_end":161385,"line_start":507,"line_end":507,"column_start":12,"column_end":37},"name":"double_and_compress_batch","qualname":"<RistrettoPoint>::double_and_compress_batch","value":"pub fn double_and_compress_batch<'a, I>(I) -> Vec<CompressedRistretto> where\nI: IntoIterator<Item = &'a RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Double-and-compress a batch of points.  The Ristretto encoding\n is not batchable, since it requires an inverse square root.","sig":null,"attributes":[{"value":"/ Double-and-compress a batch of points.  The Ristretto encoding","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160181,"byte_end":160247,"line_start":478,"line_end":478,"column_start":5,"column_end":71}},{"value":"/ is not batchable, since it requires an inverse square root.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160252,"byte_end":160315,"line_start":479,"line_end":479,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160320,"byte_end":160323,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ However, given input points \\\\( P\\_1, \\ldots, P\\_n, \\\\)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160328,"byte_end":160387,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/ it is possible to compute the encodings of their doubles \\\\(","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160392,"byte_end":160456,"line_start":482,"line_end":482,"column_start":5,"column_end":69}},{"value":"/ \\mathrm{enc}( [2]P\\_1), \\ldots, \\mathrm{enc}( [2]P\\_n ) \\\\)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160461,"byte_end":160524,"line_start":483,"line_end":483,"column_start":5,"column_end":68}},{"value":"/ in a batch.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160529,"byte_end":160544,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160549,"byte_end":160552,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160557,"byte_end":160564,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160569,"byte_end":160605,"line_start":487,"line_end":487,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160610,"byte_end":160664,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/ extern crate rand_core;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160669,"byte_end":160696,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160701,"byte_end":160726,"line_start":490,"line_end":490,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160731,"byte_end":160734,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160739,"byte_end":160802,"line_start":492,"line_end":492,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160807,"byte_end":160892,"line_start":493,"line_end":493,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160897,"byte_end":160914,"line_start":494,"line_end":494,"column_start":5,"column_end":22}},{"value":"/ let mut rng = OsRng;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160919,"byte_end":160943,"line_start":495,"line_end":495,"column_start":5,"column_end":29}},{"value":"/ let points: Vec<RistrettoPoint> =","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160948,"byte_end":160985,"line_start":496,"line_end":496,"column_start":5,"column_end":42}},{"value":"/     (0..32).map(|_| RistrettoPoint::random(&mut rng)).collect();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":160990,"byte_end":161058,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161063,"byte_end":161066,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let compressed = RistrettoPoint::double_and_compress_batch(&points);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161071,"byte_end":161143,"line_start":499,"line_end":499,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161148,"byte_end":161151,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ for (P, P2_compressed) in points.iter().zip(compressed.iter()) {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161156,"byte_end":161224,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(*P2_compressed, (P + P).compress());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161229,"byte_end":161284,"line_start":502,"line_end":502,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161289,"byte_end":161294,"line_start":503,"line_end":503,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161299,"byte_end":161306,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161311,"byte_end":161318,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161323,"byte_end":161348,"line_start":506,"line_end":506,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166403,"byte_end":166409,"line_start":652,"line_end":652,"column_start":12,"column_end":18},"name":"random","qualname":"<RistrettoPoint>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":165811,"byte_end":165894,"line_start":636,"line_end":636,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":165899,"byte_end":165902,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":165907,"byte_end":165919,"line_start":638,"line_end":638,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":165924,"byte_end":165927,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":165932,"byte_end":166006,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166011,"byte_end":166014,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166019,"byte_end":166032,"line_start":642,"line_end":642,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166037,"byte_end":166040,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ A random element of the Ristretto group.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166045,"byte_end":166089,"line_start":644,"line_end":644,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166094,"byte_end":166097,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166102,"byte_end":166122,"line_start":646,"line_end":646,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166127,"byte_end":166130,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166135,"byte_end":166196,"line_start":648,"line_end":648,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166201,"byte_end":166263,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166268,"byte_end":166330,"line_start":650,"line_end":650,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166335,"byte_end":166391,"line_start":651,"line_end":651,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167726,"byte_end":167741,"line_start":689,"line_end":689,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<RistrettoPoint>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> RistrettoPoint where D: Digest<OutputSize\n= U64> + Default","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166615,"byte_end":166665,"line_start":659,"line_end":659,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166670,"byte_end":166673,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166678,"byte_end":166744,"line_start":661,"line_end":661,"column_start":5,"column_end":71}},{"value":"/ bytes of output.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166749,"byte_end":166769,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166774,"byte_end":166777,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166782,"byte_end":166825,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166830,"byte_end":166833,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166838,"byte_end":166858,"line_start":666,"line_end":666,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166863,"byte_end":166866,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166871,"byte_end":166932,"line_start":668,"line_end":668,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":166937,"byte_end":166999,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167004,"byte_end":167066,"line_start":670,"line_end":670,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167071,"byte_end":167127,"line_start":671,"line_end":671,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167132,"byte_end":167135,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167140,"byte_end":167153,"line_start":673,"line_end":673,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167158,"byte_end":167161,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167166,"byte_end":167173,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167178,"byte_end":167214,"line_start":676,"line_end":676,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167219,"byte_end":167273,"line_start":677,"line_end":677,"column_start":5,"column_end":59}},{"value":"/ extern crate sha2;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167278,"byte_end":167300,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167305,"byte_end":167326,"line_start":679,"line_end":679,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167331,"byte_end":167334,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167339,"byte_end":167402,"line_start":681,"line_end":681,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167407,"byte_end":167492,"line_start":682,"line_end":682,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167497,"byte_end":167514,"line_start":683,"line_end":683,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167519,"byte_end":167607,"line_start":684,"line_end":684,"column_start":5,"column_end":93}},{"value":"/ let P = RistrettoPoint::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167612,"byte_end":167682,"line_start":685,"line_end":685,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167687,"byte_end":167694,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167699,"byte_end":167706,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167711,"byte_end":167714,"line_start":688,"line_end":688,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168193,"byte_end":168202,"line_start":702,"line_end":702,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RistrettoPoint>::from_hash","value":"pub fn from_hash<D>(D) -> RistrettoPoint where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from an existing `Digest` instance.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":167951,"byte_end":168019,"line_start":697,"line_end":697,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168024,"byte_end":168027,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168032,"byte_end":168098,"line_start":699,"line_end":699,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168103,"byte_end":168166,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168171,"byte_end":168181,"line_start":701,"line_end":701,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":169101,"byte_end":169119,"line_start":724,"line_end":724,"column_start":12,"column_end":30},"name":"from_uniform_bytes","qualname":"<RistrettoPoint>::from_uniform_bytes","value":"pub fn from_uniform_bytes(&[u8; ]) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from 64 bytes of data.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from 64 bytes of data.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168575,"byte_end":168630,"line_start":713,"line_end":713,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168635,"byte_end":168638,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ If the input bytes are uniformly distributed, the resulting","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168643,"byte_end":168706,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ point will be uniformly distributed over the group, and its","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168711,"byte_end":168774,"line_start":716,"line_end":716,"column_start":5,"column_end":68}},{"value":"/ discrete log with respect to other points should be unknown.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168779,"byte_end":168843,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168848,"byte_end":168851,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168856,"byte_end":168876,"line_start":719,"line_end":719,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168881,"byte_end":168884,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This function splits the input array into two 32-byte halves,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168889,"byte_end":168954,"line_start":721,"line_end":721,"column_start":5,"column_end":70}},{"value":"/ takes the low 255 bits of each half mod p, applies the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":168959,"byte_end":169017,"line_start":722,"line_end":722,"column_start":5,"column_end":63}},{"value":"/ Ristretto-flavored Elligator map to each, and adds the results.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":169022,"byte_end":169089,"line_start":723,"line_end":723,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":175125,"byte_end":175155,"line_start":925,"line_end":925,"column_start":12,"column_end":42},"name":"VartimeRistrettoPrecomputation","qualname":"::ristretto::VartimeRistrettoPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":174848,"byte_end":174935,"line_start":920,"line_end":920,"column_start":1,"column_end":88}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":175088,"byte_end":175113,"line_start":924,"line_end":924,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176403,"byte_end":176438,"line_start":969,"line_end":969,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<RistrettoPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &RistrettoPoint, &Scalar)\n-> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the\n Ristretto basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176298,"byte_end":176362,"line_start":967,"line_end":967,"column_start":5,"column_end":69}},{"value":"/ Ristretto basepoint.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176367,"byte_end":176391,"line_start":968,"line_end":968,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177084,"byte_end":177107,"line_start":993,"line_end":993,"column_start":12,"column_end":35},"name":"RistrettoBasepointTable","qualname":"::ristretto::RistrettoBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, used to accelerate\n scalar multiplication.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, used to accelerate","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176651,"byte_end":176722,"line_start":980,"line_end":980,"column_start":1,"column_end":72}},{"value":"/ scalar multiplication.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176723,"byte_end":176749,"line_start":981,"line_end":981,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176750,"byte_end":176753,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ A precomputed table of multiples of the Ristretto basepoint is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176754,"byte_end":176820,"line_start":983,"line_end":983,"column_start":1,"column_end":67}},{"value":"/ available in the `constants` module:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176821,"byte_end":176861,"line_start":984,"line_end":984,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176862,"byte_end":176869,"line_start":985,"line_end":985,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176870,"byte_end":176906,"line_start":986,"line_end":986,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176907,"byte_end":176948,"line_start":987,"line_end":987,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176949,"byte_end":176952,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176953,"byte_end":176991,"line_start":989,"line_end":989,"column_start":1,"column_end":39}},{"value":"/ let P = &a * &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176992,"byte_end":177047,"line_start":990,"line_end":990,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177048,"byte_end":177055,"line_start":991,"line_end":991,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177705,"byte_end":177711,"line_start":1013,"line_end":1013,"column_start":12,"column_end":18},"name":"create","qualname":"<RistrettoBasepointTable>::create","value":"pub fn create(&RistrettoPoint) -> RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a precomputed table of multiples of the given `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a precomputed table of multiples of the given `basepoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177624,"byte_end":177693,"line_start":1012,"line_end":1012,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177928,"byte_end":177937,"line_start":1018,"line_end":1018,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<RistrettoBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as a `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as a `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177857,"byte_end":177916,"line_start":1017,"line_end":1017,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":840},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":865}],"decl_id":null,"docs":" Various constants, such as the Ristretto and Ed25519 basepoints.","sig":null,"attributes":[{"value":"/ Various constants, such as the Ristretto and Ed25519 basepoints.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196298,"byte_end":196366,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196367,"byte_end":196370,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Most of the constants are given with","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196371,"byte_end":196411,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/ `LONG_DESCRIPTIVE_UPPER_CASE_NAMES`, but they can be brought into","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196412,"byte_end":196481,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ scope using a `let` binding:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196482,"byte_end":196514,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196515,"byte_end":196518,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196519,"byte_end":196526,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196527,"byte_end":196563,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::traits::IsIdentity;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196564,"byte_end":196609,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196610,"byte_end":196613,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let B = &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196614,"byte_end":196664,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ let l = &constants::BASEPOINT_ORDER;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196665,"byte_end":196705,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196706,"byte_end":196709,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let A = l * B;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196710,"byte_end":196728,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ assert!(A.is_identity());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196729,"byte_end":196758,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196759,"byte_end":196766,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":196768,"byte_end":196793,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":857},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197558,"byte_end":197586,"line_start":52,"line_end":52,"column_start":11,"column_end":39},"name":"ED25519_BASEPOINT_COMPRESSED","qualname":"::constants::ED25519_BASEPOINT_COMPRESSED","value":"CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, in `CompressedEdwardsY` format.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, in `CompressedEdwardsY` format.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197274,"byte_end":197332,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197333,"byte_end":197336,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This is the little-endian byte encoding of \\\\( 4/5 \\pmod p \\\\),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197337,"byte_end":197404,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ which is the \\\\(y\\\\)-coordinate of the Ed25519 basepoint.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197405,"byte_end":197466,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197467,"byte_end":197470,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The sign bit is 0 since the basepoint has \\\\(x\\\\) chosen to be positive.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197471,"byte_end":197547,"line_start":51,"line_end":51,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":858},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197965,"byte_end":197981,"line_start":59,"line_end":59,"column_start":11,"column_end":27},"name":"X25519_BASEPOINT","qualname":"::constants::X25519_BASEPOINT","value":"MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" The X25519 basepoint, in `MontgomeryPoint` format.\n","sig":null,"attributes":[{"value":"/ The X25519 basepoint, in `MontgomeryPoint` format.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":197900,"byte_end":197954,"line_start":58,"line_end":58,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":859},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198340,"byte_end":198370,"line_start":66,"line_end":66,"column_start":11,"column_end":41},"name":"RISTRETTO_BASEPOINT_COMPRESSED","qualname":"::constants::RISTRETTO_BASEPOINT_COMPRESSED","value":"CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, in `CompressedRistretto` format.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, in `CompressedRistretto` format.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198268,"byte_end":198329,"line_start":65,"line_end":65,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":860},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198863,"byte_end":198888,"line_start":76,"line_end":76,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_POINT","qualname":"::constants::RISTRETTO_BASEPOINT_POINT","value":"RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198689,"byte_end":198740,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198741,"byte_end":198744,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from `_TABLE`, which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198745,"byte_end":198811,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/ provides fast scalar multiplication.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198812,"byte_end":198852,"line_start":75,"line_end":75,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":861},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":199130,"byte_end":199145,"line_start":82,"line_end":82,"column_start":11,"column_end":26},"name":"BASEPOINT_ORDER","qualname":"::constants::BASEPOINT_ORDER","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,\n $$\n \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.\n $$\n","sig":null,"attributes":[{"value":"/ `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":198949,"byte_end":199042,"line_start":78,"line_end":78,"column_start":1,"column_end":94}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":199043,"byte_end":199049,"line_start":79,"line_end":79,"column_start":1,"column_end":7}},{"value":"/ \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":199050,"byte_end":199112,"line_start":80,"line_end":80,"column_start":1,"column_end":63}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":199113,"byte_end":199119,"line_start":81,"line_end":81,"column_start":1,"column_end":7}}]},{"kind":"Const","id":{"krate":0,"index":865},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":199549,"byte_end":199574,"line_start":93,"line_end":93,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_TABLE","qualname":"::constants::RISTRETTO_BASEPOINT_TABLE","value":"RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/constants.rs","byte_start":199452,"byte_end":199538,"line_start":92,"line_end":92,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":866},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":888},{"krate":0,"index":893},{"krate":0,"index":902},{"krate":0,"index":920}],"decl_id":null,"docs":" Module for common traits.\n","sig":null,"attributes":[{"value":"/ Module for common traits.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":202672,"byte_end":202701,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":202703,"byte_end":202728,"line_start":14,"line_end":14,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":876},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203031,"byte_end":203039,"line_start":27,"line_end":27,"column_start":11,"column_end":19},"name":"Identity","qualname":"::traits::Identity","value":"Identity","parent":null,"children":[{"krate":0,"index":877}],"decl_id":null,"docs":" Trait for getting the identity element of a point type.\n","sig":null,"attributes":[{"value":"/ Trait for getting the identity element of a point type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":202961,"byte_end":203020,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203138,"byte_end":203146,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"identity","qualname":"::traits::Identity::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Returns the identity element of the curve.\n Can be used as a constructor.\n","sig":null,"attributes":[{"value":"/ Returns the identity element of the curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203046,"byte_end":203092,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"/ Can be used as a constructor.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203097,"byte_end":203130,"line_start":29,"line_end":29,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":878},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203247,"byte_end":203257,"line_start":34,"line_end":34,"column_start":11,"column_end":21},"name":"IsIdentity","qualname":"::traits::IsIdentity","value":"IsIdentity","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" Trait for testing if a curve point is equivalent to the identity point.\n","sig":null,"attributes":[{"value":"/ Trait for testing if a curve point is equivalent to the identity point.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203161,"byte_end":203236,"line_start":33,"line_end":33,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203341,"byte_end":203352,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::traits::IsIdentity::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Return true if this element is the identity element of the curve.\n","sig":null,"attributes":[{"value":"/ Return true if this element is the identity element of the curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203264,"byte_end":203333,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":883},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203796,"byte_end":203810,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"BasepointTable","qualname":"::traits::BasepointTable","value":"BasepointTable","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887}],"decl_id":null,"docs":" A precomputed table of basepoints, for optimising scalar multiplications.\n","sig":null,"attributes":[{"value":"/ A precomputed table of basepoints, for optimising scalar multiplications.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203708,"byte_end":203785,"line_start":51,"line_end":51,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":884},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203877,"byte_end":203882,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::BasepointTable::Point","value":"type Point;","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" The type of point contained within this table.\n","sig":null,"attributes":[{"value":"/ The type of point contained within this table.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203817,"byte_end":203867,"line_start":53,"line_end":53,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203969,"byte_end":203975,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"create","qualname":"::traits::BasepointTable::create","value":"pub fn create(&Self::Point) -> Self","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Generate a new precomputed basepoint table from the given basepoint.\n","sig":null,"attributes":[{"value":"/ Generate a new precomputed basepoint table from the given basepoint.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203889,"byte_end":203961,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204075,"byte_end":204084,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"basepoint","qualname":"::traits::BasepointTable::basepoint","value":"pub fn basepoint(&Self) -> Self::Point","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Retrieve the original basepoint from this table.\n","sig":null,"attributes":[{"value":"/ Retrieve the original basepoint from this table.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204015,"byte_end":204067,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204199,"byte_end":204212,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"basepoint_mul","qualname":"::traits::BasepointTable::basepoint_mul","value":"pub fn basepoint_mul(&Self, &Scalar) -> Self::Point","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" Multiply a `scalar` by this precomputed basepoint table, in constant time.\n","sig":null,"attributes":[{"value":"/ Multiply a `scalar` by this precomputed basepoint table, in constant time.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204113,"byte_end":204191,"line_start":62,"line_end":62,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204347,"byte_end":204361,"line_start":67,"line_end":67,"column_start":11,"column_end":25},"name":"MultiscalarMul","qualname":"::traits::MultiscalarMul","value":"MultiscalarMul","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"decl_id":null,"docs":" A trait for constant-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for constant-time multiscalar multiplication without precomputation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204256,"byte_end":204336,"line_start":66,"line_end":66,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":889},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204441,"byte_end":204446,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::MultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204368,"byte_end":204431,"line_start":68,"line_end":68,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206034,"byte_end":206049,"line_start":114,"line_end":114,"column_start":8,"column_end":23},"name":"multiscalar_mul","qualname":"::traits::MultiscalarMul::multiscalar_mul","value":"pub fn multiscalar_mul<I, J>(I, J) -> Self::Point where I: IntoIterator,\nI::Item: Borrow<Scalar>, J: IntoIterator, J::Item: Borrow<Self::Point>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Given an iterator of (possibly secret) scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.\n $$","sig":null,"attributes":[{"value":"/ Given an iterator of (possibly secret) scalars and an iterator of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204453,"byte_end":204522,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ public points, compute","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204527,"byte_end":204553,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204558,"byte_end":204564,"line_start":73,"line_end":73,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204569,"byte_end":204608,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204613,"byte_end":204619,"line_start":75,"line_end":75,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204624,"byte_end":204627,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204632,"byte_end":204713,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204718,"byte_end":204721,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204726,"byte_end":204740,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204745,"byte_end":204748,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204753,"byte_end":204821,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204826,"byte_end":204896,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204901,"byte_end":204960,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":204965,"byte_end":205020,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205025,"byte_end":205028,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205033,"byte_end":205040,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205045,"byte_end":205081,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::MultiscalarMul;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205086,"byte_end":205135,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205140,"byte_end":205192,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205197,"byte_end":205238,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205243,"byte_end":205246,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205251,"byte_end":205270,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205275,"byte_end":205313,"line_start":93,"line_end":93,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205318,"byte_end":205356,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205361,"byte_end":205399,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205404,"byte_end":205407,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205412,"byte_end":205430,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205435,"byte_end":205484,"line_start":98,"line_end":98,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205489,"byte_end":205507,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205512,"byte_end":205530,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205535,"byte_end":205538,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205543,"byte_end":205570,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205575,"byte_end":205597,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205602,"byte_end":205663,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205668,"byte_end":205723,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205728,"byte_end":205731,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205736,"byte_end":205772,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205777,"byte_end":205820,"line_start":108,"line_end":108,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205825,"byte_end":205891,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205896,"byte_end":205953,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205958,"byte_end":205961,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":205966,"byte_end":206014,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206019,"byte_end":206026,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":893},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206319,"byte_end":206340,"line_start":123,"line_end":123,"column_start":11,"column_end":32},"name":"VartimeMultiscalarMul","qualname":"::traits::VartimeMultiscalarMul","value":"VartimeMultiscalarMul","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":898}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication without precomputation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206228,"byte_end":206308,"line_start":122,"line_end":122,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":894},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206420,"byte_end":206425,"line_start":125,"line_end":125,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimeMultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206347,"byte_end":206410,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208354,"byte_end":208378,"line_start":179,"line_end":179,"column_start":8,"column_end":32},"name":"optional_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::optional_multiscalar_mul","value":"pub fn optional_multiscalar_mul<I, J>(I, J) -> Option<Self::Point> where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n `Option`s of points, compute either `Some(Q)`, where\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n if all points were `Some(P_i)`, or else return `None`.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206432,"byte_end":206490,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ `Option`s of points, compute either `Some(Q)`, where","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206495,"byte_end":206551,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206556,"byte_end":206562,"line_start":129,"line_end":129,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206567,"byte_end":206606,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206611,"byte_end":206617,"line_start":131,"line_end":131,"column_start":5,"column_end":11}},{"value":"/ if all points were `Some(P_i)`, or else return `None`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206622,"byte_end":206680,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206685,"byte_end":206688,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206693,"byte_end":206759,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206764,"byte_end":206830,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206835,"byte_end":206894,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206899,"byte_end":206943,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206948,"byte_end":206955,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":206960,"byte_end":206996,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207001,"byte_end":207057,"line_start":140,"line_end":140,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207062,"byte_end":207114,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207119,"byte_end":207160,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207165,"byte_end":207168,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207173,"byte_end":207192,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207197,"byte_end":207235,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207240,"byte_end":207278,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207283,"byte_end":207321,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207326,"byte_end":207348,"line_start":148,"line_end":148,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207353,"byte_end":207356,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207361,"byte_end":207379,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207384,"byte_end":207433,"line_start":151,"line_end":151,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207438,"byte_end":207456,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207461,"byte_end":207479,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ let PQR = [P, Q, R];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207484,"byte_end":207508,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207513,"byte_end":207516,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let compressed = [P.compress(), Q.compress(), R.compress()];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207521,"byte_end":207585,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207590,"byte_end":207593,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Now we can compute A1 = a*P + b*Q + c*R using P, Q, R:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207598,"byte_end":207659,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &PQR);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207664,"byte_end":207729,"line_start":159,"line_end":159,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207734,"byte_end":207737,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Or using the compressed points:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207742,"byte_end":207780,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/ let A2 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207785,"byte_end":207839,"line_start":162,"line_end":162,"column_start":5,"column_end":59}},{"value":"/     &abc,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207844,"byte_end":207857,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/     compressed.iter().map(|pt| pt.decompress()),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207862,"byte_end":207914,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207919,"byte_end":207925,"line_start":165,"line_end":165,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207930,"byte_end":207933,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A2, Some(A1));","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207938,"byte_end":207967,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207972,"byte_end":207975,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // It's also possible to mix compressed and uncompressed points:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":207980,"byte_end":208048,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ let A3 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208053,"byte_end":208107,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/     abc.iter()","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208112,"byte_end":208130,"line_start":171,"line_end":171,"column_start":5,"column_end":23}},{"value":"/         .chain(abc.iter()),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208135,"byte_end":208166,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/     compressed.iter().map(|pt| pt.decompress())","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208171,"byte_end":208222,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/         .chain(PQR.iter().map(|&pt| Some(pt))),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208227,"byte_end":208278,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/ );","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208283,"byte_end":208289,"line_start":175,"line_end":175,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208294,"byte_end":208297,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A3, Some(A1+A1));","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208302,"byte_end":208334,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208339,"byte_end":208346,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210190,"byte_end":210213,"line_start":229,"line_end":229,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I, J>(I, J) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Self::Point>, Self::Point: Clone","parent":{"krate":0,"index":893},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n using variable-time operations.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208557,"byte_end":208615,"line_start":185,"line_end":185,"column_start":5,"column_end":63}},{"value":"/ public points, compute","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208620,"byte_end":208646,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208651,"byte_end":208657,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208662,"byte_end":208701,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208706,"byte_end":208712,"line_start":189,"line_end":189,"column_start":5,"column_end":11}},{"value":"/ using variable-time operations.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208717,"byte_end":208752,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208757,"byte_end":208760,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208765,"byte_end":208846,"line_start":192,"line_end":192,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208851,"byte_end":208854,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208859,"byte_end":208873,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208878,"byte_end":208881,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208886,"byte_end":208954,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":208959,"byte_end":209029,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209034,"byte_end":209093,"line_start":198,"line_end":198,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209098,"byte_end":209153,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209158,"byte_end":209161,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209166,"byte_end":209173,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209178,"byte_end":209214,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209219,"byte_end":209275,"line_start":203,"line_end":203,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209280,"byte_end":209332,"line_start":204,"line_end":204,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209337,"byte_end":209378,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209383,"byte_end":209386,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209391,"byte_end":209410,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209415,"byte_end":209453,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209458,"byte_end":209496,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209501,"byte_end":209539,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209544,"byte_end":209547,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209552,"byte_end":209570,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209575,"byte_end":209624,"line_start":213,"line_end":213,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209629,"byte_end":209647,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209652,"byte_end":209670,"line_start":215,"line_end":215,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209675,"byte_end":209678,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209683,"byte_end":209710,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209715,"byte_end":209737,"line_start":218,"line_end":218,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209742,"byte_end":209811,"line_start":219,"line_end":219,"column_start":5,"column_end":74}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209816,"byte_end":209871,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209876,"byte_end":209879,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209884,"byte_end":209920,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209925,"byte_end":209968,"line_start":223,"line_end":223,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::vartime_multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":209973,"byte_end":210047,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210052,"byte_end":210109,"line_start":225,"line_end":225,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210114,"byte_end":210117,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210122,"byte_end":210170,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210175,"byte_end":210182,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":902},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211754,"byte_end":211786,"line_start":271,"line_end":271,"column_start":11,"column_end":43},"name":"VartimePrecomputedMultiscalarMul","qualname":"::traits::VartimePrecomputedMultiscalarMul","value":"VartimePrecomputedMultiscalarMul: Sized","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":911},{"krate":0,"index":916}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication with precomputation.","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication with precomputation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210587,"byte_end":210664,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210665,"byte_end":210668,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ A general multiscalar multiplication with precomputation can be written as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210669,"byte_end":210747,"line_start":247,"line_end":247,"column_start":1,"column_end":79}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210748,"byte_end":210754,"line_start":248,"line_end":248,"column_start":1,"column_end":7}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210755,"byte_end":210819,"line_start":249,"line_end":249,"column_start":1,"column_end":65}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210820,"byte_end":210826,"line_start":250,"line_end":250,"column_start":1,"column_end":7}},{"value":"/ where the \\\\(B_i\\\\) are *static* points, for which precomputation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210827,"byte_end":210896,"line_start":251,"line_end":251,"column_start":1,"column_end":70}},{"value":"/ is possible, and the \\\\(A_j\\\\) are *dynamic* points, for which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210897,"byte_end":210963,"line_start":252,"line_end":252,"column_start":1,"column_end":67}},{"value":"/ precomputation is not possible.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":210964,"byte_end":210999,"line_start":253,"line_end":253,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211000,"byte_end":211003,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ This trait has three methods for performing this computation:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211004,"byte_end":211069,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211070,"byte_end":211073,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_multiscalar_mul`], which handles the special case","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211074,"byte_end":211139,"line_start":257,"line_end":257,"column_start":1,"column_end":66}},{"value":"/ where \\\\(n = 0\\\\) and there are no dynamic points;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211140,"byte_end":211194,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211195,"byte_end":211198,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211199,"byte_end":211263,"line_start":260,"line_end":260,"column_start":1,"column_end":65}},{"value":"/ points as already-validated `Point`s and is infallible;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211264,"byte_end":211323,"line_start":261,"line_end":261,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211324,"byte_end":211327,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ * [`optional_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211328,"byte_end":211393,"line_start":263,"line_end":263,"column_start":1,"column_end":66}},{"value":"/ points as `Option<Point>`s and returns an `Option<Point>`,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211394,"byte_end":211456,"line_start":264,"line_end":264,"column_start":1,"column_end":63}},{"value":"/ allowing decompression to be composed into the input iterators.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211457,"byte_end":211524,"line_start":265,"line_end":265,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211525,"byte_end":211528,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ All methods require that the lengths of the input iterators be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211529,"byte_end":211595,"line_start":267,"line_end":267,"column_start":1,"column_end":67}},{"value":"/ known and matching, as if they were `ExactSizeIterator`s.  (It","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211596,"byte_end":211662,"line_start":268,"line_end":268,"column_start":1,"column_end":67}},{"value":"/ does not require `ExactSizeIterator` only because that trait is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211663,"byte_end":211730,"line_start":269,"line_end":269,"column_start":1,"column_end":68}},{"value":"/ broken).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211731,"byte_end":211743,"line_start":270,"line_end":270,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":903},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211873,"byte_end":211878,"line_start":273,"line_end":273,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimePrecomputedMultiscalarMul::Point","value":"type Point: Clone;","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" The type of point to be multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point to be multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211800,"byte_end":211863,"line_start":272,"line_end":272,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212007,"byte_end":212010,"line_start":277,"line_end":277,"column_start":8,"column_end":11},"name":"new","qualname":"::traits::VartimePrecomputedMultiscalarMul::new","value":"pub fn new<I>(I) -> Self where I: IntoIterator, I::Item: Borrow<Self::Point>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Given the static points \\\\( B_i \\\\), perform precomputation\n and return the precomputation data.\n","sig":null,"attributes":[{"value":"/ Given the static points \\\\( B_i \\\\), perform precomputation","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211892,"byte_end":211955,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ and return the precomputation data.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211960,"byte_end":211999,"line_start":276,"line_end":276,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212703,"byte_end":212726,"line_start":296,"line_end":296,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I>(&Self, I) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), compute\n $$\n Q = b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212118,"byte_end":212175,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), compute","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212180,"byte_end":212202,"line_start":283,"line_end":283,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212207,"byte_end":212213,"line_start":284,"line_end":284,"column_start":5,"column_end":11}},{"value":"/ Q = b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212218,"byte_end":212253,"line_start":285,"line_end":285,"column_start":5,"column_end":40}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212258,"byte_end":212264,"line_start":286,"line_end":286,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212269,"byte_end":212336,"line_start":287,"line_end":287,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212341,"byte_end":212344,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212349,"byte_end":212407,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212412,"byte_end":212437,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212442,"byte_end":212445,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the input must","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212450,"byte_end":212514,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/ be convertable to iterators (`I: IntoIter`), and the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212519,"byte_end":212575,"line_start":293,"line_end":293,"column_start":5,"column_end":61}},{"value":"/ iterator's items must be `Borrow<Scalar>`, to allow iterators","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212580,"byte_end":212645,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/ returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":212650,"byte_end":212695,"line_start":295,"line_end":295,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213828,"byte_end":213857,"line_start":327,"line_end":327,"column_start":8,"column_end":37},"name":"vartime_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_mixed_multiscalar_mul","value":"pub fn vartime_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K) -> Self::Point\nwhere I: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Scalar>, K: IntoIterator, K::Item: Borrow<Self::Point>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213061,"byte_end":213118,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213123,"byte_end":213186,"line_start":312,"line_end":312,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213191,"byte_end":213249,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213254,"byte_end":213276,"line_start":314,"line_end":314,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213281,"byte_end":213287,"line_start":315,"line_end":315,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213292,"byte_end":213356,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213361,"byte_end":213367,"line_start":317,"line_end":317,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213372,"byte_end":213439,"line_start":318,"line_end":318,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213444,"byte_end":213447,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213452,"byte_end":213510,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213515,"byte_end":213540,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213545,"byte_end":213548,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213553,"byte_end":213621,"line_start":323,"line_end":323,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213626,"byte_end":213696,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213701,"byte_end":213760,"line_start":325,"line_end":325,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":213765,"byte_end":213820,"line_start":326,"line_end":326,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":215238,"byte_end":215268,"line_start":368,"line_end":368,"column_start":8,"column_end":38},"name":"optional_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::optional_mixed_multiscalar_mul","value":"pub fn optional_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K)\n-> Option<Self::Point> where I: IntoIterator, I::Item: Borrow<Scalar>,\nJ: IntoIterator, J::Item: Borrow<Scalar>, K: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214415,"byte_end":214472,"line_start":350,"line_end":350,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214477,"byte_end":214540,"line_start":351,"line_end":351,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214545,"byte_end":214603,"line_start":352,"line_end":352,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214608,"byte_end":214630,"line_start":353,"line_end":353,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214635,"byte_end":214641,"line_start":354,"line_end":354,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214646,"byte_end":214710,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214715,"byte_end":214721,"line_start":356,"line_end":356,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214726,"byte_end":214793,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214798,"byte_end":214801,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If any of the dynamic points were `None`, return `None`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214806,"byte_end":214866,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214871,"byte_end":214874,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214879,"byte_end":214937,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214942,"byte_end":214967,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214972,"byte_end":214975,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":214980,"byte_end":215046,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":215051,"byte_end":215117,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":215122,"byte_end":215181,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":215186,"byte_end":215230,"line_start":367,"line_end":367,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219336,"byte_end":219347,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<FieldElement>::is_negative","value":"pub fn is_negative(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is negative, in the sense\n used in the ed25519 paper: `x` is negative if the low bit is\n set.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is negative, in the sense","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219074,"byte_end":219136,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ used in the ed25519 paper: `x` is negative if the low bit is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219141,"byte_end":219205,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/ set.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219210,"byte_end":219218,"line_start":91,"line_end":91,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219223,"byte_end":219226,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219231,"byte_end":219243,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219248,"byte_end":219251,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If negative, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219256,"byte_end":219324,"line_start":95,"line_end":95,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219604,"byte_end":219611,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is zero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219445,"byte_end":219490,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219495,"byte_end":219498,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219503,"byte_end":219515,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219520,"byte_end":219523,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219528,"byte_end":219592,"line_start":105,"line_end":105,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":221756,"byte_end":221768,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<FieldElement>::batch_invert","value":"pub fn batch_invert(&mut [FieldElement])","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of public `FieldElements`, replace each with its inverse.","sig":null,"attributes":[{"value":"/ Given a slice of public `FieldElements`, replace each with its inverse.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":221576,"byte_end":221651,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":221656,"byte_end":221659,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ All input `FieldElements` **MUST** be nonzero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":221664,"byte_end":221714,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":221719,"byte_end":221744,"line_start":154,"line_end":154,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223074,"byte_end":223080,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero field element, compute its inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero field element, compute its inverse.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":222848,"byte_end":222903,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":222908,"byte_end":222911,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The inverse is computed as self^(p-2), since","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":222916,"byte_end":222964,"line_start":190,"line_end":190,"column_start":5,"column_end":53}},{"value":"/ x^(p-2)x = x^(p-1) = 1 (mod p).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":222969,"byte_end":223004,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223009,"byte_end":223012,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function returns zero on input zero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223017,"byte_end":223062,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224394,"byte_end":224406,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"sqrt_ratio_i","qualname":"<FieldElement>::sqrt_ratio_i","value":"pub fn sqrt_ratio_i(&FieldElement, &FieldElement) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`\n or `sqrt(i*u/v)` in constant time.","sig":null,"attributes":[{"value":"/ Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223871,"byte_end":223936,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ or `sqrt(i*u/v)` in constant time.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223941,"byte_end":223979,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223984,"byte_end":223987,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":223992,"byte_end":224053,"line_start":220,"line_end":220,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224058,"byte_end":224061,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224066,"byte_end":224078,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224083,"byte_end":224086,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(u/v))  ` if `v` is nonzero and `u/v` is square;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224091,"byte_end":224163,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ - `(Choice(1), zero)        ` if `u` is zero;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224168,"byte_end":224217,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ - `(Choice(0), zero)        ` if `v` is zero and `u` is nonzero;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224222,"byte_end":224290,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ - `(Choice(0), +sqrt(i*u/v))` if `u/v` is nonsquare (so `i*u/v` is square).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224295,"byte_end":224374,"line_start":227,"line_end":227,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":224379,"byte_end":224382,"line_start":228,"line_end":228,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226715,"byte_end":226722,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"invsqrt","qualname":"<FieldElement>::invsqrt","value":"pub fn invsqrt(&Self) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Attempt to compute `sqrt(1/self)` in constant time.","sig":null,"attributes":[{"value":"/ Attempt to compute `sqrt(1/self)` in constant time.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226267,"byte_end":226322,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226327,"byte_end":226330,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `sqrt_ratio_i`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226335,"byte_end":226381,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226386,"byte_end":226389,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226394,"byte_end":226455,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226460,"byte_end":226463,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226468,"byte_end":226480,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226485,"byte_end":226488,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(1/self))  ` if `self` is a nonzero square;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226493,"byte_end":226560,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/ - `(Choice(0), zero)           ` if `self` is zero;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226565,"byte_end":226620,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/ - `(Choice(0), +sqrt(i/self))  ` if `self` is a nonzero nonsquare;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226625,"byte_end":226695,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":226700,"byte_end":226703,"line_start":288,"line_end":288,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1984},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239571,"byte_end":239585,"line_start":42,"line_end":42,"column_start":12,"column_end":26},"name":"FieldElement51","qualname":"::backend::serial::u64::field::FieldElement51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `FieldElement51` represents an element of the field\n \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","sig":null,"attributes":[{"value":"/ A `FieldElement51` represents an element of the field","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":238927,"byte_end":238984,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":238985,"byte_end":239024,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239025,"byte_end":239028,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In the 64-bit implementation, a `FieldElement` is represented in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239029,"byte_end":239097,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ radix \\\\(2\\^{51}\\\\) as five `u64`s; the coefficients are allowed to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239098,"byte_end":239169,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ grow up to \\\\(2\\^{54}\\\\) between reductions modulo \\\\(p\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239170,"byte_end":239233,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239234,"byte_end":239237,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239238,"byte_end":239248,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239249,"byte_end":239252,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `curve25519_dalek::field` module provides a type alias","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239253,"byte_end":239315,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/ `curve25519_dalek::field::FieldElement` to either `FieldElement51`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239316,"byte_end":239386,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ or `FieldElement2625`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239387,"byte_end":239413,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239414,"byte_end":239417,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The backend-specific type `FieldElement51` should not be used","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239418,"byte_end":239483,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ outside of the `curve25519_dalek::field` module.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239484,"byte_end":239536,"line_start":40,"line_end":40,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247310,"byte_end":247316,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement51>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the sign of this field element\n","sig":null,"attributes":[{"value":"/ Invert the sign of this field element","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247257,"byte_end":247298,"line_start":254,"line_end":254,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247723,"byte_end":247727,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"zero","qualname":"<FieldElement51>::zero","value":"pub fn zero() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct zero.\n","sig":null,"attributes":[{"value":"/ Construct zero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247692,"byte_end":247711,"line_start":267,"line_end":267,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247833,"byte_end":247836,"line_start":273,"line_end":273,"column_start":12,"column_end":15},"name":"one","qualname":"<FieldElement51>::one","value":"pub fn one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct one.\n","sig":null,"attributes":[{"value":"/ Construct one.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247803,"byte_end":247821,"line_start":272,"line_end":272,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247941,"byte_end":247950,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"minus_one","qualname":"<FieldElement51>::minus_one","value":"pub fn minus_one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct -1.\n","sig":null,"attributes":[{"value":"/ Construct -1.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247912,"byte_end":247929,"line_start":277,"line_end":277,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249740,"byte_end":249750,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement51>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Load a `FieldElement51` from the low 255 bits of a 256-bit\n input.","sig":null,"attributes":[{"value":"/ Load a `FieldElement51` from the low 255 bits of a 256-bit","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249251,"byte_end":249313,"line_start":319,"line_end":319,"column_start":5,"column_end":67}},{"value":"/ input.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249318,"byte_end":249328,"line_start":320,"line_end":320,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249333,"byte_end":249336,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249341,"byte_end":249354,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249359,"byte_end":249362,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This function does not check that the input used the canonical","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249367,"byte_end":249433,"line_start":324,"line_end":324,"column_start":5,"column_end":71}},{"value":"/ representative.  It masks the high bit, but it will happily","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249438,"byte_end":249501,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/ decode 2^255 - 18 to 1.  Applications that require a canonical","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249506,"byte_end":249572,"line_start":326,"line_end":326,"column_start":5,"column_end":71}},{"value":"/ encoding of every field element should decode, re-encode to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249577,"byte_end":249640,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ the canonical encoding, and check that the input was","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249645,"byte_end":249701,"line_start":328,"line_end":328,"column_start":5,"column_end":61}},{"value":"/ canonical.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249706,"byte_end":249720,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":249725,"byte_end":249728,"line_start":330,"line_end":330,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":250879,"byte_end":250887,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement51>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize this `FieldElement51` to a 32-byte array.  The\n encoding is canonical.\n","sig":null,"attributes":[{"value":"/ Serialize this `FieldElement51` to a 32-byte array.  The","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":250776,"byte_end":250836,"line_start":358,"line_end":358,"column_start":5,"column_end":65}},{"value":"/ encoding is canonical.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":250841,"byte_end":250867,"line_start":359,"line_end":359,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":254043,"byte_end":254048,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"pow2k","qualname":"<FieldElement51>::pow2k","value":"pub fn pow2k(&Self, u32) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Given `k > 0`, return `self^(2^k)`.\n","sig":null,"attributes":[{"value":"/ Given `k > 0`, return `self^(2^k)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":253992,"byte_end":254031,"line_start":444,"line_end":444,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":257969,"byte_end":257975,"line_start":551,"line_end":551,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement51>::square","value":"pub fn square(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the square of this field element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":257912,"byte_end":257957,"line_start":550,"line_end":550,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":258101,"byte_end":258108,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"square2","qualname":"<FieldElement51>::square2","value":"pub fn square2(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns 2 times the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns 2 times the square of this field element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":258036,"byte_end":258089,"line_start":555,"line_end":555,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1161},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279142,"byte_end":279165,"line_start":145,"line_end":145,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_POINT","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_POINT","value":"EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, as an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, as an `EdwardsPoint`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":278926,"byte_end":278974,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":278975,"byte_end":278978,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":278979,"byte_end":279029,"line_start":142,"line_end":142,"column_start":1,"column_end":51}},{"value":"/ `ED25519_BASEPOINT_TABLE`, which should be used for scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279030,"byte_end":279092,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ multiplication (it's much faster).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279093,"byte_end":279131,"line_start":144,"line_end":144,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1162},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":280089,"byte_end":280102,"line_start":178,"line_end":178,"column_start":11,"column_end":24},"name":"EIGHT_TORSION","qualname":"::backend::serial::u64::constants::EIGHT_TORSION","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","sig":null,"attributes":[{"value":"/ The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279719,"byte_end":279767,"line_start":170,"line_end":170,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279768,"byte_end":279771,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ In the case of Curve25519, it is cyclic; the \\\\(i\\\\)-th element of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279772,"byte_end":279842,"line_start":172,"line_end":172,"column_start":1,"column_end":71}},{"value":"/ the array is \\\\([i]P\\\\), where \\\\(P\\\\) is a point of order \\\\(8\\\\)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279843,"byte_end":279913,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/ generating \\\\(\\mathcal E[8]\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279914,"byte_end":279949,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279950,"byte_end":279953,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Thus \\\\(\\mathcal E[4]\\\\) is the points indexed by `0,2,4,6`, and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":279954,"byte_end":280022,"line_start":176,"line_end":176,"column_start":1,"column_end":69}},{"value":"/ \\\\(\\mathcal E[2]\\\\) is the points indexed by `0,4`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":280023,"byte_end":280078,"line_start":177,"line_end":177,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1164},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":280248,"byte_end":280278,"line_start":182,"line_end":182,"column_start":11,"column_end":41},"name":"EIGHT_TORSION_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::EIGHT_TORSION_INNER_DOC_HIDDEN","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" Inner item used to hide limb constants from cargo doc output.\n","sig":null,"attributes":[{"value":"/ Inner item used to hide limb constants from cargo doc output.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":280157,"byte_end":280222,"line_start":180,"line_end":180,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1166},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":284176,"byte_end":284199,"line_start":324,"line_end":324,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_TABLE","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).\n","sig":null,"attributes":[{"value":"/ Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":284078,"byte_end":284165,"line_start":323,"line_end":323,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":1167},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":284369,"byte_end":284409,"line_start":328,"line_end":328,"column_start":11,"column_end":51},"name":"ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Inner constant, used to avoid filling the docs with precomputed points.\n","sig":null,"attributes":[{"value":"/ Inner constant, used to avoid filling the docs with precomputed points.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/constants.rs","byte_start":284268,"byte_end":284343,"line_start":326,"line_end":326,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2000},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541167,"byte_end":541182,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::backend::serial::curve_models::ProjectivePoint","value":"ProjectivePoint { X, Y, Z }","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003}],"decl_id":null,"docs":" A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb\n P\\^2\\\\) model of the curve.\n A point \\\\((x,y)\\\\) in the affine model corresponds to\n \\\\((x:y:1)\\\\).","sig":null,"attributes":[{"value":"/ A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":540827,"byte_end":540893,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/ P\\^2\\\\) model of the curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":540894,"byte_end":540925,"line_start":145,"line_end":145,"column_start":1,"column_end":32}},{"value":"/ A point \\\\((x,y)\\\\) in the affine model corresponds to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":540926,"byte_end":540984,"line_start":146,"line_end":146,"column_start":1,"column_end":59}},{"value":"/ \\\\((x:y:1)\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":540985,"byte_end":541003,"line_start":147,"line_end":147,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541004,"byte_end":541007,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541008,"byte_end":541080,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541081,"byte_end":541132,"line_start":150,"line_end":150,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541193,"byte_end":541194,"line_start":153,"line_end":153,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::ProjectivePoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541218,"byte_end":541219,"line_start":154,"line_end":154,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::ProjectivePoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2003},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541243,"byte_end":541244,"line_start":155,"line_end":155,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectivePoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2007},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541655,"byte_end":541669,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"CompletedPoint","qualname":"::backend::serial::curve_models::CompletedPoint","value":"CompletedPoint { X, Y, Z, T }","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"decl_id":null,"docs":" A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb\n P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.\n A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))\n \\\\).","sig":null,"attributes":[{"value":"/ A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541263,"byte_end":541335,"line_start":158,"line_end":158,"column_start":1,"column_end":73}},{"value":"/ P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541336,"byte_end":541388,"line_start":159,"line_end":159,"column_start":1,"column_end":53}},{"value":"/ A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541389,"byte_end":541459,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/ \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541460,"byte_end":541468,"line_start":161,"line_end":161,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541469,"byte_end":541472,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541473,"byte_end":541545,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541546,"byte_end":541597,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541621,"byte_end":541643,"line_start":166,"line_end":166,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2008},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541680,"byte_end":541681,"line_start":168,"line_end":168,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::CompletedPoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2009},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541705,"byte_end":541706,"line_start":169,"line_end":169,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::CompletedPoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2010},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541730,"byte_end":541731,"line_start":170,"line_end":170,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::CompletedPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2011},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541755,"byte_end":541756,"line_start":171,"line_end":171,"column_start":9,"column_end":10},"name":"T","qualname":"::backend::serial::curve_models::CompletedPoint::T","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542151,"byte_end":542167,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"AffineNielsPoint","qualname":"::backend::serial::curve_models::AffineNielsPoint","value":"AffineNielsPoint { y_plus_x, y_minus_x, xy2d }","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"decl_id":null,"docs":" A pre-computed point in the affine model for the curve, represented as\n \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point in the affine model for the curve, represented as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541775,"byte_end":541849,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541850,"byte_end":541900,"line_start":175,"line_end":175,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541901,"byte_end":541904,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541905,"byte_end":541977,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":541978,"byte_end":542029,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542117,"byte_end":542139,"line_start":181,"line_end":181,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2016},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542178,"byte_end":542186,"line_start":183,"line_end":183,"column_start":9,"column_end":17},"name":"y_plus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_plus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2017},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542211,"byte_end":542220,"line_start":184,"line_end":184,"column_start":9,"column_end":18},"name":"y_minus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_minus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2018},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542244,"byte_end":542248,"line_start":185,"line_end":185,"column_start":9,"column_end":13},"name":"xy2d","qualname":"::backend::serial::curve_models::AffineNielsPoint::xy2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2029},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542747,"byte_end":542767,"line_start":202,"line_end":202,"column_start":12,"column_end":32},"name":"ProjectiveNielsPoint","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint","value":"ProjectiveNielsPoint { Y_plus_X, Y_minus_X, Z, T2d }","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"decl_id":null,"docs":" A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the\n curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542441,"byte_end":542507,"line_start":196,"line_end":196,"column_start":1,"column_end":67}},{"value":"/ curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542508,"byte_end":542583,"line_start":197,"line_end":197,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542584,"byte_end":542587,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542588,"byte_end":542660,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542661,"byte_end":542712,"line_start":200,"line_end":200,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2030},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542778,"byte_end":542786,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"name":"Y_plus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_plus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2031},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542811,"byte_end":542820,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"name":"Y_minus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_minus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2032},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542844,"byte_end":542845,"line_start":205,"line_end":205,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2033},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542877,"byte_end":542880,"line_start":206,"line_end":206,"column_start":9,"column_end":12},"name":"T2d","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::T2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547087,"byte_end":547098,"line_start":333,"line_end":333,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<ProjectivePoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the\n \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":546914,"byte_end":546979,"line_start":329,"line_end":329,"column_start":5,"column_end":70}},{"value":"/ \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":546984,"byte_end":547015,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547020,"byte_end":547023,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M + 1 \\mathrm S\\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547028,"byte_end":547075,"line_start":332,"line_end":332,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547506,"byte_end":547519,"line_start":348,"line_end":348,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<CompletedPoint>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547326,"byte_end":547394,"line_start":344,"line_end":344,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547399,"byte_end":547447,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547452,"byte_end":547455,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547460,"byte_end":547494,"line_start":347,"line_end":347,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547877,"byte_end":547888,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<CompletedPoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547697,"byte_end":547765,"line_start":356,"line_end":356,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547770,"byte_end":547818,"line_start":357,"line_end":357,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547823,"byte_end":547826,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(4 \\mathrm M \\\\).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547831,"byte_end":547865,"line_start":359,"line_end":359,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":548337,"byte_end":548343,"line_start":376,"line_end":376,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> CompletedPoint","parent":null,"children":[],"decl_id":null,"docs":" Double this point: return self + self\n","sig":null,"attributes":[{"value":"/ Double this point: return self + self","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":548284,"byte_end":548325,"line_start":375,"line_end":375,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":13632,"byte_end":13638,"line_start":212,"line_end":212,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15446,"byte_end":15452,"line_start":265,"line_end":265,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15614,"byte_end":15620,"line_start":271,"line_end":271,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15643,"byte_end":15649,"line_start":272,"line_end":272,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15771,"byte_end":15777,"line_start":278,"line_end":278,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15896,"byte_end":15902,"line_start":284,"line_end":284,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":16139,"byte_end":16145,"line_start":293,"line_end":293,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":16638,"byte_end":16644,"line_start":310,"line_end":310,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":17589,"byte_end":17595,"line_start":336,"line_end":336,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":18942,"byte_end":18948,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":19063,"byte_end":19069,"line_start":380,"line_end":380,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21012,"byte_end":21018,"line_start":442,"line_end":442,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21224,"byte_end":21230,"line_start":454,"line_end":454,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21431,"byte_end":21437,"line_start":466,"line_end":466,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21519,"byte_end":21525,"line_start":472,"line_end":472,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21681,"byte_end":21687,"line_start":480,"line_end":480,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21920,"byte_end":21926,"line_start":489,"line_end":489,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":22159,"byte_end":22165,"line_start":498,"line_end":498,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":22897,"byte_end":22903,"line_start":528,"line_end":528,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23136,"byte_end":23142,"line_start":537,"line_end":537,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23217,"byte_end":23223,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44728,"byte_end":44742,"line_start":1134,"line_end":1134,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69723,"byte_end":69738,"line_start":74,"line_end":74,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69974,"byte_end":69989,"line_start":83,"line_end":83,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70093,"byte_end":70108,"line_start":89,"line_end":89,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70229,"byte_end":70244,"line_start":95,"line_end":95,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70266,"byte_end":70281,"line_start":97,"line_end":97,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70352,"byte_end":70367,"line_start":103,"line_end":103,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":73551,"byte_end":73566,"line_start":198,"line_end":198,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":73743,"byte_end":73758,"line_start":207,"line_end":207,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":73877,"byte_end":73892,"line_start":213,"line_end":213,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":74219,"byte_end":74234,"line_start":226,"line_end":226,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":77701,"byte_end":77716,"line_start":328,"line_end":328,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87531,"byte_end":87549,"line_start":163,"line_end":163,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87684,"byte_end":87702,"line_start":169,"line_end":169,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87857,"byte_end":87875,"line_start":175,"line_end":175,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93238,"byte_end":93256,"line_start":330,"line_end":330,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93536,"byte_end":93554,"line_start":339,"line_end":339,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93651,"byte_end":93669,"line_start":345,"line_end":345,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":94024,"byte_end":94036,"line_start":360,"line_end":360,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":94280,"byte_end":94292,"line_start":371,"line_end":371,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":94591,"byte_end":94603,"line_start":381,"line_end":381,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":95039,"byte_end":95051,"line_start":394,"line_end":394,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":95657,"byte_end":95669,"line_start":409,"line_end":409,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":96232,"byte_end":96244,"line_start":422,"line_end":422,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":96362,"byte_end":96374,"line_start":428,"line_end":428,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":96558,"byte_end":96570,"line_start":434,"line_end":434,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":99045,"byte_end":99057,"line_start":509,"line_end":509,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":99732,"byte_end":99744,"line_start":529,"line_end":529,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":100275,"byte_end":100287,"line_start":546,"line_end":546,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":100491,"byte_end":100503,"line_start":554,"line_end":554,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":101129,"byte_end":101141,"line_start":584,"line_end":584,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":101449,"byte_end":101461,"line_start":596,"line_end":596,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":102904,"byte_end":102916,"line_start":639,"line_end":639,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":103895,"byte_end":103907,"line_start":671,"line_end":671,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":105405,"byte_end":105433,"line_start":713,"line_end":713,"column_start":43,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106166,"byte_end":106178,"line_start":742,"line_end":742,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114932,"byte_end":114953,"line_start":947,"line_end":947,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":119718,"byte_end":119730,"line_start":1063,"line_end":1063,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":122253,"byte_end":122265,"line_start":1143,"line_end":1143,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151271,"byte_end":151290,"line_start":215,"line_end":215,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151416,"byte_end":151435,"line_start":221,"line_end":221,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":154375,"byte_end":154394,"line_start":308,"line_end":308,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":154505,"byte_end":154524,"line_start":314,"line_end":314,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158962,"byte_end":158976,"line_start":441,"line_end":441,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161769,"byte_end":161787,"line_start":520,"line_end":520,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161942,"byte_end":161960,"line_start":526,"line_end":526,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":169736,"byte_end":169750,"line_start":741,"line_end":741,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":169866,"byte_end":169880,"line_start":747,"line_end":747,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":170148,"byte_end":170162,"line_start":757,"line_end":757,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":170294,"byte_end":170308,"line_start":763,"line_end":763,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":170789,"byte_end":170803,"line_start":780,"line_end":780,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":171323,"byte_end":171337,"line_start":796,"line_end":796,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":171875,"byte_end":171889,"line_start":814,"line_end":814,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":172098,"byte_end":172112,"line_start":822,"line_end":822,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":172481,"byte_end":172495,"line_start":842,"line_end":842,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":172629,"byte_end":172643,"line_start":850,"line_end":850,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":173885,"byte_end":173899,"line_start":887,"line_end":887,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":174386,"byte_end":174400,"line_start":905,"line_end":905,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":175284,"byte_end":175314,"line_start":928,"line_end":928,"column_start":43,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176277,"byte_end":176291,"line_start":966,"line_end":966,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177594,"byte_end":177617,"line_start":1011,"line_end":1011,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":178242,"byte_end":178256,"line_start":1027,"line_end":1027,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":179471,"byte_end":179490,"line_start":1068,"line_end":1068,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":179656,"byte_end":179670,"line_start":1074,"line_end":1074,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203557,"byte_end":203558,"line_start":42,"line_end":42,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":218557,"byte_end":218569,"line_start":71,"line_end":71,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":218593,"byte_end":218605,"line_start":73,"line_end":73,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":218735,"byte_end":218747,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219055,"byte_end":219067,"line_start":88,"line_end":88,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239625,"byte_end":239639,"line_start":44,"line_end":44,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239798,"byte_end":239812,"line_start":50,"line_end":50,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239921,"byte_end":239935,"line_start":56,"line_end":56,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":240356,"byte_end":240370,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":241550,"byte_end":241564,"line_start":102,"line_end":102,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":245918,"byte_end":245932,"line_start":221,"line_end":221,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247236,"byte_end":247250,"line_start":253,"line_end":253,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259117,"byte_end":259125,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259278,"byte_end":259286,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259374,"byte_end":259382,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259513,"byte_end":259521,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259744,"byte_end":259752,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542289,"byte_end":542305,"line_start":188,"line_end":188,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542922,"byte_end":542942,"line_start":209,"line_end":209,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543313,"byte_end":543328,"line_start":224,"line_end":224,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543542,"byte_end":543562,"line_start":234,"line_end":234,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543852,"byte_end":543872,"line_start":245,"line_end":245,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543986,"byte_end":544002,"line_start":251,"line_end":251,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":544240,"byte_end":544256,"line_start":261,"line_end":261,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":544563,"byte_end":544578,"line_start":271,"line_end":271,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":545217,"byte_end":545237,"line_start":290,"line_end":290,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":546044,"byte_end":546060,"line_start":308,"line_end":308,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":546892,"byte_end":546907,"line_start":328,"line_end":328,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547305,"byte_end":547319,"line_start":343,"line_end":343,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":548262,"byte_end":548277,"line_start":374,"line_end":374,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":552790,"byte_end":552805,"line_start":523,"line_end":523,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":553027,"byte_end":553041,"line_start":530,"line_end":530,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":553283,"byte_end":553299,"line_start":537,"line_end":537,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":553558,"byte_end":553578,"line_start":544,"line_end":544,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":560003,"byte_end":560009,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":564006,"byte_end":564012,"line_start":146,"line_end":146,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/precomputed_straus.rs","byte_start":566575,"byte_end":566599,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/pippenger.rs","byte_start":571785,"byte_end":571794,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":582218,"byte_end":582233,"line_start":143,"line_end":143,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":582484,"byte_end":582499,"line_start":153,"line_end":153,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":582676,"byte_end":582691,"line_start":159,"line_end":159,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":583077,"byte_end":583092,"line_start":171,"line_end":171,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":583551,"byte_end":583566,"line_start":187,"line_end":187,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":583739,"byte_end":583754,"line_start":196,"line_end":196,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":584031,"byte_end":584046,"line_start":206,"line_end":206,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":584445,"byte_end":584460,"line_start":218,"line_end":218,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":2247,"byte_end":2253,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":2321,"byte_end":2331,"line_start":73,"line_end":73,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":269}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":2396,"byte_end":2403,"line_start":76,"line_end":76,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":2457,"byte_end":2466,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":606}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":2525,"byte_end":2534,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":840}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/lib.rs","byte_start":2580,"byte_end":2586,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":866}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":13632,"byte_end":13638,"line_start":212,"line_end":212,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15446,"byte_end":15452,"line_start":265,"line_end":265,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15614,"byte_end":15620,"line_start":271,"line_end":271,"column_start":13,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15643,"byte_end":15649,"line_start":272,"line_end":272,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15771,"byte_end":15777,"line_start":278,"line_end":278,"column_start":25,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1525},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":15896,"byte_end":15902,"line_start":284,"line_end":284,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":3145}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":16139,"byte_end":16145,"line_start":293,"line_end":293,"column_start":36,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":16638,"byte_end":16644,"line_start":310,"line_end":310,"column_start":36,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":17589,"byte_end":17595,"line_start":336,"line_end":336,"column_start":36,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":18942,"byte_end":18948,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":19063,"byte_end":19069,"line_start":380,"line_end":380,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1525},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21012,"byte_end":21018,"line_start":442,"line_end":442,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":7117}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21224,"byte_end":21230,"line_start":454,"line_end":454,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":7113}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21431,"byte_end":21437,"line_start":466,"line_end":466,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21519,"byte_end":21525,"line_start":472,"line_end":472,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21681,"byte_end":21687,"line_start":480,"line_end":480,"column_start":20,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":21920,"byte_end":21926,"line_start":489,"line_end":489,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":22159,"byte_end":22165,"line_start":498,"line_end":498,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":22897,"byte_end":22903,"line_start":528,"line_end":528,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23136,"byte_end":23142,"line_start":537,"line_end":537,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1525},"to":{"krate":27,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":23217,"byte_end":23223,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/scalar.rs","byte_start":44728,"byte_end":44742,"line_start":1134,"line_end":1134,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69723,"byte_end":69738,"line_start":74,"line_end":74,"column_start":25,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1574},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":69974,"byte_end":69989,"line_start":83,"line_end":83,"column_start":18,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1574},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70093,"byte_end":70108,"line_start":89,"line_end":89,"column_start":20,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1574},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70229,"byte_end":70244,"line_start":95,"line_end":95,"column_start":13,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1574},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70266,"byte_end":70281,"line_start":97,"line_end":97,"column_start":18,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1574},"to":{"krate":27,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":70352,"byte_end":70367,"line_start":103,"line_end":103,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":73551,"byte_end":73566,"line_start":198,"line_end":198,"column_start":19,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1587},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":73743,"byte_end":73758,"line_start":207,"line_end":207,"column_start":18,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1587},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":73877,"byte_end":73892,"line_start":213,"line_end":213,"column_start":34,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1587},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":74219,"byte_end":74234,"line_start":226,"line_end":226,"column_start":6,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/montgomery.rs","byte_start":77701,"byte_end":77716,"line_start":328,"line_end":328,"column_start":36,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1574},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87531,"byte_end":87549,"line_start":163,"line_end":163,"column_start":25,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1619},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87684,"byte_end":87702,"line_start":169,"line_end":169,"column_start":16,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1619},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":87857,"byte_end":87875,"line_start":175,"line_end":175,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93238,"byte_end":93256,"line_start":330,"line_end":330,"column_start":19,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1619},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93536,"byte_end":93554,"line_start":339,"line_end":339,"column_start":18,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1619},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":93651,"byte_end":93669,"line_start":345,"line_end":345,"column_start":6,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":94024,"byte_end":94036,"line_start":360,"line_end":360,"column_start":19,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1638},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":94280,"byte_end":94292,"line_start":371,"line_end":371,"column_start":18,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":94591,"byte_end":94603,"line_start":381,"line_end":381,"column_start":24,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1638},"to":{"krate":0,"index":920}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":95039,"byte_end":95051,"line_start":394,"line_end":394,"column_start":34,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1638},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":95657,"byte_end":95669,"line_start":409,"line_end":409,"column_start":25,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1638},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":96232,"byte_end":96244,"line_start":422,"line_end":422,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":96362,"byte_end":96374,"line_start":428,"line_end":428,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":96558,"byte_end":96570,"line_start":434,"line_end":434,"column_start":6,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":99045,"byte_end":99057,"line_start":509,"line_end":509,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":99732,"byte_end":99744,"line_start":529,"line_end":529,"column_start":42,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":100275,"byte_end":100287,"line_start":546,"line_end":546,"column_start":42,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":100491,"byte_end":100503,"line_start":554,"line_end":554,"column_start":20,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":7113}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":101129,"byte_end":101141,"line_start":584,"line_end":584,"column_start":14,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":101449,"byte_end":101461,"line_start":596,"line_end":596,"column_start":36,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":102904,"byte_end":102916,"line_start":639,"line_end":639,"column_start":25,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1638},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":103895,"byte_end":103907,"line_start":671,"line_end":671,"column_start":32,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1638},"to":{"krate":0,"index":893}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":105405,"byte_end":105433,"line_start":713,"line_end":713,"column_start":43,"column_end":71},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":106166,"byte_end":106178,"line_start":742,"line_end":742,"column_start":6,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":114932,"byte_end":114953,"line_start":947,"line_end":947,"column_start":6,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":119718,"byte_end":119730,"line_start":1063,"line_end":1063,"column_start":6,"column_end":18},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/edwards.rs","byte_start":122253,"byte_end":122265,"line_start":1143,"line_end":1143,"column_start":16,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151271,"byte_end":151290,"line_start":215,"line_end":215,"column_start":25,"column_end":44},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1892},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":151416,"byte_end":151435,"line_start":221,"line_end":221,"column_start":6,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":154375,"byte_end":154394,"line_start":308,"line_end":308,"column_start":19,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1892},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":154505,"byte_end":154524,"line_start":314,"line_end":314,"column_start":18,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1892},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":158962,"byte_end":158976,"line_start":441,"line_end":441,"column_start":6,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161769,"byte_end":161787,"line_start":520,"line_end":520,"column_start":14,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":161942,"byte_end":161960,"line_start":526,"line_end":526,"column_start":47,"column_end":65},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1917},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":169736,"byte_end":169750,"line_start":741,"line_end":741,"column_start":19,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":169866,"byte_end":169880,"line_start":747,"line_end":747,"column_start":18,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":170148,"byte_end":170162,"line_start":757,"line_end":757,"column_start":20,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":170294,"byte_end":170308,"line_start":763,"line_end":763,"column_start":25,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1911},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":170789,"byte_end":170803,"line_start":780,"line_end":780,"column_start":13,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":171323,"byte_end":171337,"line_start":796,"line_end":796,"column_start":44,"column_end":58},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":171875,"byte_end":171889,"line_start":814,"line_end":814,"column_start":44,"column_end":58},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":172098,"byte_end":172112,"line_start":822,"line_end":822,"column_start":20,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":7113}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":172481,"byte_end":172495,"line_start":842,"line_end":842,"column_start":14,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":172629,"byte_end":172643,"line_start":850,"line_end":850,"column_start":36,"column_end":50},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":173885,"byte_end":173899,"line_start":887,"line_end":887,"column_start":25,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":174386,"byte_end":174400,"line_start":905,"line_end":905,"column_start":32,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":893}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":175284,"byte_end":175314,"line_start":928,"line_end":928,"column_start":43,"column_end":73},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":176277,"byte_end":176291,"line_start":966,"line_end":966,"column_start":6,"column_end":20},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":177594,"byte_end":177617,"line_start":1011,"line_end":1011,"column_start":6,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":178242,"byte_end":178256,"line_start":1027,"line_end":1027,"column_start":34,"column_end":48},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1911},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":179471,"byte_end":179490,"line_start":1068,"line_end":1068,"column_start":16,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1892},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/ristretto.rs","byte_start":179656,"byte_end":179670,"line_start":1074,"line_end":1074,"column_start":16,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1911},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":203557,"byte_end":203558,"line_start":42,"line_end":42,"column_start":24,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":881},"to":{"krate":0,"index":878}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/traits.rs","byte_start":211788,"byte_end":211793,"line_start":271,"line_end":271,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":218557,"byte_end":218569,"line_start":71,"line_end":71,"column_start":13,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":218593,"byte_end":218605,"line_start":73,"line_end":73,"column_start":20,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":218735,"byte_end":218747,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":949},"to":{"krate":28,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/field.rs","byte_start":219055,"byte_end":219067,"line_start":88,"line_end":88,"column_start":6,"column_end":18},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239625,"byte_end":239639,"line_start":44,"line_end":44,"column_start":16,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1984},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239798,"byte_end":239812,"line_start":50,"line_end":50,"column_start":18,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1984},"to":{"krate":27,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":239921,"byte_end":239935,"line_start":56,"line_end":56,"column_start":44,"column_end":58},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1984},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":240356,"byte_end":240370,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1984},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":241550,"byte_end":241564,"line_start":102,"line_end":102,"column_start":44,"column_end":58},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1984},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":245918,"byte_end":245932,"line_start":221,"line_end":221,"column_start":34,"column_end":48},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1984},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/field.rs","byte_start":247236,"byte_end":247250,"line_start":253,"line_end":253,"column_start":6,"column_end":20},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259117,"byte_end":259125,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1992},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259278,"byte_end":259286,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1992},"to":{"krate":27,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259374,"byte_end":259382,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1992},"to":{"krate":1,"index":3145}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259513,"byte_end":259521,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1992},"to":{"krate":1,"index":3149}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/u64/scalar.rs","byte_start":259744,"byte_end":259752,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542289,"byte_end":542305,"line_start":188,"line_end":188,"column_start":18,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2015},"to":{"krate":27,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":542922,"byte_end":542942,"line_start":209,"line_end":209,"column_start":18,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2029},"to":{"krate":27,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543313,"byte_end":543328,"line_start":224,"line_end":224,"column_start":19,"column_end":34},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2000},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543542,"byte_end":543562,"line_start":234,"line_end":234,"column_start":19,"column_end":39},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2029},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543852,"byte_end":543872,"line_start":245,"line_end":245,"column_start":18,"column_end":38},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2029},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":543986,"byte_end":544002,"line_start":251,"line_end":251,"column_start":19,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2015},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":544240,"byte_end":544256,"line_start":261,"line_end":261,"column_start":18,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2015},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":544563,"byte_end":544578,"line_start":271,"line_end":271,"column_start":24,"column_end":39},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2000},"to":{"krate":0,"index":920}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":545217,"byte_end":545237,"line_start":290,"line_end":290,"column_start":34,"column_end":54},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2029},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":546044,"byte_end":546060,"line_start":308,"line_end":308,"column_start":34,"column_end":50},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2015},"to":{"krate":28,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":546892,"byte_end":546907,"line_start":328,"line_end":328,"column_start":6,"column_end":21},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":547305,"byte_end":547319,"line_start":343,"line_end":343,"column_start":6,"column_end":20},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":548262,"byte_end":548277,"line_start":374,"line_end":374,"column_start":6,"column_end":21},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":552790,"byte_end":552805,"line_start":523,"line_end":523,"column_start":16,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2000},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":553027,"byte_end":553041,"line_start":530,"line_end":530,"column_start":16,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2007},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":553283,"byte_end":553299,"line_start":537,"line_end":537,"column_start":16,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2015},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/curve_models/mod.rs","byte_start":553558,"byte_end":553578,"line_start":544,"line_end":544,"column_start":16,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2029},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":560003,"byte_end":560009,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1331},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/straus.rs","byte_start":564006,"byte_end":564012,"line_start":146,"line_end":146,"column_start":32,"column_end":38},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1331},"to":{"krate":0,"index":893}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/precomputed_straus.rs","byte_start":566575,"byte_end":566599,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1412},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/backend/serial/scalar_mul/pippenger.rs","byte_start":571785,"byte_end":571794,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1441},"to":{"krate":0,"index":893}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":582218,"byte_end":582233,"line_start":143,"line_end":143,"column_start":15,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":582484,"byte_end":582499,"line_start":153,"line_end":153,"column_start":26,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2192},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":582676,"byte_end":582691,"line_start":159,"line_end":159,"column_start":37,"column_end":52},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2192},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":583077,"byte_end":583092,"line_start":171,"line_end":171,"column_start":37,"column_end":52},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2192},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":583551,"byte_end":583566,"line_start":187,"line_end":187,"column_start":15,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":583739,"byte_end":583754,"line_start":196,"line_end":196,"column_start":26,"column_end":41},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2202},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":584031,"byte_end":584046,"line_start":206,"line_end":206,"column_start":37,"column_end":52},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2202},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.1.0/src/window.rs","byte_start":584445,"byte_end":584460,"line_start":218,"line_end":218,"column_start":37,"column_end":52},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2202},"to":{"krate":1,"index":2755}}]}
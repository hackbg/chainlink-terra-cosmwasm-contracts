{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_multi_test","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=7f81c61b46a70475","-C","extra-filename=-7f81c61b46a70475","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","cosmwasm_std=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcosmwasm_std-365a695097d5979a.rmeta","--extern","cw_storage_plus=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcw_storage_plus-1a802ade0633767c.rmeta","--extern","cw0=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcw0-7997fc413b08b7f3.rmeta","--extern","schemars=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libschemars-53ef66595cc9072f.rmeta","--extern","serde=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libserde-de099ef8bdb72d88.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcw_multi_test-7f81c61b46a70475.rmeta"},"prelude":{"crate_id":{"name":"cw_multi_test","disambiguator":[5834198800135274024,849446772905053683]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":19,"id":{"name":"serde","disambiguator":[11161174855159807840,11662819943618983176]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":20,"id":{"name":"serde_derive","disambiguator":[11350605354183850550,9010745208244710793]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":21,"id":{"name":"cosmwasm_std","disambiguator":[12688950139995787771,16236961477621444827]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":22,"id":{"name":"schemars","disambiguator":[9833878935271821116,1160506451644549907]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":23,"id":{"name":"schemars_derive","disambiguator":[4190896731209354013,7422771034004699676]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":24,"id":{"name":"serde_json","disambiguator":[13617840397567654371,2357134987517516315]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":25,"id":{"name":"itoa","disambiguator":[11761717447849771372,1476596716891942946]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":26,"id":{"name":"ryu","disambiguator":[2686056169118969673,4698952673064697069]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":27,"id":{"name":"dyn_clone","disambiguator":[1351258937125171548,750223860837007170]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":28,"id":{"name":"cosmwasm_crypto","disambiguator":[15192265634897791109,13398054616086461723]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":29,"id":{"name":"ed25519_zebra","disambiguator":[1814607406423690066,17054101721003244006]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":30,"id":{"name":"curve25519_dalek","disambiguator":[1710251577914765931,15921235370094257782]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":31,"id":{"name":"byteorder","disambiguator":[3071847127673975179,7003147510126265182]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":32,"id":{"name":"digest","disambiguator":[11815551155626523553,13150518862568951459]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":33,"id":{"name":"generic_array","disambiguator":[2843115902605017426,8992412963017954804]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":34,"id":{"name":"typenum","disambiguator":[15595204929548488895,11009855742131221505]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":35,"id":{"name":"rand_core","disambiguator":[15262903449215184178,1965405531746979256]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":36,"id":{"name":"getrandom","disambiguator":[17970065197973694116,6812716713039249432]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":37,"id":{"name":"cfg_if","disambiguator":[18066125678311518643,11358915899814267326]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":38,"id":{"name":"libc","disambiguator":[2521045491498281214,2123948796851982599]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":39,"id":{"name":"zeroize","disambiguator":[4196693835647716122,2424233725925652009]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":40,"id":{"name":"subtle","disambiguator":[13649248947348070893,10545555751276563020]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":41,"id":{"name":"sha2","disambiguator":[4845292581609176579,17354008811375486299]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":42,"id":{"name":"block_buffer","disambiguator":[7300277867098391491,9789664017212379998]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":43,"id":{"name":"opaque_debug","disambiguator":[12244708370773904289,12878298131593829713]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":44,"id":{"name":"cpufeatures","disambiguator":[11584142461511734604,9220515001620625460]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":45,"id":{"name":"thiserror","disambiguator":[48069925778631392,5913340674478008252]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":46,"id":{"name":"thiserror_impl","disambiguator":[10923328257164092015,5282325289946833054]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":47,"id":{"name":"hex","disambiguator":[9852775344725850136,1362423804578184921]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":48,"id":{"name":"k256","disambiguator":[7991146506723395621,13662542764480845641]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":49,"id":{"name":"elliptic_curve","disambiguator":[12962610352709599449,1092650790515722109]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":50,"id":{"name":"ff","disambiguator":[2127753199578883533,6038891583446360077]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":51,"id":{"name":"bitvec","disambiguator":[12843394802284785757,18049944760944282035]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":52,"id":{"name":"radium","disambiguator":[6170578490148099913,11385662121544404573]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":53,"id":{"name":"wyz","disambiguator":[14075336805396516078,8175419829704857618]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":54,"id":{"name":"funty","disambiguator":[18100334673436176153,12213058834818999383]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":55,"id":{"name":"group","disambiguator":[4491951580228129931,2167256649219017635]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":56,"id":{"name":"pkcs8","disambiguator":[4005606756325313909,11473494331770028794]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":57,"id":{"name":"der","disambiguator":[6620283982502722200,2601874819529451539]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":58,"id":{"name":"const_oid","disambiguator":[16652256300093258142,3482606670295155140]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":59,"id":{"name":"ecdsa","disambiguator":[10095924235346771483,13530389282245231814]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":60,"id":{"name":"signature","disambiguator":[11852001358081360889,258583192709905972]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":61,"id":{"name":"hmac","disambiguator":[14461085160494243860,6945854892547497893]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":62,"id":{"name":"crypto_mac","disambiguator":[18287248403066418544,2337432805662306154]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":63,"id":{"name":"cosmwasm_derive","disambiguator":[3182685869311308364,3800816871454037190]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":64,"id":{"name":"base64","disambiguator":[14774770423289327321,16596935086425946379]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","num":65,"id":{"name":"serde_json_wasm","disambiguator":[11801744276582033583,8448971521265046953]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","num":66,"id":{"name":"cw0","disambiguator":[2402348801435379351,16005542619214002079]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","num":67,"id":{"name":"cw_storage_plus","disambiguator":[1480934848363997946,14425016405361237708]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":0,"byte_end":286,"line_start":1,"line_end":9,"column_start":1,"column_end":94}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":87,"byte_end":106,"line_start":7,"line_end":7,"column_start":22,"column_end":41},"alias_span":null,"name":"parse_contract_addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":108,"byte_end":111,"line_start":7,"line_end":7,"column_start":43,"column_end":46},"alias_span":null,"name":"App","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":149},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":113,"byte_end":121,"line_start":7,"line_end":7,"column_start":48,"column_end":56},"alias_span":null,"name":"AppCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":123,"byte_end":129,"line_start":7,"line_end":7,"column_start":58,"column_end":64},"alias_span":null,"name":"AppOps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":154,"byte_end":158,"line_start":8,"line_end":8,"column_start":23,"column_end":27},"alias_span":null,"name":"Bank","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":160,"byte_end":169,"line_start":8,"line_end":8,"column_start":29,"column_end":38},"alias_span":null,"name":"BankCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":171,"byte_end":178,"line_start":8,"line_end":8,"column_start":40,"column_end":47},"alias_span":null,"name":"BankOps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":180,"byte_end":190,"line_start":8,"line_end":8,"column_start":49,"column_end":59},"alias_span":null,"name":"SimpleBank","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":215,"byte_end":225,"line_start":9,"line_end":9,"column_start":23,"column_end":33},"alias_span":null,"name":"next_block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":227,"byte_end":235,"line_start":9,"line_end":9,"column_start":35,"column_end":43},"alias_span":null,"name":"Contract","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":237,"byte_end":252,"line_start":9,"line_end":9,"column_start":45,"column_end":60},"alias_span":null,"name":"ContractWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":254,"byte_end":263,"line_start":9,"line_end":9,"column_start":62,"column_end":71},"alias_span":null,"name":"WasmCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":265,"byte_end":272,"line_start":9,"line_end":9,"column_start":73,"column_end":80},"alias_span":null,"name":"WasmOps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":274,"byte_end":284,"line_start":9,"line_end":9,"column_start":82,"column_end":92},"alias_span":null,"name":"WasmRouter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","byte_start":0,"byte_end":286,"line_start":1,"line_end":9,"column_start":1,"column_end":94},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":174},{"krate":0,"index":265},{"krate":0,"index":360},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":861,"byte_end":872,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"AppResponse","qualname":"::app::AppResponse","value":"AppResponse { attributes, data }","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":657},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":883,"byte_end":893,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"attributes","qualname":"::app::AppResponse::attributes","value":"std::vec::Vec<cosmwasm_std::Attribute>","parent":{"krate":0,"index":656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":658},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":919,"byte_end":923,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"data","qualname":"::app::AppResponse::data","value":"std::option::Option<cosmwasm_std::Binary>","parent":{"krate":0,"index":656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2984,"byte_end":2987,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"App","qualname":"::app::App","value":"App {  }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Router is a persisted state. You can query this.\n Execution generally happens on the RouterCache, which then can be atomically committed or rolled back.\n We offer .execute() as a wrapper around cache, execute, commit/rollback process.","sig":null,"attributes":[{"value":"/ Router is a persisted state. You can query this.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2592,"byte_end":2644,"line_start":80,"line_end":80,"column_start":1,"column_end":53}},{"value":"/ Execution generally happens on the RouterCache, which then can be atomically committed or rolled back.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2645,"byte_end":2751,"line_start":81,"line_end":81,"column_start":1,"column_end":107}},{"value":"/ We offer .execute() as a wrapper around cache, execute, commit/rollback process.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2752,"byte_end":2836,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2837,"byte_end":2840,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ C is the custom message returned init, handle, sudo (Response<C>).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2841,"byte_end":2911,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ All contracts must return Response<C> or Response<Empty>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":2912,"byte_end":2972,"line_start":85,"line_end":85,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3195,"byte_end":3198,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<App<C>>::new","value":"pub fn new<B: Bank + 'static>(Box<dyn Api>, BlockInfo, B, StorageFactory)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3512,"byte_end":3517,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"cache","qualname":"<App<C>>::cache","value":"pub fn cache(&Self) -> AppCache<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3680,"byte_end":3689,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"set_block","qualname":"<App<C>>::set_block","value":"pub fn set_block(&mut Self, BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":" This can set the block info to any value. Must be done before taking a cache\n","sig":null,"attributes":[{"value":"/ This can set the block info to any value. Must be done before taking a cache","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3588,"byte_end":3668,"line_start":114,"line_end":114,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3859,"byte_end":3871,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"update_block","qualname":"<App<C>>::update_block","value":"pub fn update_block<F: Fn(&mut BlockInfo) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" This let's use use \"next block\" steps that add eg. one height and 5 seconds\n","sig":null,"attributes":[{"value":"/ This let's use use \"next block\" steps that add eg. one height and 5 seconds","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3768,"byte_end":3847,"line_start":119,"line_end":119,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4026,"byte_end":4036,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"block_info","qualname":"<App<C>>::block_info","value":"pub fn block_info(&Self) -> BlockInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the current block_info\n","sig":null,"attributes":[{"value":"/ Returns a copy of the current block_info","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3970,"byte_end":4014,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4175,"byte_end":4191,"line_start":130,"line_end":130,"column_start":12,"column_end":28},"name":"set_bank_balance","qualname":"<App<C>>::set_bank_balance","value":"pub fn set_bank_balance(&mut Self, &Addr, Vec<Coin>) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" This is an \"admin\" function to let us adjust bank accounts\n","sig":null,"attributes":[{"value":"/ This is an \"admin\" function to let us adjust bank accounts","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4101,"byte_end":4163,"line_start":129,"line_end":129,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4466,"byte_end":4476,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"store_code","qualname":"<App<C>>::store_code","value":"pub fn store_code(&mut Self, Box<dyn Contract<C>>) -> u64","parent":null,"children":[],"decl_id":null,"docs":" This registers contract code (like uploading wasm bytecode on a chain),\n so it can later be used to instantiate a contract.\n","sig":null,"attributes":[{"value":"/ This registers contract code (like uploading wasm bytecode on a chain),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4320,"byte_end":4395,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ so it can later be used to instantiate a contract.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4400,"byte_end":4454,"line_start":135,"line_end":135,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4713,"byte_end":4717,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"wrap","qualname":"<App<C>>::wrap","value":"pub fn wrap(&Self) -> QuerierWrapper","parent":null,"children":[],"decl_id":null,"docs":" Simple helper so we get access to all the QuerierWrapper helpers,\n eg. query_wasm_smart, query_all_balances, ...\n","sig":null,"attributes":[{"value":"/ Simple helper so we get access to all the QuerierWrapper helpers,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4578,"byte_end":4647,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ eg. query_wasm_smart, query_all_balances, ...","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4652,"byte_end":4701,"line_start":141,"line_end":141,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4913,"byte_end":4918,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"query","qualname":"<App<C>>::query","value":"pub fn query(&Self, QueryRequest<Empty>) -> Result<Binary, String>","parent":null,"children":[],"decl_id":null,"docs":" Handles arbitrary QueryRequest, this is wrapped by the Querier interface, but this\n is nicer to use.\n","sig":null,"attributes":[{"value":"/ Handles arbitrary QueryRequest, this is wrapped by the Querier interface, but this","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4790,"byte_end":4876,"line_start":146,"line_end":146,"column_start":5,"column_end":91}},{"value":"/ is nicer to use.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":4881,"byte_end":4901,"line_start":147,"line_end":147,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":5297,"byte_end":5317,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"instantiate_contract","qualname":"<App<C>>::instantiate_contract","value":"pub fn instantiate_contract<T: Serialize,\n                            U: Into<String>>(&mut Self, u64, Addr, &T,\n                                             &[Coin], U)\n-> Result<Addr, String>","parent":null,"children":[],"decl_id":null,"docs":" Create a contract and get the new address.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Create a contract and get the new address.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":5192,"byte_end":5238,"line_start":156,"line_end":156,"column_start":5,"column_end":51}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":5243,"byte_end":5285,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6057,"byte_end":6073,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"execute_contract","qualname":"<App<C>>::execute_contract","value":"pub fn execute_contract<T: Serialize>(&mut Self, Addr, Addr, &T, &[Coin])\n-> Result<AppResponse, String>","parent":null,"children":[],"decl_id":null,"docs":" Execute a contract and process all returned messages.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Execute a contract and process all returned messages.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":5941,"byte_end":5998,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6003,"byte_end":6045,"line_start":181,"line_end":181,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6718,"byte_end":6725,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"execute","qualname":"<App<C>>::execute","value":"pub fn execute(&mut Self, Addr, CosmosMsg<C>) -> Result<AppResponse, String>","parent":null,"children":[],"decl_id":null,"docs":" Runs arbitrary CosmosMsg.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs arbitrary CosmosMsg.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6520,"byte_end":6549,"line_start":199,"line_end":199,"column_start":5,"column_end":34}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6554,"byte_end":6646,"line_start":200,"line_end":200,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6651,"byte_end":6706,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":7164,"byte_end":7177,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"execute_multi","qualname":"<App<C>>::execute_multi","value":"pub fn execute_multi(&mut Self, Addr, Vec<CosmosMsg<C>>)\n-> Result<Vec<AppResponse>, String>","parent":null,"children":[],"decl_id":null,"docs":" Runs multiple CosmosMsg in one atomic operation.\n This will create a cache before the execution, so no state changes are persisted if any of them\n return an error. But all writes are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs multiple CosmosMsg in one atomic operation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6930,"byte_end":6982,"line_start":208,"line_end":208,"column_start":5,"column_end":57}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if any of them","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":6987,"byte_end":7086,"line_start":209,"line_end":209,"column_start":5,"column_end":104}},{"value":"/ return an error. But all writes are persisted on success.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":7091,"byte_end":7152,"line_start":210,"line_end":210,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8168,"byte_end":8172,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"sudo","qualname":"<App<C>>::sudo","value":"pub fn sudo<T: Serialize, U: Into<Addr>>(&mut Self, U, &T)\n-> Result<AppResponse, String>","parent":null,"children":[],"decl_id":null,"docs":" Runs arbitrary CosmosMsg.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs arbitrary CosmosMsg.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":7970,"byte_end":7999,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8004,"byte_end":8096,"line_start":237,"line_end":237,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8101,"byte_end":8156,"line_start":238,"line_end":238,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8658,"byte_end":8666,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"AppCache","qualname":"::app::AppCache","value":"AppCache {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8825,"byte_end":8831,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"AppOps","qualname":"::app::AppOps","value":"AppOps {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8900,"byte_end":8906,"line_start":273,"line_end":273,"column_start":12,"column_end":18},"name":"commit","qualname":"<AppOps>::commit","value":"pub fn commit<C>(Self, &mut App<C>) where C: Clone + fmt::Debug + PartialEq +\nJsonSchema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":9679,"byte_end":9686,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"prepare","qualname":"<AppCache>::prepare","value":"pub fn prepare(Self) -> AppOps","parent":null,"children":[],"decl_id":null,"docs":" When we want to commit the RouterCache, we need a 2 step process to satisfy Rust reference counting:\n 1. prepare() consumes RouterCache, releasing &Router, and creating a self-owned update info.\n 2. RouterOps::commit() can now take &mut Router and updates the underlying state\n","sig":null,"attributes":[{"value":"/ When we want to commit the RouterCache, we need a 2 step process to satisfy Rust reference counting:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":9373,"byte_end":9477,"line_start":294,"line_end":294,"column_start":5,"column_end":109}},{"value":"/ 1. prepare() consumes RouterCache, releasing &Router, and creating a self-owned update info.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":9482,"byte_end":9578,"line_start":295,"line_end":295,"column_start":5,"column_end":101}},{"value":"/ 2. RouterOps::commit() can now take &mut Router and updates the underlying state","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":9583,"byte_end":9667,"line_start":296,"line_end":296,"column_start":5,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":14229,"byte_end":14248,"line_start":422,"line_end":422,"column_start":8,"column_end":27},"name":"parse_contract_addr","qualname":"::app::parse_contract_addr","value":"pub fn parse_contract_addr(&Option<Binary>) -> Result<Addr, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":220},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":24762,"byte_end":24766,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"Bank","qualname":"::bank::Bank","value":"Bank","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" Bank is a minimal contract-like interface that implements a bank module\n It is initialized outside of the trait\n","sig":null,"attributes":[{"value":"/ Bank is a minimal contract-like interface that implements a bank module","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":24633,"byte_end":24708,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ It is initialized outside of the trait","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":24709,"byte_end":24751,"line_start":13,"line_end":13,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":24776,"byte_end":24782,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"handle","qualname":"::bank::Bank::handle","value":"pub fn handle(&Self, &mut dyn Storage, Addr, BankMsg) -> Result<(), String>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":24876,"byte_end":24881,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"query","qualname":"::bank::Bank::query","value":"pub fn query(&Self, &dyn Storage, BankQuery) -> Result<Binary, String>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25033,"byte_end":25044,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"set_balance","qualname":"::bank::Bank::set_balance","value":"pub fn set_balance(&Self, &mut dyn Storage, &Addr, Vec<Coin>)\n-> Result<(), String>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25184,"byte_end":25189,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"clone","qualname":"::bank::Bank::clone","value":"pub fn clone(&Self) -> Box<dyn Bank>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25229,"byte_end":25239,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"BankRouter","qualname":"::bank::BankRouter","value":"BankRouter {  }","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25330,"byte_end":25333,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<BankRouter>::new","value":"pub fn new<B: Bank + 'static>(B, Box<dyn Storage>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25569,"byte_end":25580,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"set_balance","qualname":"<BankRouter>::set_balance","value":"pub fn set_balance(&mut Self, &Addr, Vec<Coin>) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25752,"byte_end":25757,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"cache","qualname":"<BankRouter>::cache","value":"pub fn cache(&Self) -> BankCache","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25834,"byte_end":25839,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"query","qualname":"<BankRouter>::query","value":"pub fn query(&Self, BankQuery) -> Result<Binary, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25971,"byte_end":25980,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"BankCache","qualname":"::bank::BankCache","value":"BankCache {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26104,"byte_end":26111,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"BankOps","qualname":"::bank::BankOps","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26148,"byte_end":26154,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"commit","qualname":"<BankOps>::commit","value":"pub fn commit(Self, &mut BankRouter)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26752,"byte_end":26759,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"prepare","qualname":"<BankCache>::prepare","value":"pub fn prepare(Self) -> BankOps","parent":null,"children":[],"decl_id":null,"docs":" When we want to commit the BankCache, we need a 2 step process to satisfy Rust reference counting:\n 1. prepare() consumes BankCache, releasing &BankRouter, and creating a self-owned update info.\n 2. BankOps::commit() can now take &mut BankRouter and updates the underlying state\n","sig":null,"attributes":[{"value":"/ When we want to commit the BankCache, we need a 2 step process to satisfy Rust reference counting:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26444,"byte_end":26546,"line_start":80,"line_end":80,"column_start":5,"column_end":107}},{"value":"/ 1. prepare() consumes BankCache, releasing &BankRouter, and creating a self-owned update info.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26551,"byte_end":26649,"line_start":81,"line_end":81,"column_start":5,"column_end":103}},{"value":"/ 2. BankOps::commit() can now take &mut BankRouter and updates the underlying state","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26654,"byte_end":26740,"line_start":82,"line_end":82,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26835,"byte_end":26842,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"execute","qualname":"<BankCache>::execute","value":"pub fn execute(&mut Self, Addr, BankMsg) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":27007,"byte_end":27017,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"SimpleBank","qualname":"::bank::SimpleBank","value":"SimpleBank {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":27117,"byte_end":27128,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"get_balance","qualname":"<SimpleBank>::get_balance","value":"pub fn get_balance(&Self, &dyn Storage, &Addr) -> Result<Vec<Coin>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":438},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":59606,"byte_end":59614,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"Contract","qualname":"::wasm::Contract","value":"Contract<T>","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":" Interface to call into a Contract\n","sig":null,"attributes":[{"value":"/ Interface to call into a Contract","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":59558,"byte_end":59595,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":59685,"byte_end":59691,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"handle","qualname":"::wasm::Contract::handle","value":"pub fn handle(&Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> Result<Response<T>, String>","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":59844,"byte_end":59848,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"init","qualname":"::wasm::Contract::init","value":"pub fn init(&Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> Result<Response<T>, String>","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":60001,"byte_end":60005,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"sudo","qualname":"::wasm::Contract::sudo","value":"pub fn sudo(&Self, DepsMut, Env, Vec<u8>) -> Result<Response<T>, String>","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":60092,"byte_end":60097,"line_start":37,"line_end":37,"column_start":8,"column_end":13},"name":"query","qualname":"::wasm::Contract::query","value":"pub fn query(&Self, Deps, Env, Vec<u8>) -> Result<Binary, String>","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":60911,"byte_end":60926,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"name":"ContractWrapper","qualname":"::wasm::ContractWrapper","value":"ContractWrapper {  }","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"decl_id":null,"docs":" Wraps the exported functions from a contract and provides the normalized format\n Place T4 and E4 at the end, as we just want default placeholders for most contracts that don't have sudo\n","sig":null,"attributes":[{"value":"/ Wraps the exported functions from a contract and provides the normalized format","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":60707,"byte_end":60790,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/ Place T4 and E4 at the end, as we just want default placeholders for most contracts that don't have sudo","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":60791,"byte_end":60899,"line_start":50,"line_end":50,"column_start":1,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":61739,"byte_end":61742,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C>>::new","value":"pub fn new(ContractFn<T1, C, E1>, ContractFn<T2, C, E2>, QueryFn<T3, E3>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":62251,"byte_end":62265,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"new_with_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C>>::new_with_empty","value":"pub fn new_with_empty(ContractFn<T1, Empty, E1>, ContractFn<T2, Empty, E2>,\n                      QueryFn<T3, E3>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" this will take a contract that returns Response<Empty> and will \"upgrade\" it\n to Response<C> if needed to be compatible with a chain-specific extension\n","sig":null,"attributes":[{"value":"/ this will take a contract that returns Response<Empty> and will \"upgrade\" it","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":62077,"byte_end":62157,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ to Response<C> if needed to be compatible with a chain-specific extension","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":62162,"byte_end":62239,"line_start":93,"line_end":93,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":63042,"byte_end":63055,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"new_with_sudo","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4>>::new_with_sudo","value":"pub fn new_with_sudo(ContractFn<T1, C, E1>, ContractFn<T2, C, E2>,\n                     QueryFn<T3, E3>, SudoFn<T4, C, E4>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":67053,"byte_end":67063,"line_start":251,"line_end":251,"column_start":8,"column_end":18},"name":"next_block","qualname":"::wasm::next_block","value":"pub fn next_block(&mut BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":540},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":67224,"byte_end":67234,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"WasmRouter","qualname":"::wasm::WasmRouter","value":"WasmRouter {  }","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":67638,"byte_end":67641,"line_start":275,"line_end":275,"column_start":12,"column_end":15},"name":"new","qualname":"<WasmRouter<C>>::new","value":"pub fn new(Box<dyn Api>, BlockInfo, StorageFactory) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":67913,"byte_end":67922,"line_start":285,"line_end":285,"column_start":12,"column_end":21},"name":"set_block","qualname":"<WasmRouter<C>>::set_block","value":"pub fn set_block(&mut Self, BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":68083,"byte_end":68095,"line_start":290,"line_end":290,"column_start":12,"column_end":24},"name":"update_block","qualname":"<WasmRouter<C>>::update_block","value":"pub fn update_block<F: Fn(&mut BlockInfo) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":68243,"byte_end":68253,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"block_info","qualname":"<WasmRouter<C>>::block_info","value":"pub fn block_info(&Self) -> BlockInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the current block_info\n","sig":null,"attributes":[{"value":"/ Returns a copy of the current block_info","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":68187,"byte_end":68231,"line_start":294,"line_end":294,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":68321,"byte_end":68331,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"store_code","qualname":"<WasmRouter<C>>::store_code","value":"pub fn store_code(&mut Self, Box<dyn Contract<C>>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":68496,"byte_end":68501,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"cache","qualname":"<WasmRouter<C>>::cache","value":"pub fn cache(&Self) -> WasmCache<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":68581,"byte_end":68586,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"query","qualname":"<WasmRouter<C>>::query","value":"pub fn query(&Self, &dyn Querier, WasmQuery) -> Result<Binary, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":69072,"byte_end":69083,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"query_smart","qualname":"<WasmRouter<C>>::query_smart","value":"pub fn query_smart(&Self, Addr, &dyn Querier, Vec<u8>)\n-> Result<Binary, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":69348,"byte_end":69357,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"query_raw","qualname":"<WasmRouter<C>>::query_raw","value":"pub fn query_raw(&Self, Addr, &[u8]) -> Result<Binary, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71227,"byte_end":71236,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"WasmCache","qualname":"::wasm::WasmCache","value":"WasmCache {  }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"decl_id":null,"docs":" A writable transactional cache over the wasm state.","sig":null,"attributes":[{"value":"/ A writable transactional cache over the wasm state.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70682,"byte_end":70737,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70738,"byte_end":70741,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ Reads hit local hashmap or then hit router","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70742,"byte_end":70788,"line_start":380,"line_end":380,"column_start":1,"column_end":47}},{"value":"/ Getting storage wraps the internal contract storage","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70789,"byte_end":70844,"line_start":381,"line_end":381,"column_start":1,"column_end":56}},{"value":"/  - adding handler","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70845,"byte_end":70866,"line_start":382,"line_end":382,"column_start":1,"column_end":22}},{"value":"/  - adding contract","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70867,"byte_end":70889,"line_start":383,"line_end":383,"column_start":1,"column_end":23}},{"value":"/  - writing existing contract","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70890,"byte_end":70922,"line_start":384,"line_end":384,"column_start":1,"column_end":33}},{"value":"/ Return op-log to flush, like transactional:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70923,"byte_end":70970,"line_start":385,"line_end":385,"column_start":1,"column_end":48}},{"value":"/  - consume this struct (release router) and return list of ops to perform","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":70971,"byte_end":71048,"line_start":386,"line_end":386,"column_start":1,"column_end":78}},{"value":"/  - pass ops &mut WasmRouter to update them","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71049,"byte_end":71095,"line_start":387,"line_end":387,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71096,"byte_end":71099,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ In Router, we use this exclusively in all the calls in execute (not self.wasm)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71100,"byte_end":71182,"line_start":389,"line_end":389,"column_start":1,"column_end":83}},{"value":"/ In Querier, we use self.wasm","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71183,"byte_end":71215,"line_start":390,"line_end":390,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71909,"byte_end":71916,"line_start":411,"line_end":411,"column_start":12,"column_end":19},"name":"WasmOps","qualname":"::wasm::WasmOps","value":"WasmOps {  }","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" This is a set of data from the WasmCache with no external reference,\n which can be used to commit to the underlying WasmRouter.\n","sig":null,"attributes":[{"value":"/ This is a set of data from the WasmCache with no external reference,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71763,"byte_end":71835,"line_start":409,"line_end":409,"column_start":1,"column_end":73}},{"value":"/ which can be used to commit to the underlying WasmRouter.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":71836,"byte_end":71897,"line_start":410,"line_end":410,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72037,"byte_end":72043,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"commit","qualname":"<WasmOps>::commit","value":"pub fn commit<C>(Self, &mut WasmRouter<C>) where C: Clone + fmt::Debug +\nPartialEq + JsonSchema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":73113,"byte_end":73120,"line_start":448,"line_end":448,"column_start":12,"column_end":19},"name":"prepare","qualname":"<WasmCache>::prepare","value":"pub fn prepare(Self) -> WasmOps","parent":null,"children":[],"decl_id":null,"docs":" When we want to commit the WasmCache, we need a 2 step process to satisfy Rust reference counting:\n 1. prepare() consumes WasmCache, releasing &WasmRouter, and creating a self-owned update info.\n 2. WasmOps::commit() can now take &mut WasmRouter and updates the underlying state\n","sig":null,"attributes":[{"value":"/ When we want to commit the WasmCache, we need a 2 step process to satisfy Rust reference counting:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72805,"byte_end":72907,"line_start":445,"line_end":445,"column_start":5,"column_end":107}},{"value":"/ 1. prepare() consumes WasmCache, releasing &WasmRouter, and creating a self-owned update info.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72912,"byte_end":73010,"line_start":446,"line_end":446,"column_start":5,"column_end":103}},{"value":"/ 2. WasmOps::commit() can now take &mut WasmRouter and updates the underlying state","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":73015,"byte_end":73101,"line_start":447,"line_end":447,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":73423,"byte_end":73440,"line_start":455,"line_end":455,"column_start":12,"column_end":29},"name":"register_contract","qualname":"<WasmCache>::register_contract","value":"pub fn register_contract(&mut Self, usize) -> Result<Addr, String>","parent":null,"children":[],"decl_id":null,"docs":" This just creates an address and empty storage instance, returning the new address\n You must call init after this to set up the contract properly.\n These are separated into two steps to have cleaner return values.\n","sig":null,"attributes":[{"value":"/ This just creates an address and empty storage instance, returning the new address","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":73180,"byte_end":73266,"line_start":452,"line_end":452,"column_start":5,"column_end":91}},{"value":"/ You must call init after this to set up the contract properly.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":73271,"byte_end":73337,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ These are separated into two steps to have cleaner return values.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":73342,"byte_end":73411,"line_start":454,"line_end":454,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":74151,"byte_end":74157,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"handle","qualname":"<WasmCache>::handle","value":"pub fn handle(&mut Self, Addr, &dyn Querier, MessageInfo, Vec<u8>)\n-> Result<Response<C>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":74921,"byte_end":74925,"line_start":499,"line_end":499,"column_start":12,"column_end":16},"name":"init","qualname":"<WasmCache>::init","value":"pub fn init(&mut Self, Addr, &dyn Querier, MessageInfo, Vec<u8>)\n-> Result<Response<C>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":75687,"byte_end":75691,"line_start":526,"line_end":526,"column_start":12,"column_end":16},"name":"sudo","qualname":"<WasmCache>::sudo","value":"pub fn sudo(&mut Self, Addr, &dyn Querier, Vec<u8>)\n-> Result<Response<C>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":1278,"byte_end":1292,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":1560,"byte_end":1574,"line_start":47,"line_end":47,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":1899,"byte_end":1902,"line_start":60,"line_end":60,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3117,"byte_end":3120,"line_start":94,"line_end":94,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8880,"byte_end":8886,"line_start":272,"line_end":272,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":9118,"byte_end":9126,"line_start":282,"line_end":282,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25306,"byte_end":25316,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26127,"byte_end":26134,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26253,"byte_end":26262,"line_start":72,"line_end":72,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":27027,"byte_end":27037,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":28352,"byte_end":28362,"line_start":138,"line_end":138,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":40927,"byte_end":40945,"line_start":29,"line_end":29,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":41493,"byte_end":41511,"line_start":48,"line_end":48,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":43710,"byte_end":43716,"line_start":112,"line_end":112,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":44438,"byte_end":44440,"line_start":143,"line_end":143,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":45547,"byte_end":45559,"line_start":183,"line_end":183,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":46915,"byte_end":46927,"line_start":226,"line_end":226,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":61423,"byte_end":61438,"line_start":69,"line_end":69,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":62654,"byte_end":62669,"line_start":108,"line_end":108,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":65186,"byte_end":65201,"line_start":187,"line_end":187,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":66916,"byte_end":66928,"line_start":245,"line_end":245,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":67553,"byte_end":67563,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72016,"byte_end":72023,"line_start":416,"line_end":416,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72477,"byte_end":72486,"line_start":431,"line_end":431,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":76420,"byte_end":76434,"line_start":553,"line_end":553,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":1278,"byte_end":1292,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":1560,"byte_end":1574,"line_start":47,"line_end":47,"column_start":9,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":1899,"byte_end":1902,"line_start":60,"line_end":60,"column_start":21,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":118},"to":{"krate":21,"index":1454}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":3117,"byte_end":3120,"line_start":94,"line_end":94,"column_start":9,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":8880,"byte_end":8886,"line_start":272,"line_end":272,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/app.rs","byte_start":9118,"byte_end":9126,"line_start":282,"line_end":282,"column_start":13,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":25306,"byte_end":25316,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26127,"byte_end":26134,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":26253,"byte_end":26262,"line_start":72,"line_end":72,"column_start":10,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":27027,"byte_end":27037,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/bank.rs","byte_start":28352,"byte_end":28362,"line_start":138,"line_end":138,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":220}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":40927,"byte_end":40945,"line_start":29,"line_end":29,"column_start":10,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":41493,"byte_end":41511,"line_start":48,"line_end":48,"column_start":22,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":298},"to":{"krate":21,"index":1438}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":43710,"byte_end":43716,"line_start":112,"line_end":112,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":44438,"byte_end":44440,"line_start":143,"line_end":143,"column_start":6,"column_end":8},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":45547,"byte_end":45559,"line_start":183,"line_end":183,"column_start":16,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/transactions.rs","byte_start":46915,"byte_end":46927,"line_start":226,"line_end":226,"column_start":29,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":7317}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":61423,"byte_end":61438,"line_start":69,"line_end":69,"column_start":33,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":62654,"byte_end":62669,"line_start":108,"line_end":108,"column_start":41,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":65186,"byte_end":65201,"line_start":187,"line_end":187,"column_start":9,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":466},"to":{"krate":0,"index":438}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":66916,"byte_end":66928,"line_start":245,"line_end":245,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":67553,"byte_end":67563,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72016,"byte_end":72023,"line_start":416,"line_end":416,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":72477,"byte_end":72486,"line_start":431,"line_end":431,"column_start":13,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.6.0/src/wasm.rs","byte_start":76420,"byte_end":76434,"line_start":553,"line_end":553,"column_start":10,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":573},"to":{"krate":4294967295,"index":4294967295}}]}
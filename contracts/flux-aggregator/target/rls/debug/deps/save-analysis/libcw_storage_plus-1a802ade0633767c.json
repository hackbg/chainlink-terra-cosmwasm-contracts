{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"iterator\"","-C","metadata=1a802ade0633767c","-C","extra-filename=-1a802ade0633767c","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","cosmwasm_std=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcosmwasm_std-365a695097d5979a.rmeta","--extern","schemars=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libschemars-53ef66595cc9072f.rmeta","--extern","serde=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libserde-de099ef8bdb72d88.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcw_storage_plus-1a802ade0633767c.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[1480934848363997946,14425016405361237708]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","num":19,"id":{"name":"serde","disambiguator":[11161174855159807840,11662819943618983176]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","num":20,"id":{"name":"serde_derive","disambiguator":[11350605354183850550,9010745208244710793]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":21,"id":{"name":"cosmwasm_std","disambiguator":[12688950139995787771,16236961477621444827]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":22,"id":{"name":"schemars","disambiguator":[9833878935271821116,1160506451644549907]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":23,"id":{"name":"schemars_derive","disambiguator":[4190896731209354013,7422771034004699676]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":24,"id":{"name":"serde_json","disambiguator":[13617840397567654371,2357134987517516315]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":25,"id":{"name":"itoa","disambiguator":[11761717447849771372,1476596716891942946]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":26,"id":{"name":"ryu","disambiguator":[2686056169118969673,4698952673064697069]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":27,"id":{"name":"dyn_clone","disambiguator":[1351258937125171548,750223860837007170]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":28,"id":{"name":"cosmwasm_crypto","disambiguator":[15192265634897791109,13398054616086461723]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":29,"id":{"name":"ed25519_zebra","disambiguator":[1814607406423690066,17054101721003244006]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":30,"id":{"name":"curve25519_dalek","disambiguator":[1710251577914765931,15921235370094257782]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":31,"id":{"name":"byteorder","disambiguator":[3071847127673975179,7003147510126265182]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":32,"id":{"name":"digest","disambiguator":[11815551155626523553,13150518862568951459]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":33,"id":{"name":"generic_array","disambiguator":[2843115902605017426,8992412963017954804]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":34,"id":{"name":"typenum","disambiguator":[15595204929548488895,11009855742131221505]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":35,"id":{"name":"rand_core","disambiguator":[15262903449215184178,1965405531746979256]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":36,"id":{"name":"getrandom","disambiguator":[17970065197973694116,6812716713039249432]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":37,"id":{"name":"cfg_if","disambiguator":[18066125678311518643,11358915899814267326]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":38,"id":{"name":"libc","disambiguator":[2521045491498281214,2123948796851982599]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":39,"id":{"name":"zeroize","disambiguator":[4196693835647716122,2424233725925652009]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":40,"id":{"name":"subtle","disambiguator":[13649248947348070893,10545555751276563020]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":41,"id":{"name":"sha2","disambiguator":[4845292581609176579,17354008811375486299]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":42,"id":{"name":"block_buffer","disambiguator":[7300277867098391491,9789664017212379998]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":43,"id":{"name":"opaque_debug","disambiguator":[12244708370773904289,12878298131593829713]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":44,"id":{"name":"cpufeatures","disambiguator":[11584142461511734604,9220515001620625460]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":45,"id":{"name":"thiserror","disambiguator":[48069925778631392,5913340674478008252]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":46,"id":{"name":"thiserror_impl","disambiguator":[10923328257164092015,5282325289946833054]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":47,"id":{"name":"hex","disambiguator":[9852775344725850136,1362423804578184921]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":48,"id":{"name":"k256","disambiguator":[7991146506723395621,13662542764480845641]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":49,"id":{"name":"elliptic_curve","disambiguator":[12962610352709599449,1092650790515722109]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":50,"id":{"name":"ff","disambiguator":[2127753199578883533,6038891583446360077]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":51,"id":{"name":"bitvec","disambiguator":[12843394802284785757,18049944760944282035]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":52,"id":{"name":"radium","disambiguator":[6170578490148099913,11385662121544404573]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":53,"id":{"name":"wyz","disambiguator":[14075336805396516078,8175419829704857618]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":54,"id":{"name":"funty","disambiguator":[18100334673436176153,12213058834818999383]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":55,"id":{"name":"group","disambiguator":[4491951580228129931,2167256649219017635]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":56,"id":{"name":"pkcs8","disambiguator":[4005606756325313909,11473494331770028794]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":57,"id":{"name":"der","disambiguator":[6620283982502722200,2601874819529451539]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":58,"id":{"name":"const_oid","disambiguator":[16652256300093258142,3482606670295155140]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":59,"id":{"name":"ecdsa","disambiguator":[10095924235346771483,13530389282245231814]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":60,"id":{"name":"signature","disambiguator":[11852001358081360889,258583192709905972]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":61,"id":{"name":"hmac","disambiguator":[14461085160494243860,6945854892547497893]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":62,"id":{"name":"crypto_mac","disambiguator":[18287248403066418544,2337432805662306154]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":63,"id":{"name":"cosmwasm_derive","disambiguator":[3182685869311308364,3800816871454037190]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":64,"id":{"name":"base64","disambiguator":[14774770423289327321,16596935086425946379]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/helpers.rs","num":65,"id":{"name":"serde_json_wasm","disambiguator":[11801744276582033583,8448971521265046953]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":0,"byte_end":827,"line_start":1,"line_end":31,"column_start":1,"column_end":43}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":177,"byte_end":183,"line_start":14,"line_end":14,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":236,"byte_end":245,"line_start":16,"line_end":16,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":247,"byte_end":257,"line_start":16,"line_end":16,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":315,"byte_end":333,"line_start":18,"line_end":18,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":274},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":387,"byte_end":399,"line_start":21,"line_end":21,"column_start":5,"column_end":17},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":401,"byte_end":419,"line_start":21,"line_end":21,"column_start":19,"column_end":37},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":421,"byte_end":433,"line_start":21,"line_end":21,"column_start":39,"column_end":51},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":435,"byte_end":446,"line_start":21,"line_end":21,"column_start":53,"column_end":64},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":448,"byte_end":453,"line_start":21,"line_end":21,"column_start":66,"column_end":71},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":455,"byte_end":465,"line_start":21,"line_end":21,"column_start":73,"column_end":83},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":467,"byte_end":478,"line_start":21,"line_end":21,"column_start":85,"column_end":96},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":497,"byte_end":501,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":536},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":518,"byte_end":525,"line_start":24,"line_end":24,"column_start":16,"column_end":23},"alias_span":null,"name":"I128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":527,"byte_end":533,"line_start":24,"line_end":24,"column_start":25,"column_end":31},"alias_span":null,"name":"I16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":535,"byte_end":541,"line_start":24,"line_end":24,"column_start":33,"column_end":39},"alias_span":null,"name":"I32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":543,"byte_end":549,"line_start":24,"line_end":24,"column_start":41,"column_end":47},"alias_span":null,"name":"I64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":532},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":551,"byte_end":556,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"alias_span":null,"name":"I8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":574,"byte_end":582,"line_start":25,"line_end":25,"column_start":16,"column_end":24},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":584,"byte_end":594,"line_start":25,"line_end":25,"column_start":26,"column_end":36},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":596,"byte_end":603,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"U128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":605,"byte_end":611,"line_start":25,"line_end":25,"column_start":47,"column_end":53},"alias_span":null,"name":"U16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":613,"byte_end":619,"line_start":25,"line_end":25,"column_start":55,"column_end":61},"alias_span":null,"name":"U32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":621,"byte_end":627,"line_start":25,"line_end":25,"column_start":63,"column_end":69},"alias_span":null,"name":"U64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":629,"byte_end":634,"line_start":25,"line_end":25,"column_start":71,"column_end":76},"alias_span":null,"name":"U8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":650,"byte_end":653,"line_start":26,"line_end":26,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1100},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":669,"byte_end":673,"line_start":27,"line_end":27,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":734},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":721,"byte_end":738,"line_start":29,"line_end":29,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":740,"byte_end":745,"line_start":29,"line_end":29,"column_start":37,"column_end":42},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1121},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":747,"byte_end":753,"line_start":29,"line_end":29,"column_start":44,"column_end":50},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":804,"byte_end":815,"line_start":31,"line_end":31,"column_start":20,"column_end":31},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":817,"byte_end":825,"line_start":31,"line_end":31,"column_start":33,"column_end":41},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","byte_start":0,"byte_end":827,"line_start":1,"line_end":31,"column_start":1,"column_end":43},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":40},{"krate":0,"index":123},{"krate":0,"index":216},{"krate":0,"index":358},{"krate":0,"index":408},{"krate":0,"index":430},{"krate":0,"index":549},{"krate":0,"index":616},{"krate":0,"index":666},{"krate":0,"index":741},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1289,"byte_end":1295,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1321,"byte_end":1324,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1387,"byte_end":1398,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1426,"byte_end":1437,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1466,"byte_end":1479,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1514,"byte_end":1527,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":83},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8004,"byte_end":8013,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8026,"byte_end":8037,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8234,"byte_end":8244,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" IndexedBucket works like a bucket but has a secondary index\n TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ IndexedBucket works like a bucket but has a secondary index","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8103,"byte_end":8166,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8167,"byte_end":8222,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":93},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8525,"byte_end":8528,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8415,"byte_end":8483,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8488,"byte_end":8516,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8746,"byte_end":8749,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8679,"byte_end":8734,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8966,"byte_end":8969,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9447,"byte_end":9451,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9176,"byte_end":9262,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9267,"byte_end":9330,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9335,"byte_end":9435,"line_start":61,"line_end":61,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9662,"byte_end":9668,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":10115,"byte_end":10122,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9856,"byte_end":9952,"line_start":72,"line_end":72,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9957,"byte_end":10044,"line_start":73,"line_end":73,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":10049,"byte_end":10103,"line_start":74,"line_end":74,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11112,"byte_end":11118,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":10834,"byte_end":10904,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":10909,"byte_end":10995,"line_start":101,"line_end":101,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11000,"byte_end":11003,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11008,"byte_end":11100,"line_start":103,"line_end":103,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11753,"byte_end":11757,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11658,"byte_end":11741,"line_start":119,"line_end":119,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":12013,"byte_end":12021,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11861,"byte_end":11958,"line_start":124,"line_end":124,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":11963,"byte_end":12001,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":12179,"byte_end":12185,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":12331,"byte_end":12341,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":12834,"byte_end":12839,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30584,"byte_end":30602,"line_start":14,"line_end":14,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" IndexedSnapshotMap works like a SnapshotMap but has a secondary index\n","sig":null,"attributes":[{"value":"/ IndexedSnapshotMap works like a SnapshotMap but has a secondary index","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30499,"byte_end":30572,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":177},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30891,"byte_end":30894,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30781,"byte_end":30849,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30854,"byte_end":30882,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":31060,"byte_end":31063,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":31439,"byte_end":31453,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":31587,"byte_end":31604,"line_start":51,"line_end":51,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":31905,"byte_end":31923,"line_start":62,"line_end":62,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32112,"byte_end":32131,"line_start":71,"line_end":71,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32266,"byte_end":32269,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32770,"byte_end":32774,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32499,"byte_end":32585,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32590,"byte_end":32653,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32658,"byte_end":32758,"line_start":88,"line_end":88,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":33006,"byte_end":33012,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":33480,"byte_end":33487,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":33221,"byte_end":33317,"line_start":99,"line_end":99,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":33322,"byte_end":33409,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":33414,"byte_end":33468,"line_start":101,"line_end":101,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":34515,"byte_end":34521,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":34237,"byte_end":34307,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":34312,"byte_end":34398,"line_start":129,"line_end":129,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":34403,"byte_end":34406,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":34411,"byte_end":34503,"line_start":131,"line_end":131,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35224,"byte_end":35228,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35129,"byte_end":35212,"line_start":153,"line_end":153,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35484,"byte_end":35492,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35332,"byte_end":35429,"line_start":158,"line_end":158,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35434,"byte_end":35472,"line_start":159,"line_end":159,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35650,"byte_end":35656,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35802,"byte_end":35812,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":36328,"byte_end":36333,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":52577,"byte_end":52589,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":52654,"byte_end":52665,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, U32Key)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":52764,"byte_end":52776,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, U32Key, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":52901,"byte_end":52919,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53149,"byte_end":53154,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53218,"byte_end":53222,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53301,"byte_end":53307,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":54079,"byte_end":54089,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53386,"byte_end":53460,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53461,"byte_end":53513,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53514,"byte_end":53592,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53593,"byte_end":53649,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53650,"byte_end":53653,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53654,"byte_end":53739,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53740,"byte_end":53805,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53806,"byte_end":53809,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The MultiIndex definition must include a field for the pk. That is, the MultiIndex K value","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53810,"byte_end":53904,"line_start":48,"line_end":48,"column_start":1,"column_end":95}},{"value":"/ is always a n-tuple (n >= 2) and its last element must be the pk.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53905,"byte_end":53974,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/ The index function must therefore put the pk as last element, when generating the index.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":53975,"byte_end":54067,"line_start":50,"line_end":50,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":54359,"byte_end":54362,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T, : Vec<u8>) -> K, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":55947,"byte_end":55953,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":56187,"byte_end":56197,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":56434,"byte_end":56443,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":56559,"byte_end":56562,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"pks","qualname":"<MultiIndex>::pks","value":"pub fn pks<'c>(&Self, &'c dyn Storage, K::Prefix, Option<Bound>,\n               Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Vec<u8>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":57988,"byte_end":57993,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 Order) -> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":58668,"byte_end":58679,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":58515,"byte_end":58588,"line_start":216,"line_end":216,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":58589,"byte_end":58656,"line_start":217,"line_end":217,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":58871,"byte_end":58874,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> K, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60313,"byte_end":60322,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, K) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60390,"byte_end":60396,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60597,"byte_end":60607,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60893,"byte_end":60897,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, K) -> StdResult<Option<Pair<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60804,"byte_end":60881,"line_start":290,"line_end":290,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":61484,"byte_end":61489,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62194,"byte_end":62198,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62010,"byte_end":62058,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62059,"byte_end":62094,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62095,"byte_end":62182,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62508,"byte_end":62511,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62798,"byte_end":62806,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62958,"byte_end":62962,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62861,"byte_end":62946,"line_start":37,"line_end":37,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63110,"byte_end":63116,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63297,"byte_end":63301,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63202,"byte_end":63285,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63593,"byte_end":63601,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63441,"byte_end":63538,"line_start":53,"line_end":53,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63543,"byte_end":63581,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":64026,"byte_end":64032,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63748,"byte_end":63818,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63823,"byte_end":63909,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63914,"byte_end":63917,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":63922,"byte_end":64014,"line_start":63,"line_end":63,"column_start":5,"column_end":97}}]},{"kind":"Trait","id":{"krate":0,"index":443},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78480,"byte_end":78490,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":445},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78513,"byte_end":78519,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":446},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78544,"byte_end":78553,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78648,"byte_end":78651,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78574,"byte_end":78640,"line_start":12,"line_end":12,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78682,"byte_end":78692,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":474},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":80127,"byte_end":80135,"line_start":71,"line_end":71,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":80250,"byte_end":80256,"line_start":73,"line_end":73,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should length-prefixed and concatenated for range searches","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":80146,"byte_end":80242,"line_start":72,"line_end":72,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":497},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":81241,"byte_end":81252,"line_start":113,"line_end":113,"column_start":11,"column_end":22},"name":"EmptyPrefix","qualname":"::keys::EmptyPrefix","value":"EmptyPrefix","parent":null,"children":[{"krate":0,"index":498}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":81262,"byte_end":81265,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"new","qualname":"::keys::EmptyPrefix::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":527},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82417,"byte_end":82422,"line_start":170,"line_end":170,"column_start":10,"column_end":15},"name":"U8Key","qualname":"::keys::U8Key","value":"IntKey<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":528},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82446,"byte_end":82452,"line_start":171,"line_end":171,"column_start":10,"column_end":16},"name":"U16Key","qualname":"::keys::U16Key","value":"IntKey<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":529},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82477,"byte_end":82483,"line_start":172,"line_end":172,"column_start":10,"column_end":16},"name":"U32Key","qualname":"::keys::U32Key","value":"IntKey<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82508,"byte_end":82514,"line_start":173,"line_end":173,"column_start":10,"column_end":16},"name":"U64Key","qualname":"::keys::U64Key","value":"IntKey<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":531},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82539,"byte_end":82546,"line_start":174,"line_end":174,"column_start":10,"column_end":17},"name":"U128Key","qualname":"::keys::U128Key","value":"IntKey<u128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82573,"byte_end":82578,"line_start":176,"line_end":176,"column_start":10,"column_end":15},"name":"I8Key","qualname":"::keys::I8Key","value":"IntKey<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":533},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82602,"byte_end":82608,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"I16Key","qualname":"::keys::I16Key","value":"IntKey<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":534},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82633,"byte_end":82639,"line_start":178,"line_end":178,"column_start":10,"column_end":16},"name":"I32Key","qualname":"::keys::I32Key","value":"IntKey<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":535},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82664,"byte_end":82670,"line_start":179,"line_end":179,"column_start":10,"column_end":16},"name":"I64Key","qualname":"::keys::I64Key","value":"IntKey<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":536},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82695,"byte_end":82702,"line_start":180,"line_end":180,"column_start":10,"column_end":17},"name":"I128Key","qualname":"::keys::I128Key","value":"IntKey<i128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83052,"byte_end":83058,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"IntKey","qualname":"::keys::IntKey","value":"IntKey { wrapped, data }","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64\n You can use new or the from/into pair to build a key from an int:","sig":null,"attributes":[{"value":"/ It will cast one-particular int type into a Key via Vec<u8>, ensuring you don't mix up u32 and u64","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82720,"byte_end":82822,"line_start":182,"line_end":182,"column_start":1,"column_end":103}},{"value":"/ You can use new or the from/into pair to build a key from an int:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82823,"byte_end":82892,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82893,"byte_end":82896,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/   let k = U64Key::new(12345);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82897,"byte_end":82930,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/   let k = U32Key::from(12345);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82931,"byte_end":82965,"line_start":186,"line_end":186,"column_start":1,"column_end":35}},{"value":"/   let k: U16Key = 12345.into();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82966,"byte_end":83001,"line_start":187,"line_end":187,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1064},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83080,"byte_end":83087,"line_start":190,"line_end":190,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys::IntKey::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1065},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83106,"byte_end":83110,"line_start":191,"line_end":191,"column_start":9,"column_end":13},"name":"data","qualname":"::keys::IntKey::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":1062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83170,"byte_end":83173,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKey<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87132,"byte_end":87135,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87403,"byte_end":87406,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87694,"byte_end":87697,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87819,"byte_end":87825,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87779,"byte_end":87807,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87962,"byte_end":87972,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87922,"byte_end":87950,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88079,"byte_end":88083,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88207,"byte_end":88213,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88394,"byte_end":88398,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88299,"byte_end":88382,"line_start":58,"line_end":58,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88646,"byte_end":88654,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88494,"byte_end":88591,"line_start":63,"line_end":63,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88596,"byte_end":88634,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":89040,"byte_end":89046,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88762,"byte_end":88832,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88837,"byte_end":88923,"line_start":70,"line_end":70,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88928,"byte_end":88931,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":88936,"byte_end":89028,"line_start":72,"line_end":72,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":89491,"byte_end":89496,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":89851,"byte_end":89855,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>\nwhere T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1100},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":105606,"byte_end":105610,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106128,"byte_end":106131,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106534,"byte_end":106538,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106437,"byte_end":106522,"line_start":45,"line_end":45,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106687,"byte_end":106693,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106875,"byte_end":106879,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106780,"byte_end":106863,"line_start":55,"line_end":55,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107172,"byte_end":107180,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107020,"byte_end":107117,"line_start":61,"line_end":61,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107122,"byte_end":107160,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107606,"byte_end":107612,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107328,"byte_end":107398,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107403,"byte_end":107489,"line_start":69,"line_end":69,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107494,"byte_end":107497,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":107502,"byte_end":107594,"line_start":71,"line_end":71,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108608,"byte_end":108617,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::Bound::Inclusive","value":"Bound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108632,"byte_end":108641,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::Bound::Exclusive","value":"Bound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1110},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108596,"byte_end":108601,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Bound","qualname":"::prefix::Bound","value":"pub enum Bound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114}],"decl_id":null,"docs":" Bound is used to defines the two ends of a range, more explicit than Option<u8>\n None means that we don't limit that side of the range at all.\n Include means we use the given bytes as a limit and *include* anything at that exact key\n Exclude means we use the given bytes as a limit and *exclude* anything at that exact key\n","sig":null,"attributes":[{"value":"/ Bound is used to defines the two ends of a range, more explicit than Option<u8>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108227,"byte_end":108310,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ None means that we don't limit that side of the range at all.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108311,"byte_end":108376,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ Include means we use the given bytes as a limit and *include* anything at that exact key","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108377,"byte_end":108469,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ Exclude means we use the given bytes as a limit and *exclude* anything at that exact key","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108470,"byte_end":108562,"line_start":16,"line_end":16,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108761,"byte_end":108770,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an inclusive bound","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108672,"byte_end":108749,"line_start":24,"line_end":24,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108948,"byte_end":108957,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an exclusive bound","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108859,"byte_end":108936,"line_start":29,"line_end":29,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109116,"byte_end":109129,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"inclusive_int","qualname":"<Bound>::inclusive_int","value":"pub fn inclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u32> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u32> into an inclusive bound","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109046,"byte_end":109104,"line_start":34,"line_end":34,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109295,"byte_end":109308,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"exclusive_int","qualname":"<Bound>::exclusive_int","value":"pub fn exclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u64> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u64> into an exclusive bound","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109225,"byte_end":109283,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1121},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109508,"byte_end":109514,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":110093,"byte_end":110096,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":110290,"byte_end":110319,"line_start":81,"line_end":81,"column_start":12,"column_end":41},"name":"with_deserialization_function","qualname":"<Prefix<T>>::with_deserialization_function","value":"pub fn with_deserialization_function(&[u8], &[&[u8]], &[u8], DeserializeFn<T>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":110776,"byte_end":110781,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<T>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<Pair<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":111265,"byte_end":111269,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<T>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":111634,"byte_end":111651,"line_start":130,"line_end":130,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<Bound>,\n                             Option<Bound>, Order)\n-> Box<dyn Iterator<Item = Pair> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119038,"byte_end":119049,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":118851,"byte_end":118913,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":118914,"byte_end":118972,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":118973,"byte_end":119026,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119557,"byte_end":119567,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1133},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119573,"byte_end":119578,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119917,"byte_end":119925,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119584,"byte_end":119662,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119667,"byte_end":119721,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119726,"byte_end":119729,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119734,"byte_end":119819,"line_start":39,"line_end":39,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119824,"byte_end":119912,"line_start":40,"line_end":40,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":1130},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119542,"byte_end":119550,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":120067,"byte_end":120070,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)\n","sig":null,"attributes":[{"value":"/ Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119973,"byte_end":120049,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":120394,"byte_end":120408,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":120665,"byte_end":120682,"line_start":68,"line_end":68,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":121223,"byte_end":121226,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":121299,"byte_end":121305,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":121391,"byte_end":121401,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":123487,"byte_end":123491,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":123748,"byte_end":123754,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":124101,"byte_end":124105,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":124006,"byte_end":124089,"line_start":165,"line_end":165,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":124357,"byte_end":124365,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":124205,"byte_end":124302,"line_start":170,"line_end":170,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":124307,"byte_end":124345,"line_start":171,"line_end":171,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":124816,"byte_end":124834,"line_start":181,"line_end":181,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":125701,"byte_end":125720,"line_start":208,"line_end":208,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126530,"byte_end":126536,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126136,"byte_end":126206,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126211,"byte_end":126297,"line_start":221,"line_end":221,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126302,"byte_end":126305,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126310,"byte_end":126402,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126407,"byte_end":126410,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":126415,"byte_end":126518,"line_start":225,"line_end":225,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":127333,"byte_end":127338,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Pair<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":10,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8554,"byte_end":8564,"line_start":33,"line_end":33,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9051,"byte_end":9061,"line_start":53,"line_end":53,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":12525,"byte_end":12535,"line_start":142,"line_end":142,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30920,"byte_end":30938,"line_start":27,"line_end":27,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":31750,"byte_end":31768,"line_start":56,"line_end":56,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32351,"byte_end":32369,"line_start":80,"line_end":80,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35996,"byte_end":36014,"line_start":176,"line_end":176,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":54240,"byte_end":54250,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":55317,"byte_end":55327,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":55839,"byte_end":55849,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":57703,"byte_end":57713,"line_start":186,"line_end":186,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":58802,"byte_end":58813,"line_start":224,"line_end":224,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":59125,"byte_end":59136,"line_start":235,"line_end":235,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60204,"byte_end":60215,"line_start":269,"line_end":269,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":61198,"byte_end":61209,"line_start":301,"line_end":301,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62477,"byte_end":62481,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62675,"byte_end":62679,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":81353,"byte_end":81356,"line_start":121,"line_end":121,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":81500,"byte_end":81503,"line_start":130,"line_end":130,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82095,"byte_end":82101,"line_start":154,"line_end":154,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82320,"byte_end":82326,"line_start":164,"line_end":164,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83147,"byte_end":83153,"line_start":194,"line_end":194,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83334,"byte_end":83340,"line_start":203,"line_end":203,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83444,"byte_end":83450,"line_start":209,"line_end":209,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83661,"byte_end":83664,"line_start":219,"line_end":219,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87370,"byte_end":87373,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87601,"byte_end":87604,"line_start":31,"line_end":31,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":89367,"byte_end":89370,"line_start":84,"line_end":84,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":105912,"byte_end":105916,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106064,"byte_end":106068,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108660,"byte_end":108665,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109870,"byte_end":109876,"line_start":60,"line_end":60,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":110027,"byte_end":110033,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119945,"byte_end":119956,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":121099,"byte_end":121110,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":127032,"byte_end":127043,"line_start":246,"line_end":246,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1297,"byte_end":1302,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2854},"to":{"krate":0,"index":7}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/endian.rs","byte_start":1305,"byte_end":1309,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2859},"to":{"krate":0,"index":7}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":8554,"byte_end":8564,"line_start":33,"line_end":33,"column_start":19,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":9051,"byte_end":9061,"line_start":53,"line_end":53,"column_start":19,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_map.rs","byte_start":12525,"byte_end":12535,"line_start":142,"line_end":142,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":30920,"byte_end":30938,"line_start":27,"line_end":27,"column_start":19,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":31750,"byte_end":31768,"line_start":56,"line_end":56,"column_start":19,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":32351,"byte_end":32369,"line_start":80,"line_end":80,"column_start":19,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexed_snapshot.rs","byte_start":35996,"byte_end":36014,"line_start":176,"line_end":176,"column_start":19,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":54240,"byte_end":54250,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":55317,"byte_end":55327,"line_start":101,"line_end":101,"column_start":29,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":282},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":55839,"byte_end":55849,"line_start":118,"line_end":118,"column_start":16,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":57703,"byte_end":57713,"line_start":186,"line_end":186,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":58802,"byte_end":58813,"line_start":224,"line_end":224,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":59125,"byte_end":59136,"line_start":235,"line_end":235,"column_start":29,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":320},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":60204,"byte_end":60215,"line_start":269,"line_end":269,"column_start":16,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/indexes.rs","byte_start":61198,"byte_end":61209,"line_start":301,"line_end":301,"column_start":16,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62477,"byte_end":62481,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/item.rs","byte_start":62675,"byte_end":62679,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":78496,"byte_end":78501,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2470},"to":{"krate":0,"index":443}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":81353,"byte_end":81356,"line_start":121,"line_end":121,"column_start":29,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":6780},"to":{"krate":0,"index":443}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":81500,"byte_end":81503,"line_start":130,"line_end":130,"column_start":27,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":6780},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82095,"byte_end":82101,"line_start":154,"line_end":154,"column_start":48,"column_end":54},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1062},"to":{"krate":0,"index":443}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":82320,"byte_end":82326,"line_start":164,"line_end":164,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1062},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83147,"byte_end":83153,"line_start":194,"line_end":194,"column_start":17,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83334,"byte_end":83340,"line_start":203,"line_end":203,"column_start":29,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83444,"byte_end":83450,"line_start":209,"line_end":209,"column_start":35,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/keys.rs","byte_start":83661,"byte_end":83664,"line_start":219,"line_end":219,"column_start":37,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":6780},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87370,"byte_end":87373,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":87601,"byte_end":87604,"line_start":31,"line_end":31,"column_start":16,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/map.rs","byte_start":89367,"byte_end":89370,"line_start":84,"line_end":84,"column_start":16,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":105912,"byte_end":105916,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/path.rs","byte_start":106064,"byte_end":106068,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":108660,"byte_end":108665,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":109870,"byte_end":109876,"line_start":60,"line_end":60,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/prefix.rs","byte_start":110027,"byte_end":110033,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":119945,"byte_end":119956,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":121099,"byte_end":121110,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.6.0/src/snapshot.rs","byte_start":127032,"byte_end":127043,"line_start":246,"line_end":246,"column_start":16,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}}]}
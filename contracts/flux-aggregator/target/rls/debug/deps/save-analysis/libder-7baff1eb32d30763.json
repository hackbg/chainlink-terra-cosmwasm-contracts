{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","der","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"const-oid\"","--cfg","feature=\"oid\"","-C","metadata=7baff1eb32d30763","-C","extra-filename=-7baff1eb32d30763","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","const_oid=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libconst_oid-c0128fc729654b38.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libder-7baff1eb32d30763.rmeta"},"prelude":{"crate_id":{"name":"der","disambiguator":[6620283982502722200,2601874819529451539]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","num":4,"id":{"name":"const_oid","disambiguator":[16652256300093258142,3482606670295155140]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":0,"byte_end":14526,"line_start":1,"line_end":354,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13911,"byte_end":13914,"line_start":331,"line_end":331,"column_start":14,"column_end":17},"alias_span":null,"name":"Any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1027},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13936,"byte_end":13945,"line_start":332,"line_end":332,"column_start":21,"column_end":30},"alias_span":null,"name":"BitString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1049},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13964,"byte_end":13974,"line_start":333,"line_end":333,"column_start":18,"column_end":28},"alias_span":null,"name":"RawInteger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13990,"byte_end":13994,"line_start":334,"line_end":334,"column_start":15,"column_end":19},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1072},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13990,"byte_end":13994,"line_start":334,"line_end":334,"column_start":15,"column_end":19},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1084},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14018,"byte_end":14029,"line_start":335,"line_end":335,"column_start":23,"column_end":34},"alias_span":null,"name":"OctetString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14039,"byte_end":14047,"line_start":336,"line_end":336,"column_start":9,"column_end":17},"alias_span":null,"name":"sequence","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14056,"byte_end":14064,"line_start":336,"line_end":336,"column_start":26,"column_end":34},"alias_span":null,"name":"Sequence","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14087,"byte_end":14094,"line_start":338,"line_end":338,"column_start":14,"column_end":21},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1158},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14109,"byte_end":14116,"line_start":339,"line_end":339,"column_start":14,"column_end":21},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14130,"byte_end":14135,"line_start":340,"line_end":340,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14137,"byte_end":14146,"line_start":340,"line_end":340,"column_start":20,"column_end":29},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14148,"byte_end":14154,"line_start":340,"line_end":340,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1235},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14169,"byte_end":14175,"line_start":341,"line_end":341,"column_start":13,"column_end":19},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1256},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14186,"byte_end":14189,"line_start":342,"line_end":342,"column_start":10,"column_end":13},"alias_span":null,"name":"Tag","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":904},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14204,"byte_end":14213,"line_start":343,"line_end":343,"column_start":14,"column_end":23},"alias_span":null,"name":"Decodable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14215,"byte_end":14224,"line_start":343,"line_end":343,"column_start":25,"column_end":34},"alias_span":null,"name":"Encodable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14226,"byte_end":14233,"line_start":343,"line_end":343,"column_start":36,"column_end":43},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14235,"byte_end":14241,"line_start":343,"line_end":343,"column_start":45,"column_end":51},"alias_span":null,"name":"Tagged","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":207},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":14509,"byte_end":14525,"line_start":354,"line_end":354,"column_start":20,"column_end":36},"alias_span":null,"name":"ObjectIdentifier","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":0,"byte_end":14526,"line_start":1,"line_end":354,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":516},{"krate":0,"index":535},{"krate":0,"index":605},{"krate":0,"index":680},{"krate":0,"index":714},{"krate":0,"index":753},{"krate":0,"index":825},{"krate":0,"index":875},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001}],"decl_id":null,"docs":" Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER)\n for Abstract Syntax Notation One (ASN.1) as described in ITU [X.690].","sig":null,"attributes":[{"value":"/ Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":0,"byte_end":88,"line_start":1,"line_end":1,"column_start":1,"column_end":89}},{"value":"/ for Abstract Syntax Notation One (ASN.1) as described in ITU [X.690].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":89,"byte_end":162,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":163,"byte_end":166,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # About","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":167,"byte_end":178,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":179,"byte_end":182,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate provides a `no_std`-friendly implementation of a subset of ASN.1","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":183,"byte_end":262,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ DER necessary for decoding/encoding various cryptography-related formats","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":263,"byte_end":339,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ implemented as part of the [RustCrypto] project, e.g. the [`pkcs8`] crate.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":340,"byte_end":418,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":419,"byte_end":422,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The core implementation avoids any heap usage (with convenience methods","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":423,"byte_end":498,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ that allocate gated under the off-by-default `alloc` feature).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":499,"byte_end":565,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":566,"byte_end":569,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The implementation is presently specialized for documents which are smaller","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":570,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ than 64kB, as that provides a safe bound for the current use cases.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":650,"byte_end":721,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ However, that may be revisited in the future depending on interest in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":722,"byte_end":795,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ support for larger documents. Please open a [GitHub Issue] if you find","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":796,"byte_end":870,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ this limit constraining in practice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":871,"byte_end":911,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":912,"byte_end":915,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported Rust Version","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":916,"byte_end":952,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":953,"byte_end":956,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This crate requires **Rust 1.46** at a minimum.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":957,"byte_end":1008,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1009,"byte_end":1012,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1013,"byte_end":1024,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1025,"byte_end":1028,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## [`Decodable`] and [`Encodable`] traits","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1029,"byte_end":1074,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1075,"byte_end":1078,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The [`Decodable`] and [`Encodable`] traits (along with the [`Message`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1079,"byte_end":1153,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ supertrait which encompasses them both) are the core abstractions on","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1154,"byte_end":1226,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ which this crate is built and control what types can be (de)serialized","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1227,"byte_end":1301,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ as ASN.1 DER.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1302,"byte_end":1319,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The traits are impl'd for the following Rust core types:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1324,"byte_end":1384,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1385,"byte_end":1388,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - [`bool`] (ASN.1 `BOOLEAN`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1389,"byte_end":1421,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ - [`i8`]  (ASN.1 `INTEGER`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1422,"byte_end":1453,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ - [`Option`] (ASN.1 `OPTIONAL`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1454,"byte_end":1489,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1490,"byte_end":1493,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The following ASN.1 types provided by this crate also impl these traits:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1494,"byte_end":1570,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1571,"byte_end":1574,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - [`Any`] (ASN.1 `ANY`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1575,"byte_end":1602,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ - [`BitString`] (ASN.1 `BIT STRING`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1603,"byte_end":1643,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ - [`Null`] (ASN.1 `NULL`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1644,"byte_end":1673,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ - [`ObjectIdentifier`] (ASN.1 `OBJECT IDENTIFIER`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1674,"byte_end":1728,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ - [`OctetString`] (ASN.1 `OCTET STRING`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1729,"byte_end":1773,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ - [`RawInteger`] (ASN.1 `INTEGER` with raw access to encoded bytes)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1774,"byte_end":1845,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ - [`Sequence`] (ASN.1 `SEQUENCE`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1846,"byte_end":1883,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1884,"byte_end":1887,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1888,"byte_end":1902,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The following example implements X.509's `AlgorithmIdentifier` message type","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1907,"byte_end":1986,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ as defined in [RFC 5280 Section 4.1.1.2].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":1987,"byte_end":2032,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2033,"byte_end":2036,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The ASN.1 schema for this message type is as follows:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2037,"byte_end":2094,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2095,"byte_end":2098,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2099,"byte_end":2110,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/    AlgorithmIdentifier  ::=  SEQUENCE  {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2111,"byte_end":2155,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/         algorithm               OBJECT IDENTIFIER,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2156,"byte_end":2210,"line_start":57,"line_end":57,"column_start":1,"column_end":55}},{"value":"/         parameters              ANY DEFINED BY algorithm OPTIONAL  }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2211,"byte_end":2283,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2284,"byte_end":2291,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2292,"byte_end":2295,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Structured ASN.1 messages are typically encoded as a `SEQUENCE`, which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2296,"byte_end":2370,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ this crate maps to a Rust struct using the [`Message`] trait. This","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2371,"byte_end":2441,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ trait is bounded on the [`Decodable`] trait and provides a blanket impl","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2442,"byte_end":2517,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ of the [`Encodable`] trait, so any type which impls [`Message`] can be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2518,"byte_end":2592,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ used for both decoding and encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2593,"byte_end":2633,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2634,"byte_end":2637,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The [`Decoder`] and [`Encoder`] types provide the decoding/encoding API","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2638,"byte_end":2713,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ respectively, and are designed to work in conjunction with concrete ASN.1","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2714,"byte_end":2791,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ types which impl the [`Decodable`] and [`Encodable`] traits, including","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2792,"byte_end":2866,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ all types which impl the [`Message`] trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2867,"byte_end":2914,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2915,"byte_end":2918,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The following code example shows how to define a struct which maps to the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2919,"byte_end":2996,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ above schema, as well as impl the [`Message`] trait for that struct:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":2997,"byte_end":3069,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3074,"byte_end":3081,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"alloc\", feature = \"oid\"))]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3082,"byte_end":3135,"line_start":76,"line_end":76,"column_start":1,"column_end":54}},{"value":"/ # {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3136,"byte_end":3143,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ // Note: the following example does not require the `std` feature at all.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3144,"byte_end":3221,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ // It does leverage the `alloc` feature, but also provides instructions for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3222,"byte_end":3301,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/ // \"heapless\" usage when the `alloc` feature is disabled.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3302,"byte_end":3363,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/ use core::convert::{TryFrom, TryInto};","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3364,"byte_end":3406,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/ use der::{Any, Decodable, Encodable, Message, ObjectIdentifier};","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3407,"byte_end":3475,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3476,"byte_end":3479,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ /// X.509 `AlgorithmIdentifier`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3480,"byte_end":3516,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ #[derive(Copy, Clone, Debug, Eq, PartialEq)]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3517,"byte_end":3565,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/ pub struct AlgorithmIdentifier<'a> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3566,"byte_end":3606,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/     /// This field contains an ASN.1 `OBJECT IDENTIFIER`, a.k.a. OID.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3607,"byte_end":3680,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/     pub algorithm: ObjectIdentifier,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3681,"byte_end":3721,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3722,"byte_end":3725,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     /// This field is `OPTIONAL` and contains the ASN.1 `ANY` type, which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3726,"byte_end":3803,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/     /// in this example allows arbitrary algorithm-defined parameters.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3804,"byte_end":3878,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/     pub parameters: Option<Any<'a>>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3879,"byte_end":3918,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3919,"byte_end":3924,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3925,"byte_end":3928,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // Note: types which impl `TryFrom<Any<'a>, Error = der::Error>` receive a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":3929,"byte_end":4007,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ // blanket impl of the `Decodable` trait, therefore satisfying the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4008,"byte_end":4078,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"/ // `Decodable` trait bounds on `Message`, which is impl'd below.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4079,"byte_end":4147,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/ impl<'a> TryFrom<der::Any<'a>> for AlgorithmIdentifier<'a> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4148,"byte_end":4212,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/    type Error = der::Error;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4213,"byte_end":4244,"line_start":99,"line_end":99,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4245,"byte_end":4248,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     fn try_from(any: der::Any<'a>) -> der::Result<AlgorithmIdentifier> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4249,"byte_end":4325,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/         // The `der::Any::sequence` method asserts that a `der::Any` value","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4326,"byte_end":4404,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/         // contains an ASN.1 `SEQUENCE` then calls the provided `FnOnce`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4405,"byte_end":4481,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/         // with a `der::Decoder` which can be used to decode it.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4482,"byte_end":4550,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/         any.sequence(|decoder| {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4551,"byte_end":4587,"line_start":105,"line_end":105,"column_start":1,"column_end":37}},{"value":"/             // The `der::Decoder::Decode` method can be used to decode any","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4588,"byte_end":4666,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/             // type which impls the `Decodable` trait, which is impl'd for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4667,"byte_end":4745,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/             // all of the ASN.1 built-in types in the `der` crate.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4746,"byte_end":4816,"line_start":108,"line_end":108,"column_start":1,"column_end":71}},{"value":"/             //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4817,"byte_end":4835,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/             // Note that if your struct's fields don't contain an ASN.1","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4836,"byte_end":4911,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/             // built-in type specifically, there are also helper methods","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4912,"byte_end":4988,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/             // for all of the built-in types supported by this library","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":4989,"byte_end":5063,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/             // which can be used to select a specific type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5064,"byte_end":5127,"line_start":113,"line_end":113,"column_start":1,"column_end":64}},{"value":"/             //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5128,"byte_end":5146,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/             // For example, another way of decoding this particular field,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5147,"byte_end":5225,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/             // which contains an ASN.1 `OBJECT IDENTIFIER`, is by calling","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5226,"byte_end":5303,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/             // `decoder.oid()`. Similar methods are defined for other","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5304,"byte_end":5377,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/             // ASN.1 built-in types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5378,"byte_end":5418,"line_start":118,"line_end":118,"column_start":1,"column_end":41}},{"value":"/             let algorithm = decoder.decode()?;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5419,"byte_end":5469,"line_start":119,"line_end":119,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5470,"byte_end":5473,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/             // This field contains an ASN.1 `OPTIONAL` type. The `der` crate","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5474,"byte_end":5554,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/             // maps this directly to Rust's `Option` type and provides","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5555,"byte_end":5629,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/             // impls of the `Decodable` and `Encodable` traits for `Option`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5630,"byte_end":5710,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/             // To explicitly request an `OPTIONAL` type be decoded, use the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5711,"byte_end":5790,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/             // `decoder.optional()` method.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5791,"byte_end":5838,"line_start":125,"line_end":125,"column_start":1,"column_end":48}},{"value":"/             let parameters = decoder.decode()?;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5839,"byte_end":5890,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5891,"byte_end":5894,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/             // The value returned from the provided `FnOnce` will be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5895,"byte_end":5967,"line_start":128,"line_end":128,"column_start":1,"column_end":73}},{"value":"/             // returned from the `any.sequence(...)` call above.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":5968,"byte_end":6036,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/             // Note that the entire sequence body *MUST* be consumed","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6037,"byte_end":6109,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/             // or an error will be returned.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6110,"byte_end":6158,"line_start":131,"line_end":131,"column_start":1,"column_end":49}},{"value":"/             Ok(Self { algorithm, parameters })","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6159,"byte_end":6209,"line_start":132,"line_end":132,"column_start":1,"column_end":51}},{"value":"/         })","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6210,"byte_end":6224,"line_start":133,"line_end":133,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6225,"byte_end":6234,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6235,"byte_end":6240,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6241,"byte_end":6244,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Message<'a> for AlgorithmIdentifier<'a> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6245,"byte_end":6299,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/     // The `Message::fields` method is used for encoding and functions as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6300,"byte_end":6377,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/     // a visitor for all of the fields in a message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6378,"byte_end":6434,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"/     //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6435,"byte_end":6445,"line_start":140,"line_end":140,"column_start":1,"column_end":11}},{"value":"/     // To implement it, you must define a slice containing `Encodable`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6446,"byte_end":6520,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/     // trait objects, then pass it to the provided `field_encoder`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6521,"byte_end":6591,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/     // function, which is implemented by the `der` crate and handles","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6592,"byte_end":6664,"line_start":143,"line_end":143,"column_start":1,"column_end":73}},{"value":"/     // message serialization.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6665,"byte_end":6698,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/     //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6699,"byte_end":6709,"line_start":145,"line_end":145,"column_start":1,"column_end":11}},{"value":"/     // Trait objects are used because they allow for slices containing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6710,"byte_end":6784,"line_start":146,"line_end":146,"column_start":1,"column_end":75}},{"value":"/     // heterogenous field types, and a callback is used to allow for the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6785,"byte_end":6861,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/     // construction of temporary field encoder types. The latter means","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6862,"byte_end":6936,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/     // that the fields of your Rust struct don't necessarily need to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":6937,"byte_end":7009,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/     // impl the `Encodable` trait, but if they don't you must construct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7010,"byte_end":7085,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/     // a temporary wrapper value which does.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7086,"byte_end":7134,"line_start":151,"line_end":151,"column_start":1,"column_end":49}},{"value":"/     //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7135,"byte_end":7145,"line_start":152,"line_end":152,"column_start":1,"column_end":11}},{"value":"/     // Types which impl the `Message` trait receive blanket impls of both","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7146,"byte_end":7223,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/     // the `Encodable` and `Tagged` traits (where the latter is impl'd as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7224,"byte_end":7301,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"/     // `Tagged::TAG = der::Tag::Sequence`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7302,"byte_end":7348,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/     fn fields<F, T>(&self, field_encoder: F) -> der::Result<T>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7349,"byte_end":7415,"line_start":156,"line_end":156,"column_start":1,"column_end":67}},{"value":"/     where","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7416,"byte_end":7429,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/         F: FnOnce(&[&dyn Encodable]) -> der::Result<T>,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7430,"byte_end":7489,"line_start":158,"line_end":158,"column_start":1,"column_end":60}},{"value":"/     {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7490,"byte_end":7499,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/         field_encoder(&[&self.algorithm, &self.parameters])","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7500,"byte_end":7563,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7564,"byte_end":7573,"line_start":161,"line_end":161,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7574,"byte_end":7579,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7580,"byte_end":7583,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ // Example parameters value: OID for the NIST P-256 elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7584,"byte_end":7655,"line_start":164,"line_end":164,"column_start":1,"column_end":72}},{"value":"/ let parameters = \"1.2.840.10045.3.1.7\".parse::<ObjectIdentifier>().unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7656,"byte_end":7736,"line_start":165,"line_end":165,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7737,"byte_end":7740,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // We need to convert `parameters` into a `der::Any<'a>` type, which wraps","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7741,"byte_end":7819,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/ // a `&'a [u8]` byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7820,"byte_end":7851,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/ //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7852,"byte_end":7858,"line_start":169,"line_end":169,"column_start":1,"column_end":7}},{"value":"/ // To do that, we need owned DER-encoded data so that we can have","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7859,"byte_end":7928,"line_start":170,"line_end":170,"column_start":1,"column_end":70}},{"value":"/ // `Any` borrow a reference to it, so we have to serialize the OID.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":7929,"byte_end":8000,"line_start":171,"line_end":171,"column_start":1,"column_end":72}},{"value":"/ //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8001,"byte_end":8007,"line_start":172,"line_end":172,"column_start":1,"column_end":7}},{"value":"/ // When the `alloc` feature of this crate is enabled, any type that impls","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8008,"byte_end":8085,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ // the `Encodable` trait including all ASN.1 built-in types and any type","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8086,"byte_end":8162,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ // which impls `Message` can be serialized by calling `Encodable::to_vec()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8163,"byte_end":8243,"line_start":175,"line_end":175,"column_start":1,"column_end":81}},{"value":"/ //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8244,"byte_end":8250,"line_start":176,"line_end":176,"column_start":1,"column_end":7}},{"value":"/ // If you would prefer to avoid allocations, you can create a byte array","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8251,"byte_end":8327,"line_start":177,"line_end":177,"column_start":1,"column_end":77}},{"value":"/ // as backing storage instead, pass that to `der::Encoder::new`, and then","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8328,"byte_end":8405,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/ // encode the `parameters` value using `encoder.encode(parameters)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8406,"byte_end":8478,"line_start":179,"line_end":179,"column_start":1,"column_end":73}},{"value":"/ let der_encoded_parameters = parameters.to_vec().unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8479,"byte_end":8541,"line_start":180,"line_end":180,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8542,"byte_end":8545,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ let algorithm_identifier = AlgorithmIdentifier {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8546,"byte_end":8598,"line_start":182,"line_end":182,"column_start":1,"column_end":53}},{"value":"/     // OID for `id-ecPublicKey`, if you're curious","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8599,"byte_end":8653,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     algorithm: \"1.2.840.10045.2.1\".parse().unwrap(),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8654,"byte_end":8710,"line_start":184,"line_end":184,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8711,"byte_end":8714,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     // `der::Any<'a>` impls `TryFrom<&'a [u8]>`, which parses the provided","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8715,"byte_end":8793,"line_start":186,"line_end":186,"column_start":1,"column_end":79}},{"value":"/     // slice as an ASN.1 DER-encoded message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8794,"byte_end":8843,"line_start":187,"line_end":187,"column_start":1,"column_end":50}},{"value":"/     parameters: Some(der_encoded_parameters.as_slice().try_into().unwrap())","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8844,"byte_end":8923,"line_start":188,"line_end":188,"column_start":1,"column_end":80}},{"value":"/ };","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8924,"byte_end":8930,"line_start":189,"line_end":189,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8931,"byte_end":8934,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ // Serialize the `AlgorithmIdentifier` created above as ASN.1 DER,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":8935,"byte_end":9005,"line_start":191,"line_end":191,"column_start":1,"column_end":71}},{"value":"/ // allocating a `Vec<u8>` for storage.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9006,"byte_end":9048,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/ //","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9049,"byte_end":9055,"line_start":193,"line_end":193,"column_start":1,"column_end":7}},{"value":"/ // As mentioned earlier, if you don't have the `alloc` feature enabled you","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9056,"byte_end":9134,"line_start":194,"line_end":194,"column_start":1,"column_end":79}},{"value":"/ // can create a fix-sized array instead, then call `Encoder::new` with a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9135,"byte_end":9211,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ // refernce to it, then encode the message using","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9212,"byte_end":9264,"line_start":196,"line_end":196,"column_start":1,"column_end":53}},{"value":"/ // `encoder.encode(algorithm_identifier)`, then finally `encoder.finish()`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9265,"byte_end":9343,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/ // to obtain a byte slice containing the encoded message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9344,"byte_end":9405,"line_start":198,"line_end":198,"column_start":1,"column_end":62}},{"value":"/ let der_encoded_algorithm_identifier = algorithm_identifier.to_vec().unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9406,"byte_end":9488,"line_start":199,"line_end":199,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9489,"byte_end":9492,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ // Deserialize the `AlgorithmIdentifier` we just serialized from ASN.1 DER","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9493,"byte_end":9571,"line_start":201,"line_end":201,"column_start":1,"column_end":79}},{"value":"/ // using `der::Decodable::from_bytes`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9572,"byte_end":9614,"line_start":202,"line_end":202,"column_start":1,"column_end":43}},{"value":"/ let decoded_algorithm_identifier = AlgorithmIdentifier::from_bytes(","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9615,"byte_end":9686,"line_start":203,"line_end":203,"column_start":1,"column_end":72}},{"value":"/     &der_encoded_algorithm_identifier","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9687,"byte_end":9728,"line_start":204,"line_end":204,"column_start":1,"column_end":42}},{"value":"/ ).unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9729,"byte_end":9744,"line_start":205,"line_end":205,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9745,"byte_end":9748,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ // Ensure the original `AlgorithmIdentifier` is the same as the one we just","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9749,"byte_end":9828,"line_start":207,"line_end":207,"column_start":1,"column_end":80}},{"value":"/ // decoded from ASN.1 DER.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9829,"byte_end":9859,"line_start":208,"line_end":208,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(algorithm_identifier, decoded_algorithm_identifier);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9860,"byte_end":9927,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9928,"byte_end":9935,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9936,"byte_end":9943,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9944,"byte_end":9947,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ## Custom derive support","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9948,"byte_end":9976,"line_start":213,"line_end":213,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9977,"byte_end":9980,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ When the `derive` feature of this crate is enabled, a custom derive macro","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":9981,"byte_end":10058,"line_start":215,"line_end":215,"column_start":1,"column_end":78}},{"value":"/ is available for the [`Message`] trait. See [`der_derive::Message`] for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10059,"byte_end":10134,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ more information.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10135,"byte_end":10156,"line_start":217,"line_end":217,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10157,"byte_end":10160,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ It can be used to automatically derive the code given in the above example:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10161,"byte_end":10240,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10241,"byte_end":10244,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10245,"byte_end":10252,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"alloc\", feature = \"derive\", feature = \"oid\"))]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10253,"byte_end":10326,"line_start":222,"line_end":222,"column_start":1,"column_end":74}},{"value":"/ # {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10327,"byte_end":10334,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ use der::{Any, Encodable, Decodable, Message, ObjectIdentifier};","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10335,"byte_end":10403,"line_start":224,"line_end":224,"column_start":1,"column_end":69}},{"value":"/ use core::convert::TryInto;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10404,"byte_end":10435,"line_start":225,"line_end":225,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10436,"byte_end":10439,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ /// X.509 `AlgorithmIdentifier` (same as above)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10440,"byte_end":10491,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"/ #[derive(Copy, Clone, Debug, Eq, PartialEq, Message)] // NOTE: added `Message`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10492,"byte_end":10574,"line_start":228,"line_end":228,"column_start":1,"column_end":83}},{"value":"/ pub struct AlgorithmIdentifier<'a> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10575,"byte_end":10615,"line_start":229,"line_end":229,"column_start":1,"column_end":41}},{"value":"/     /// This field contains an ASN.1 `OBJECT IDENTIFIER`, a.k.a. OID.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10616,"byte_end":10689,"line_start":230,"line_end":230,"column_start":1,"column_end":74}},{"value":"/     pub algorithm: ObjectIdentifier,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10690,"byte_end":10730,"line_start":231,"line_end":231,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10731,"byte_end":10734,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     /// This field is `OPTIONAL` and contains the ASN.1 `ANY` type, which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10735,"byte_end":10812,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/     /// in this example allows arbitrary algorithm-defined parameters.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10813,"byte_end":10887,"line_start":234,"line_end":234,"column_start":1,"column_end":75}},{"value":"/     pub parameters: Option<Any<'a>>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10888,"byte_end":10927,"line_start":235,"line_end":235,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10928,"byte_end":10933,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10934,"byte_end":10937,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ // Example parameters value: OID for the NIST P-256 elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":10938,"byte_end":11009,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/ let parameters = \"1.2.840.10045.3.1.7\".parse::<ObjectIdentifier>().unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11010,"byte_end":11090,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ let der_encoded_parameters = parameters.to_vec().unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11091,"byte_end":11153,"line_start":240,"line_end":240,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11154,"byte_end":11157,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ let algorithm_identifier = AlgorithmIdentifier {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11158,"byte_end":11210,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/     // OID for `id-ecPublicKey`, if you're curious","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11211,"byte_end":11265,"line_start":243,"line_end":243,"column_start":1,"column_end":55}},{"value":"/     algorithm: \"1.2.840.10045.2.1\".parse().unwrap(),","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11266,"byte_end":11322,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11323,"byte_end":11326,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/     // `der::Any<'a>` impls `TryFrom<&'a [u8]>`, which parses the provided","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11327,"byte_end":11405,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/     // slice as an ASN.1 DER-encoded message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11406,"byte_end":11455,"line_start":247,"line_end":247,"column_start":1,"column_end":50}},{"value":"/     parameters: Some(der_encoded_parameters.as_slice().try_into().unwrap())","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11456,"byte_end":11535,"line_start":248,"line_end":248,"column_start":1,"column_end":80}},{"value":"/ };","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11536,"byte_end":11542,"line_start":249,"line_end":249,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11543,"byte_end":11546,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ // Encode","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11547,"byte_end":11560,"line_start":251,"line_end":251,"column_start":1,"column_end":14}},{"value":"/ let der_encoded_algorithm_identifier = algorithm_identifier.to_vec().unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11561,"byte_end":11643,"line_start":252,"line_end":252,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11644,"byte_end":11647,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ // Decode","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11648,"byte_end":11661,"line_start":254,"line_end":254,"column_start":1,"column_end":14}},{"value":"/ let decoded_algorithm_identifier = AlgorithmIdentifier::from_bytes(","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11662,"byte_end":11733,"line_start":255,"line_end":255,"column_start":1,"column_end":72}},{"value":"/     &der_encoded_algorithm_identifier","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11734,"byte_end":11775,"line_start":256,"line_end":256,"column_start":1,"column_end":42}},{"value":"/ ).unwrap();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11776,"byte_end":11791,"line_start":257,"line_end":257,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11792,"byte_end":11795,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(algorithm_identifier, decoded_algorithm_identifier);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11796,"byte_end":11863,"line_start":259,"line_end":259,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11864,"byte_end":11871,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11872,"byte_end":11879,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11880,"byte_end":11883,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ For fields which don't directly impl [`Decodable`] and [`Encodable`],","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11884,"byte_end":11957,"line_start":263,"line_end":263,"column_start":1,"column_end":74}},{"value":"/ you can add annotations to convert to an intermediate ASN.1 type","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":11958,"byte_end":12026,"line_start":264,"line_end":264,"column_start":1,"column_end":69}},{"value":"/ first, so long as that type impls `TryFrom` and `Into` for the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12027,"byte_end":12093,"line_start":265,"line_end":265,"column_start":1,"column_end":67}},{"value":"/ ASN.1 type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12094,"byte_end":12109,"line_start":266,"line_end":266,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12110,"byte_end":12113,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ For example, structs containing `&'a [u8]` fields may want them encoded","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12114,"byte_end":12189,"line_start":268,"line_end":268,"column_start":1,"column_end":76}},{"value":"/ as either a `BIT STRING` or `OCTET STRING`. By using the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12190,"byte_end":12250,"line_start":269,"line_end":269,"column_start":1,"column_end":61}},{"value":"/ `#[asn1(type = \"bit-string\")]` annotation it's possible to select which","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12251,"byte_end":12326,"line_start":270,"line_end":270,"column_start":1,"column_end":76}},{"value":"/ ASN.1 type should be used.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12327,"byte_end":12357,"line_start":271,"line_end":271,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12358,"byte_end":12361,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Building off the above example:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12362,"byte_end":12397,"line_start":273,"line_end":273,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12398,"byte_end":12401,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12402,"byte_end":12413,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"alloc\", feature = \"derive\", feature = \"oid\"))]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12414,"byte_end":12487,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/ # {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12488,"byte_end":12495,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"/ # use der::{Any, Message, ObjectIdentifier};","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12496,"byte_end":12544,"line_start":278,"line_end":278,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12545,"byte_end":12550,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Copy, Clone, Debug, Eq, PartialEq, Message)]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12551,"byte_end":12610,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/ # pub struct AlgorithmIdentifier<'a> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12611,"byte_end":12653,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/ #     pub algorithm: ObjectIdentifier,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12654,"byte_end":12696,"line_start":282,"line_end":282,"column_start":1,"column_end":43}},{"value":"/ #     pub parameters: Option<Any<'a>>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12697,"byte_end":12738,"line_start":283,"line_end":283,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12739,"byte_end":12746,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ /// X.509 `SubjectPublicKeyInfo` (SPKI)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12747,"byte_end":12790,"line_start":285,"line_end":285,"column_start":1,"column_end":44}},{"value":"/ #[derive(Copy, Clone, Debug, Eq, PartialEq, Message)]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12791,"byte_end":12848,"line_start":286,"line_end":286,"column_start":1,"column_end":58}},{"value":"/ pub struct SubjectPublicKeyInfo<'a> {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12849,"byte_end":12890,"line_start":287,"line_end":287,"column_start":1,"column_end":42}},{"value":"/     /// X.509 `AlgorithmIdentifier`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12891,"byte_end":12930,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/     pub algorithm: AlgorithmIdentifier<'a>,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12931,"byte_end":12978,"line_start":289,"line_end":289,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12979,"byte_end":12982,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/     /// Public key data","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":12983,"byte_end":13010,"line_start":291,"line_end":291,"column_start":1,"column_end":28}},{"value":"/     #[asn1(type = \"bit-string\")]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13011,"byte_end":13047,"line_start":292,"line_end":292,"column_start":1,"column_end":37}},{"value":"/     pub subject_public_key: &'a [u8],","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13048,"byte_end":13089,"line_start":293,"line_end":293,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13090,"byte_end":13095,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13096,"byte_end":13103,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13104,"byte_end":13111,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13112,"byte_end":13115,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ [X.690]: https://www.itu.int/rec/T-REC-X.690/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13116,"byte_end":13165,"line_start":298,"line_end":298,"column_start":1,"column_end":50}},{"value":"/ [RustCrypto]: https://github.com/rustcrypto","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13166,"byte_end":13213,"line_start":299,"line_end":299,"column_start":1,"column_end":48}},{"value":"/ [`pkcs8`]: https://docs.rs/pkcs8/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13214,"byte_end":13251,"line_start":300,"line_end":300,"column_start":1,"column_end":38}},{"value":"/ [GitHub Issue]: https://github.com/RustCrypto/utils/issues","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13252,"byte_end":13314,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"/ [RFC 5280 Section 4.1.1.2]: https://tools.ietf.org/html/rfc5280#section-4.1.1.2","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13315,"byte_end":13398,"line_start":302,"line_end":302,"column_start":1,"column_end":84}},{"value":"no_std","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13400,"byte_end":13410,"line_start":304,"line_end":304,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13604,"byte_end":13627,"line_start":310,"line_end":310,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/lib.rs","byte_start":13628,"byte_end":13668,"line_start":311,"line_end":311,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15266,"byte_end":15269,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Any","qualname":"::asn1::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"decl_id":null,"docs":" ASN.1 `ANY` type: represents any explicitly tagged ASN.1 value.\n","sig":null,"attributes":[{"value":"/ ASN.1 `ANY` type: represents any explicitly tagged ASN.1 value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15142,"byte_end":15209,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15530,"byte_end":15533,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Any>::new","value":"pub fn new(Tag, &'a [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Any`] from the provided [`Tag`] and slice.\n","sig":null,"attributes":[{"value":"/ Create a new [`Any`] from the provided [`Tag`] and slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15457,"byte_end":15518,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15768,"byte_end":15771,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"tag","qualname":"<Any>::tag","value":"pub fn tag(Self) -> Tag","parent":null,"children":[],"decl_id":null,"docs":" Get the tag for this [`Any`] type.\n","sig":null,"attributes":[{"value":"/ Get the tag for this [`Any`] type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15718,"byte_end":15756,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15879,"byte_end":15882,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"len","qualname":"<Any>::len","value":"pub fn len(Self) -> Length","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Length`] of this [`Any`] type's value.\n","sig":null,"attributes":[{"value":"/ Get the [`Length`] of this [`Any`] type's value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15815,"byte_end":15867,"line_start":36,"line_end":36,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15993,"byte_end":16001,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Any>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the value of this [`Any`] type empty?\n","sig":null,"attributes":[{"value":"/ Is the value of this [`Any`] type empty?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15937,"byte_end":15981,"line_start":41,"line_end":41,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16130,"byte_end":16138,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Any>::as_bytes","value":"pub fn as_bytes(Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the raw value for this [`Any`] type as a byte slice\n","sig":null,"attributes":[{"value":"/ Get the raw value for this [`Any`] type as a byte slice","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16059,"byte_end":16118,"line_start":46,"line_end":46,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16255,"byte_end":16265,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"bit_string","qualname":"<Any>::bit_string","value":"pub fn bit_string(Self) -> Result<BitString>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `BIT STRING`\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `BIT STRING`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16200,"byte_end":16243,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16389,"byte_end":16393,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"null","qualname":"<Any>::null","value":"pub fn null(Self) -> Result<Null>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `NULL` value\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `NULL` value","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16334,"byte_end":16377,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16510,"byte_end":16522,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"octet_string","qualname":"<Any>::octet_string","value":"pub fn octet_string(Self) -> Result<OctetString>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `OCTET STRING`\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `OCTET STRING`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16453,"byte_end":16498,"line_start":61,"line_end":61,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16734,"byte_end":16737,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"oid","qualname":"<Any>::oid","value":"pub fn oid(Self) -> Result<ObjectIdentifier>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `OBJECT IDENTIFIER`\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `OBJECT IDENTIFIER`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16593,"byte_end":16643,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"oid\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16648,"byte_end":16671,"line_start":67,"line_end":67,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16959,"byte_end":16967,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"sequence","qualname":"<Any>::sequence","value":"pub fn sequence<F, T>(Self, F) -> Result<T> where F: FnOnce(&mut Decoder) ->\nResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode this value an ASN.1 `SEQUENCE`, creating a new\n nested [`Decoder`] and calling the provided argument with it.\n","sig":null,"attributes":[{"value":"/ Attempt to decode this value an ASN.1 `SEQUENCE`, creating a new","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16809,"byte_end":16877,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ nested [`Decoder`] and calling the provided argument with it.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":16882,"byte_end":16947,"line_start":74,"line_end":74,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1027},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18351,"byte_end":18360,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"BitString","qualname":"::asn1::bit_string::BitString","value":"BitString {  }","parent":null,"children":[{"krate":0,"index":1029}],"decl_id":null,"docs":" ASN.1 `BIT STRING` type.\n","sig":null,"attributes":[{"value":"/ ASN.1 `BIT STRING` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18266,"byte_end":18294,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18506,"byte_end":18509,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<BitString>::new","value":"pub fn new(&'a [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`BitString`] from a byte slice.\n","sig":null,"attributes":[{"value":"/ Create a new [`BitString`] from a byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18445,"byte_end":18494,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18741,"byte_end":18749,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<BitString>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18697,"byte_end":18729,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1049},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23896,"byte_end":23906,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"RawInteger","qualname":"::asn1::integer::RawInteger","value":"RawInteger {  }","parent":null,"children":[{"krate":0,"index":1051}],"decl_id":null,"docs":" Raw ASN.1 `INTEGER` type.","sig":null,"attributes":[{"value":"/ Raw ASN.1 `INTEGER` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":22910,"byte_end":22939,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":22940,"byte_end":22943,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Provides direct access to the underlying DER-encoded bytes which comprise","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":22944,"byte_end":23021,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ an integer value, intended for use cases like very large integers that are","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23022,"byte_end":23100,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ used for cryptographic keys. It can be used in order to convert them to the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23101,"byte_end":23180,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ big integer representation of your choice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23181,"byte_end":23227,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23228,"byte_end":23231,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Note that the [`Decodable`][`crate::Decodable`] and [`Encodable`] traits are","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23232,"byte_end":23312,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ impl'd for Rust's integer primitive types ([`i8`] only for now) if you'd like","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23313,"byte_end":23394,"line_start":53,"line_end":53,"column_start":1,"column_end":82}},{"value":"/ to work directly with an integer value rather than decoding it yourself.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23395,"byte_end":23471,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23472,"byte_end":23475,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Important Usage Notes ⚠️","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23476,"byte_end":23517,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23518,"byte_end":23521,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This type does *NOT* ensure the value is canonically encoded according to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23522,"byte_end":23599,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ DER's rules. If it's important for your use case that the message is valid","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23600,"byte_end":23678,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ ASN.1 DER, you *MUST* validate the value is canonically encoded yourself.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23679,"byte_end":23756,"line_start":60,"line_end":60,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24049,"byte_end":24052,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<RawInteger>::new","value":"pub fn new(&'a [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`RawInteger`] from a slice.\n","sig":null,"attributes":[{"value":"/ Create a new [`RawInteger`] from a slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23992,"byte_end":24037,"line_start":69,"line_end":69,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24284,"byte_end":24292,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<RawInteger>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24240,"byte_end":24272,"line_start":76,"line_end":76,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":26742,"byte_end":26746,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Null","qualname":"::asn1::null::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" ASN.1 `NULL` type.\n","sig":null,"attributes":[{"value":"/ ASN.1 `NULL` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":26663,"byte_end":26685,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28150,"byte_end":28161,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"OctetString","qualname":"::asn1::octet_string::OctetString","value":"OctetString {  }","parent":null,"children":[{"krate":0,"index":1086}],"decl_id":null,"docs":" ASN.1 `OCTET STRING` type.\n","sig":null,"attributes":[{"value":"/ ASN.1 `OCTET STRING` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28063,"byte_end":28093,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28311,"byte_end":28314,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<OctetString>::new","value":"pub fn new(&'a [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`OctetString`] from a byte slice.\n","sig":null,"attributes":[{"value":"/ Create a new [`OctetString`] from a byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28248,"byte_end":28299,"line_start":14,"line_end":14,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28546,"byte_end":28554,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<OctetString>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28502,"byte_end":28534,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":447},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::asn1::sequence","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":491},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":513}],"decl_id":null,"docs":" ASN.1 `SEQUENCE` support.\n","sig":null,"attributes":[{"value":"/ ASN.1 `SEQUENCE` support.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":32047,"byte_end":32076,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":32389,"byte_end":32400,"line_start":11,"line_end":11,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::asn1::sequence::encoded_len","value":"pub fn encoded_len(&[&dyn Encodable]) -> Result<Length>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the length of an ASN.1 `SEQUENCE` of [`Encodable`] values when\n serialized as ASN.1 DER, including the `SEQUENCE` tag and length prefix.\n","sig":null,"attributes":[{"value":"/ Obtain the length of an ASN.1 `SEQUENCE` of [`Encodable`] values when","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":32231,"byte_end":32304,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ serialized as ASN.1 DER, including the `SEQUENCE` tag and length prefix.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":32305,"byte_end":32381,"line_start":10,"line_end":10,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":32992,"byte_end":33000,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Sequence","qualname":"::asn1::sequence::Sequence","value":"Sequence {  }","parent":null,"children":[{"krate":0,"index":1108}],"decl_id":null,"docs":" ASN.1 `SEQUENCE` type.\n","sig":null,"attributes":[{"value":"/ ASN.1 `SEQUENCE` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":32909,"byte_end":32935,"line_start":26,"line_end":26,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33138,"byte_end":33141,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Sequence>::new","value":"pub fn new(&'a [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Sequence`] from a slice\n","sig":null,"attributes":[{"value":"/ Create a new [`Sequence`] from a slice","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33084,"byte_end":33126,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33375,"byte_end":33383,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Sequence>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner byte sequence\n","sig":null,"attributes":[{"value":"/ Borrow the inner byte sequence","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33329,"byte_end":33363,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33633,"byte_end":33646,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"decode_nested","qualname":"<Sequence>::decode_nested","value":"pub fn decode_nested<F, T>(&Self, F) -> Result<T> where\nF: FnOnce(&mut Decoder) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Decode values nested within a sequence, creating a new [`Decoder`] for\n the data contained in the sequence's body and passing it to the provided\n [`FnOnce`].\n","sig":null,"attributes":[{"value":"/ Decode values nested within a sequence, creating a new [`Decoder`] for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33446,"byte_end":33520,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ the data contained in the sequence's body and passing it to the provided","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33525,"byte_end":33601,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ [`FnOnce`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33606,"byte_end":33621,"line_start":48,"line_end":48,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36204,"byte_end":36211,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154}],"decl_id":null,"docs":" DER decoder.\n","sig":null,"attributes":[{"value":"/ DER decoder.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36159,"byte_end":36175,"line_start":9,"line_end":9,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36589,"byte_end":36592,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder for the given byte slice.\n","sig":null,"attributes":[{"value":"/ Create a new decoder for the given byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36527,"byte_end":36577,"line_start":23,"line_end":23,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36793,"byte_end":36799,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode<T: Decodable>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Decode a value which impls the [`Decodable`] trait.\n","sig":null,"attributes":[{"value":"/ Decode a value which impls the [`Decodable`] trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36726,"byte_end":36781,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37184,"byte_end":37189,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"error","qualname":"<Decoder>::error","value":"pub fn error<T>(&mut Self, ErrorKind) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an error with the given [`ErrorKind`], annotating it with\n context about where the error occurred.\n","sig":null,"attributes":[{"value":"/ Return an error with the given [`ErrorKind`], annotating it with","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37056,"byte_end":37124,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ context about where the error occurred.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37129,"byte_end":37172,"line_start":44,"line_end":44,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37374,"byte_end":37383,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"is_failed","qualname":"<Decoder>::is_failed","value":"pub fn is_failed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did the decoding operation fail due to an error?\n","sig":null,"attributes":[{"value":"/ Did the decoding operation fail due to an error?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37310,"byte_end":37362,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37560,"byte_end":37566,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"finish","qualname":"<Decoder>::finish","value":"pub fn finish<T>(Self, T) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Finish decoding, returning the given value if there is no\n remaining data, or an error otherwise\n","sig":null,"attributes":[{"value":"/ Finish decoding, returning the given value if there is no","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37441,"byte_end":37502,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/ remaining data, or an error otherwise","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37507,"byte_end":37548,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38136,"byte_end":38147,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"is_finished","qualname":"<Decoder>::is_finished","value":"pub fn is_finished(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we decoded all of the bytes in this [`Decoder`]?","sig":null,"attributes":[{"value":"/ Have we decoded all of the bytes in this [`Decoder`]?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":37962,"byte_end":38019,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38024,"byte_end":38027,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if we're not finished decoding or if a fatal error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38032,"byte_end":38102,"line_start":73,"line_end":73,"column_start":5,"column_end":75}},{"value":"/ has occurred.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38107,"byte_end":38124,"line_start":74,"line_end":74,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38299,"byte_end":38302,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"any","qualname":"<Decoder>::any","value":"pub fn any(&mut Self) -> Result<Any>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `ANY` value.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `ANY` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38244,"byte_end":38287,"line_start":79,"line_end":79,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38424,"byte_end":38434,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"bit_string","qualname":"<Decoder>::bit_string","value":"pub fn bit_string(&mut Self) -> Result<BitString>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `BIT STRING`.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `BIT STRING`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38368,"byte_end":38412,"line_start":84,"line_end":84,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38562,"byte_end":38566,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"null","qualname":"<Decoder>::null","value":"pub fn null(&mut Self) -> Result<Null>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `NULL` value.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `NULL` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38506,"byte_end":38550,"line_start":89,"line_end":89,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38687,"byte_end":38699,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"octet_string","qualname":"<Decoder>::octet_string","value":"pub fn octet_string(&mut Self) -> Result<OctetString>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `OCTET STRING`.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `OCTET STRING`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38629,"byte_end":38675,"line_start":94,"line_end":94,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38915,"byte_end":38918,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"oid","qualname":"<Decoder>::oid","value":"pub fn oid(&mut Self) -> Result<ObjectIdentifier>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `OBJECT IDENTIFIER`.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `OBJECT IDENTIFIER`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38773,"byte_end":38824,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"cfg(feature = \"oid\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38829,"byte_end":38852,"line_start":100,"line_end":100,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":39053,"byte_end":39061,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"optional","qualname":"<Decoder>::optional","value":"pub fn optional<T: Decodable>(&mut Self) -> Result<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `OPTIONAL` value.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `OPTIONAL` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":38993,"byte_end":39041,"line_start":106,"line_end":106,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":39286,"byte_end":39294,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"sequence","qualname":"<Decoder>::sequence","value":"pub fn sequence<F, T>(&mut Self, F) -> Result<T> where F: FnOnce(&mut Decoder)\n-> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode an ASN.1 `SEQUENCE`, creating a new nested\n [`Decoder`] and calling the provided argument with it.\n","sig":null,"attributes":[{"value":"/ Attempt to decode an ASN.1 `SEQUENCE`, creating a new nested","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":39147,"byte_end":39211,"line_start":111,"line_end":111,"column_start":5,"column_end":69}},{"value":"/ [`Decoder`] and calling the provided argument with it.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":39216,"byte_end":39274,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42400,"byte_end":42407,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161}],"decl_id":null,"docs":" DER encoder.\n","sig":null,"attributes":[{"value":"/ DER encoder.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42355,"byte_end":42371,"line_start":11,"line_end":11,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42695,"byte_end":42698,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(&'a mut [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder with the given byte slice as a backing buffer.\n","sig":null,"attributes":[{"value":"/ Create a new encoder with the given byte slice as a backing buffer.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42612,"byte_end":42683,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42903,"byte_end":42909,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder>::encode","value":"pub fn encode<T: Encodable>(&mut Self, &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a value which impls the [`Encodable`] trait.\n","sig":null,"attributes":[{"value":"/ Encode a value which impls the [`Encodable`] trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42836,"byte_end":42891,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43313,"byte_end":43318,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"error","qualname":"<Encoder>::error","value":"pub fn error<T>(&mut Self, ErrorKind) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an error with the given [`ErrorKind`], annotating it with\n context about where the error occurred.\n","sig":null,"attributes":[{"value":"/ Return an error with the given [`ErrorKind`], annotating it with","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43185,"byte_end":43253,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ context about where the error occurred.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43258,"byte_end":43301,"line_start":43,"line_end":43,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43503,"byte_end":43512,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"is_failed","qualname":"<Encoder>::is_failed","value":"pub fn is_failed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did the decoding operation fail due to an error?\n","sig":null,"attributes":[{"value":"/ Did the decoding operation fail due to an error?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43439,"byte_end":43491,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43685,"byte_end":43691,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder>::finish","value":"pub fn finish(Self) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding to the buffer, returning a slice containing the data\n written to the buffer.\n","sig":null,"attributes":[{"value":"/ Finish encoding to the buffer, returning a slice containing the data","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43570,"byte_end":43642,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ written to the buffer.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":43647,"byte_end":43673,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44075,"byte_end":44085,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"bit_string","qualname":"<Encoder>::bit_string","value":"pub fn bit_string<impl TryInto<BitString<'a>>: TryInto<BitString>>(&mut Self,\n                                                                   impl TryInto<BitString<'a>>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode the provided value as an ASN.1 `BIT STRING`\n","sig":null,"attributes":[{"value":"/ Encode the provided value as an ASN.1 `BIT STRING`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44009,"byte_end":44063,"line_start":67,"line_end":67,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44442,"byte_end":44446,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"null","qualname":"<Encoder>::null","value":"pub fn null(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an ASN.1 `NULL` value.\n","sig":null,"attributes":[{"value":"/ Encode an ASN.1 `NULL` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44397,"byte_end":44430,"line_start":79,"line_end":79,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44580,"byte_end":44592,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"octet_string","qualname":"<Encoder>::octet_string","value":"pub fn octet_string<impl TryInto<OctetString<'a>>: TryInto<OctetString>>(&mut Self,\n                                                                         impl TryInto<OctetString<'a>>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode the provided value as an ASN.1 `OCTET STRING`\n","sig":null,"attributes":[{"value":"/ Encode the provided value as an ASN.1 `OCTET STRING`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44512,"byte_end":44568,"line_start":84,"line_end":84,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":45039,"byte_end":45042,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"oid","qualname":"<Encoder>::oid","value":"pub fn oid<impl TryInto<ObjectIdentifier>: TryInto<ObjectIdentifier>>(&mut Self,\n                                                                      impl TryInto<ObjectIdentifier>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an ASN.1 [`ObjectIdentifier`]\n","sig":null,"attributes":[{"value":"/ Encode an ASN.1 [`ObjectIdentifier`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44908,"byte_end":44948,"line_start":96,"line_end":96,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"oid\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":44953,"byte_end":44976,"line_start":97,"line_end":97,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":45774,"byte_end":45782,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"sequence","qualname":"<Encoder>::sequence","value":"pub fn sequence(&mut Self, &[&dyn Encodable]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a sequence of values which impl the [`Encodable`] trait.\n","sig":null,"attributes":[{"value":"/ Encode a sequence of values which impl the [`Encodable`] trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":45695,"byte_end":45762,"line_start":119,"line_end":119,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":695},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49274,"byte_end":49280,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49248,"byte_end":49264,"line_start":6,"line_end":6,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49390,"byte_end":49395,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49319,"byte_end":49333,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49586,"byte_end":49589,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(ErrorKind, Length) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Error`]\n","sig":null,"attributes":[{"value":"/ Create a new [`Error`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49548,"byte_end":49574,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49782,"byte_end":49786,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the [`ErrorKind`] which occurred.\n","sig":null,"attributes":[{"value":"/ Get the [`ErrorKind`] which occurred.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49729,"byte_end":49770,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49917,"byte_end":49925,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"position","qualname":"<Error>::position","value":"pub fn position(Self) -> Option<Length>","parent":null,"children":[],"decl_id":null,"docs":" Get the position inside of the message where the error occurred.\n","sig":null,"attributes":[{"value":"/ Get the position inside of the message where the error occurred.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49837,"byte_end":49905,"line_start":33,"line_end":33,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50132,"byte_end":50138,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"nested","qualname":"<Error>::nested","value":"pub fn nested(Self, Length) -> Self","parent":null,"children":[],"decl_id":null,"docs":" For errors occurring inside of a nested message, extend the position\n count by the location where the nested message occurs.\n","sig":null,"attributes":[{"value":"/ For errors occurring inside of a nested message, extend the position","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49985,"byte_end":50057,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ count by the location where the nested message occurs.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50062,"byte_end":50120,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1181},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51331,"byte_end":51337,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"Failed","qualname":"::error::ErrorKind::Failed","value":"ErrorKind::Failed","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Operation failed due to previous error\n","sig":null,"attributes":[{"value":"/ Operation failed due to previous error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51284,"byte_end":51326,"line_start":92,"line_end":92,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1183},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51387,"byte_end":51393,"line_start":96,"line_end":96,"column_start":5,"column_end":11},"name":"Length","qualname":"::error::ErrorKind::Length","value":"ErrorKind::Length { tag }","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Incorrect length for a given field\n","sig":null,"attributes":[{"value":"/ Incorrect length for a given field","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51344,"byte_end":51382,"line_start":95,"line_end":95,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51517,"byte_end":51529,"line_start":102,"line_end":102,"column_start":5,"column_end":17},"name":"Noncanonical","qualname":"::error::ErrorKind::Noncanonical","value":"ErrorKind::Noncanonical","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Message is not canonically encoded\n","sig":null,"attributes":[{"value":"/ Message is not canonically encoded","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51474,"byte_end":51512,"line_start":101,"line_end":101,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51558,"byte_end":51561,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"Oid","qualname":"::error::ErrorKind::Oid","value":"ErrorKind::Oid","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Malformed OID\n","sig":null,"attributes":[{"value":"/ Malformed OID","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51536,"byte_end":51553,"line_start":104,"line_end":104,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51617,"byte_end":51625,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::error::ErrorKind::Overflow","value":"ErrorKind::Overflow","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Integer overflow occurred (library bug!)\n","sig":null,"attributes":[{"value":"/ Integer overflow occurred (library bug!)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51568,"byte_end":51612,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51702,"byte_end":51712,"line_start":111,"line_end":111,"column_start":5,"column_end":15},"name":"Overlength","qualname":"::error::ErrorKind::Overlength","value":"ErrorKind::Overlength","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Message is longer than this library's internal limits support\n","sig":null,"attributes":[{"value":"/ Message is longer than this library's internal limits support","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51632,"byte_end":51697,"line_start":110,"line_end":110,"column_start":5,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":1193},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51769,"byte_end":51781,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"name":"TrailingData","qualname":"::error::ErrorKind::TrailingData","value":"ErrorKind::TrailingData { decoded, remaining }","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Undecoded trailing data at end of message\n","sig":null,"attributes":[{"value":"/ Undecoded trailing data at end of message","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51719,"byte_end":51764,"line_start":113,"line_end":113,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1196},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52015,"byte_end":52024,"line_start":123,"line_end":123,"column_start":5,"column_end":14},"name":"Truncated","qualname":"::error::ErrorKind::Truncated","value":"ErrorKind::Truncated","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Unexpected end-of-message/nested field when decoding\n","sig":null,"attributes":[{"value":"/ Unexpected end-of-message/nested field when decoding","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51954,"byte_end":52010,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":1198},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52173,"byte_end":52184,"line_start":127,"line_end":127,"column_start":5,"column_end":16},"name":"Underlength","qualname":"::error::ErrorKind::Underlength","value":"ErrorKind::Underlength { expected, actual }","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Encoded message is shorter than the expected length\n (i.e. an `Encodable` impl on a particular type has a buggy `encoded_len`)\n","sig":null,"attributes":[{"value":"/ Encoded message is shorter than the expected length","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52031,"byte_end":52086,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/ (i.e. an `Encodable` impl on a particular type has a buggy `encoded_len`)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52091,"byte_end":52168,"line_start":126,"line_end":126,"column_start":5,"column_end":82}}]},{"kind":"StructVariant","id":{"krate":0,"index":1201},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52327,"byte_end":52340,"line_start":136,"line_end":136,"column_start":5,"column_end":18},"name":"UnexpectedTag","qualname":"::error::ErrorKind::UnexpectedTag","value":"ErrorKind::UnexpectedTag { expected, actual }","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Unexpected tag\n","sig":null,"attributes":[{"value":"/ Unexpected tag","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52304,"byte_end":52322,"line_start":135,"line_end":135,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":1204},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52696,"byte_end":52706,"line_start":148,"line_end":148,"column_start":5,"column_end":15},"name":"UnknownTag","qualname":"::error::ErrorKind::UnknownTag","value":"ErrorKind::UnknownTag { byte }","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Unknown/unsupported tag\n","sig":null,"attributes":[{"value":"/ Unknown/unsupported tag","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52664,"byte_end":52691,"line_start":147,"line_end":147,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":1206},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52802,"byte_end":52807,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"Value","qualname":"::error::ErrorKind::Value","value":"ErrorKind::Value { tag }","parent":{"krate":0,"index":1180},"children":[],"decl_id":null,"docs":" Unexpected value\n","sig":null,"attributes":[{"value":"/ Unexpected value","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52777,"byte_end":52797,"line_start":153,"line_end":153,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1180},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51268,"byte_end":51277,"line_start":91,"line_end":91,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    Failed,\n    Length {\n        tag: Tag,\n    },\n    Noncanonical,\n    Oid,\n    Overflow,\n    Overlength,\n    TrailingData {\n        decoded: Length,\n        remaining: Length,\n    },\n    Truncated,\n    Underlength {\n        expected: Length,\n        actual: Length,\n    },\n    UnexpectedTag {\n        expected: Option<Tag>,\n        actual: Tag,\n    },\n    UnknownTag {\n        byte: u8,\n    },\n    Value {\n        tag: Tag,\n    },\n}","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1206}],"decl_id":null,"docs":" Error type.\n","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51180,"byte_end":51195,"line_start":88,"line_end":88,"column_start":1,"column_end":16}},{"value":"non_exhaustive","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51241,"byte_end":51258,"line_start":90,"line_end":90,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":53006,"byte_end":53008,"line_start":163,"line_end":163,"column_start":12,"column_end":14},"name":"at","qualname":"<ErrorKind>::at","value":"pub fn at(Self, Length) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Annotate an [`ErrorKind`] with context about where it occurred,\n returning an error.\n","sig":null,"attributes":[{"value":"/ Annotate an [`ErrorKind`] with context about where it occurred,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52899,"byte_end":52966,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ returning an error.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52971,"byte_end":52994,"line_start":162,"line_end":162,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56556,"byte_end":56562,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Length","qualname":"::length::Length","value":"","parent":null,"children":[],"decl_id":null,"docs":" ASN.1-encoded length.","sig":null,"attributes":[{"value":"/ ASN.1-encoded length.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56376,"byte_end":56401,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56402,"byte_end":56405,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Limits","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56406,"byte_end":56418,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56419,"byte_end":56422,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Presently constrained to the range `0..=65535`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56423,"byte_end":56473,"line_start":10,"line_end":10,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56633,"byte_end":56637,"line_start":16,"line_end":16,"column_start":18,"column_end":22},"name":"zero","qualname":"<Length>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a length of `0`.\n","sig":null,"attributes":[{"value":"/ Return a length of `0`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56588,"byte_end":56615,"line_start":15,"line_end":15,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56747,"byte_end":56750,"line_start":21,"line_end":21,"column_start":18,"column_end":21},"name":"max","qualname":"<Length>::max","value":"pub const fn max() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum length supported by this crate\n","sig":null,"attributes":[{"value":"/ Get the maximum length supported by this crate","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56679,"byte_end":56729,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56842,"byte_end":56850,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Length>::to_usize","value":"pub fn to_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Convert length to `usize`\n","sig":null,"attributes":[{"value":"/ Convert length to `usize`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56801,"byte_end":56830,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62438,"byte_end":62445,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::tag::Tag::Boolean","value":"Tag::Boolean","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `BOOLEAN` tag.\n","sig":null,"attributes":[{"value":"/ `BOOLEAN` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62415,"byte_end":62433,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1260},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62482,"byte_end":62489,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Integer","qualname":"::tag::Tag::Integer","value":"Tag::Integer","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `INTEGER` tag.\n","sig":null,"attributes":[{"value":"/ `INTEGER` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62459,"byte_end":62477,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62529,"byte_end":62538,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"BitString","qualname":"::tag::Tag::BitString","value":"Tag::BitString","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `BIT STRING` tag.\n","sig":null,"attributes":[{"value":"/ `BIT STRING` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62503,"byte_end":62524,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62580,"byte_end":62591,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"name":"OctetString","qualname":"::tag::Tag::OctetString","value":"Tag::OctetString","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `OCTET STRING` tag.\n","sig":null,"attributes":[{"value":"/ `OCTET STRING` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62552,"byte_end":62575,"line_start":27,"line_end":27,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62625,"byte_end":62629,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Null","qualname":"::tag::Tag::Null","value":"Tag::Null","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `NULL` tag.\n","sig":null,"attributes":[{"value":"/ `NULL` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62605,"byte_end":62620,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62676,"byte_end":62692,"line_start":34,"line_end":34,"column_start":5,"column_end":21},"name":"ObjectIdentifier","qualname":"::tag::Tag::ObjectIdentifier","value":"Tag::ObjectIdentifier","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `OBJECT IDENTIFIER` tag.\n","sig":null,"attributes":[{"value":"/ `OBJECT IDENTIFIER` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62643,"byte_end":62671,"line_start":33,"line_end":33,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62931,"byte_end":62939,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Sequence","qualname":"::tag::Tag::Sequence","value":"Tag::Sequence","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" `SEQUENCE` tag.","sig":null,"attributes":[{"value":"/ `SEQUENCE` tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62706,"byte_end":62725,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62730,"byte_end":62733,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that the universal tag number for `SEQUENCE` is technically `0x10`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62738,"byte_end":62813,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ however we presently only support the constructed form, which has the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62818,"byte_end":62891,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ 6th bit (i.e. `0x20`) set.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62896,"byte_end":62926,"line_start":40,"line_end":40,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63039,"byte_end":63055,"line_start":44,"line_end":44,"column_start":5,"column_end":21},"name":"ContextSpecific0","qualname":"::tag::Tag::ContextSpecific0","value":"Tag::ContextSpecific0","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Context-specific tag (0) unique to a particular structure.\n","sig":null,"attributes":[{"value":"/ Context-specific tag (0) unique to a particular structure.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62972,"byte_end":63034,"line_start":43,"line_end":43,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63176,"byte_end":63192,"line_start":47,"line_end":47,"column_start":5,"column_end":21},"name":"ContextSpecific1","qualname":"::tag::Tag::ContextSpecific1","value":"Tag::ContextSpecific1","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Context-specific tag (1) unique to a particular structure.\n","sig":null,"attributes":[{"value":"/ Context-specific tag (1) unique to a particular structure.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63109,"byte_end":63171,"line_start":46,"line_end":46,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63313,"byte_end":63329,"line_start":50,"line_end":50,"column_start":5,"column_end":21},"name":"ContextSpecific2","qualname":"::tag::Tag::ContextSpecific2","value":"Tag::ContextSpecific2","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Context-specific tag (2) unique to a particular structure.\n","sig":null,"attributes":[{"value":"/ Context-specific tag (2) unique to a particular structure.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63246,"byte_end":63308,"line_start":49,"line_end":49,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63450,"byte_end":63466,"line_start":53,"line_end":53,"column_start":5,"column_end":21},"name":"ContextSpecific3","qualname":"::tag::Tag::ContextSpecific3","value":"Tag::ContextSpecific3","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Context-specific tag (3) unique to a particular structure.\n","sig":null,"attributes":[{"value":"/ Context-specific tag (3) unique to a particular structure.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63383,"byte_end":63445,"line_start":52,"line_end":52,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":1256},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62405,"byte_end":62408,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Tag","qualname":"::tag::Tag","value":"pub enum Tag {\n    Boolean = ,\n    Integer = ,\n    BitString = ,\n    OctetString = ,\n    Null = ,\n    ObjectIdentifier = ,\n    Sequence = ,\n    ContextSpecific0 = ,\n    ContextSpecific1 = ,\n    ContextSpecific2 = ,\n    ContextSpecific3 = ,\n}","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287}],"decl_id":null,"docs":" ASN.1 tags.\n","sig":null,"attributes":[{"value":"/ ASN.1 tags.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62282,"byte_end":62297,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62336,"byte_end":62365,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62366,"byte_end":62383,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"repr(u8)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":62384,"byte_end":62395,"line_start":16,"line_end":16,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64356,"byte_end":64365,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"assert_eq","qualname":"<Tag>::assert_eq","value":"pub fn assert_eq(Self, Tag) -> Result<Tag>","parent":null,"children":[],"decl_id":null,"docs":" Assert that this [`Tag`] matches the provided expected tag.","sig":null,"attributes":[{"value":"/ Assert that this [`Tag`] matches the provided expected tag.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64196,"byte_end":64259,"line_start":78,"line_end":78,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64264,"byte_end":64267,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On mismatch, returns an [`Error`] with [`ErrorKind::UnexpectedTag`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64272,"byte_end":64344,"line_start":80,"line_end":80,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64716,"byte_end":64725,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"type_name","qualname":"<Tag>::type_name","value":"pub fn type_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Names of ASN.1 type which corresponds to a given [`Tag`].\n","sig":null,"attributes":[{"value":"/ Names of ASN.1 type which corresponds to a given [`Tag`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64643,"byte_end":64704,"line_start":93,"line_end":93,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":904},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66275,"byte_end":66284,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"Decodable","qualname":"::traits::Decodable","value":"Decodable<'a>: Sized","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" Decoding trait.\n","sig":null,"attributes":[{"value":"/ Decoding trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66245,"byte_end":66264,"line_start":13,"line_end":13,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66372,"byte_end":66378,"line_start":16,"line_end":16,"column_start":8,"column_end":14},"name":"decode","qualname":"::traits::Decodable::decode","value":"pub fn decode(&mut Decoder) -> Result<Self>","parent":{"krate":0,"index":904},"children":[],"decl_id":null,"docs":" Attempt to decode this message using the provided decoder.\n","sig":null,"attributes":[{"value":"/ Attempt to decode this message using the provided decoder.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66302,"byte_end":66364,"line_start":15,"line_end":15,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66482,"byte_end":66492,"line_start":19,"line_end":19,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::traits::Decodable::from_bytes","value":"pub fn from_bytes(&'a [u8]) -> Result<Self>","parent":{"krate":0,"index":904},"children":[],"decl_id":null,"docs":" Parse `Self` from the provided byte slice.\n","sig":null,"attributes":[{"value":"/ Parse `Self` from the provided byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66428,"byte_end":66474,"line_start":18,"line_end":18,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":913},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66957,"byte_end":66966,"line_start":38,"line_end":38,"column_start":11,"column_end":20},"name":"Encodable","qualname":"::traits::Encodable","value":"Encodable","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"decl_id":null,"docs":" Encoding trait.\n","sig":null,"attributes":[{"value":"/ Encoding trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66927,"byte_end":66946,"line_start":37,"line_end":37,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":67053,"byte_end":67064,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::traits::Encodable::encoded_len","value":"pub fn encoded_len(&Self) -> Result<Length>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Compute the length of this value in bytes when encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"/ Compute the length of this value in bytes when encoded as ASN.1 DER.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66973,"byte_end":67045,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":67170,"byte_end":67176,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"encode","qualname":"::traits::Encodable::encode","value":"pub fn encode(&Self, &mut Encoder) -> Result<()>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Encode this value as ASN.1 DER using the provided [`Encoder`].\n","sig":null,"attributes":[{"value":"/ Encode this value as ASN.1 DER using the provided [`Encoder`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":67096,"byte_end":67162,"line_start":42,"line_end":42,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":67350,"byte_end":67365,"line_start":47,"line_end":47,"column_start":8,"column_end":23},"name":"encode_to_slice","qualname":"::traits::Encodable::encode_to_slice","value":"pub fn encode_to_slice<'a>(&Self, &'a mut [u8]) -> Result<&'a [u8]>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Encode this value to the provided byte slice, returning a sub-slice\n containing the encoded message.\n","sig":null,"attributes":[{"value":"/ Encode this value to the provided byte slice, returning a sub-slice","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":67231,"byte_end":67302,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ containing the encoded message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":67307,"byte_end":67342,"line_start":46,"line_end":46,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":918},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68659,"byte_end":68665,"line_start":88,"line_end":88,"column_start":11,"column_end":17},"name":"Tagged","qualname":"::traits::Tagged","value":"Tagged","parent":null,"children":[{"krate":0,"index":919}],"decl_id":null,"docs":" Types with an associated ASN.1 [`Tag`].\n","sig":null,"attributes":[{"value":"/ Types with an associated ASN.1 [`Tag`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68605,"byte_end":68648,"line_start":87,"line_end":87,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":919},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68696,"byte_end":68699,"line_start":90,"line_end":90,"column_start":11,"column_end":14},"name":"TAG","qualname":"::traits::Tagged::TAG","value":"Tag","parent":{"krate":0,"index":918},"children":[],"decl_id":null,"docs":" ASN.1 tag\n","sig":null,"attributes":[{"value":"/ ASN.1 tag","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68672,"byte_end":68685,"line_start":89,"line_end":89,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69009,"byte_end":69016,"line_start":100,"line_end":100,"column_start":11,"column_end":18},"name":"Message","qualname":"::traits::Message","value":"Message<'a>: Decodable","parent":null,"children":[{"krate":0,"index":922}],"decl_id":null,"docs":" Messages encoded as an ASN.1 `SEQUENCE`.","sig":null,"attributes":[{"value":"/ Messages encoded as an ASN.1 `SEQUENCE`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68709,"byte_end":68753,"line_start":93,"line_end":93,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68754,"byte_end":68757,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This wraps up a common pattern for ASN.1 encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68758,"byte_end":68812,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68813,"byte_end":68816,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Types which impl this trait receive blanket impls for the [`Decodable`],","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68817,"byte_end":68893,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/ [`Encodable`], and [`Tagged`] traits.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":68894,"byte_end":68935,"line_start":98,"line_end":98,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69373,"byte_end":69379,"line_start":107,"line_end":107,"column_start":8,"column_end":14},"name":"fields","qualname":"::traits::Message::fields","value":"pub fn fields<F, T>(&Self, F) -> Result<T> where F: FnOnce(&[&dyn Encodable])\n-> Result<T>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Call the provided function with a slice of [`Encodable`] trait objects\n representing the fields of this message.","sig":null,"attributes":[{"value":"/ Call the provided function with a slice of [`Encodable`] trait objects","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69042,"byte_end":69116,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ representing the fields of this message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69121,"byte_end":69165,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69170,"byte_end":69173,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method uses a callback because structs with fields which aren't","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69178,"byte_end":69250,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ directly [`Encodable`] may need to construct temporary values from","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69255,"byte_end":69325,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ their fields prior to encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69330,"byte_end":69365,"line_start":106,"line_end":106,"column_start":5,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15443,"byte_end":15446,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":17348,"byte_end":17351,"line_start":91,"line_end":91,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":17683,"byte_end":17686,"line_start":101,"line_end":101,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":17979,"byte_end":17982,"line_start":112,"line_end":112,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18425,"byte_end":18434,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18831,"byte_end":18840,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18946,"byte_end":18955,"line_start":33,"line_end":33,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19070,"byte_end":19079,"line_start":39,"line_end":39,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19290,"byte_end":19293,"line_start":48,"line_end":48,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19614,"byte_end":19623,"line_start":63,"line_end":63,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19856,"byte_end":19865,"line_start":73,"line_end":73,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23971,"byte_end":23981,"line_start":68,"line_end":68,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24374,"byte_end":24384,"line_start":82,"line_end":82,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24491,"byte_end":24501,"line_start":88,"line_end":88,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24618,"byte_end":24628,"line_start":94,"line_end":94,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24839,"byte_end":24842,"line_start":103,"line_end":103,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":25020,"byte_end":25030,"line_start":112,"line_end":112,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":25263,"byte_end":25273,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":26775,"byte_end":26779,"line_start":10,"line_end":10,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":27066,"byte_end":27069,"line_start":24,"line_end":24,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":27180,"byte_end":27184,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":27409,"byte_end":27413,"line_start":40,"line_end":40,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28226,"byte_end":28237,"line_start":13,"line_end":13,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28636,"byte_end":28647,"line_start":27,"line_end":27,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28755,"byte_end":28766,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28885,"byte_end":28896,"line_start":39,"line_end":39,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":29113,"byte_end":29116,"line_start":48,"line_end":48,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":29453,"byte_end":29464,"line_start":63,"line_end":63,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":29697,"byte_end":29708,"line_start":73,"line_end":73,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/oid.rs","byte_start":29950,"byte_end":29966,"line_start":8,"line_end":8,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/oid.rs","byte_start":30191,"byte_end":30207,"line_start":17,"line_end":17,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/oid.rs","byte_start":30528,"byte_end":30544,"line_start":29,"line_end":29,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/optional.rs","byte_start":31372,"byte_end":31378,"line_start":5,"line_end":5,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/optional.rs","byte_start":31631,"byte_end":31637,"line_start":18,"line_end":18,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33065,"byte_end":33073,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33914,"byte_end":33922,"line_start":59,"line_end":59,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34024,"byte_end":34032,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34240,"byte_end":34243,"line_start":74,"line_end":74,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34412,"byte_end":34420,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34653,"byte_end":34661,"line_start":93,"line_end":93,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/byte_slice.rs","byte_start":35231,"byte_end":35240,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/byte_slice.rs","byte_start":35881,"byte_end":35890,"line_start":45,"line_end":45,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36509,"byte_end":36516,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":40892,"byte_end":40899,"line_start":164,"line_end":164,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42594,"byte_end":42601,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49536,"byte_end":49541,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50460,"byte_end":50465,"line_start":51,"line_end":51,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50720,"byte_end":50725,"line_start":63,"line_end":63,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50890,"byte_end":50895,"line_start":72,"line_end":72,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51024,"byte_end":51029,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52883,"byte_end":52892,"line_start":160,"line_end":160,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":53110,"byte_end":53119,"line_start":168,"line_end":168,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/header.rs","byte_start":55158,"byte_end":55164,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/header.rs","byte_start":55531,"byte_end":55537,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/header.rs","byte_start":55930,"byte_end":55936,"line_start":42,"line_end":42,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56575,"byte_end":56581,"line_start":14,"line_end":14,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56912,"byte_end":56918,"line_start":31,"line_end":31,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57157,"byte_end":57163,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57307,"byte_end":57313,"line_start":50,"line_end":50,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57460,"byte_end":57466,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57621,"byte_end":57627,"line_start":66,"line_end":66,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57754,"byte_end":57760,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57851,"byte_end":57857,"line_start":80,"line_end":80,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":58130,"byte_end":58136,"line_start":98,"line_end":98,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":58349,"byte_end":58355,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":59647,"byte_end":59653,"line_start":145,"line_end":145,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":60358,"byte_end":60364,"line_start":170,"line_end":170,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63539,"byte_end":63542,"line_start":56,"line_end":56,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64186,"byte_end":64189,"line_start":77,"line_end":77,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65362,"byte_end":65365,"line_start":111,"line_end":111,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65503,"byte_end":65506,"line_start":117,"line_end":117,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65714,"byte_end":65717,"line_start":127,"line_end":127,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65850,"byte_end":65853,"line_start":133,"line_end":133,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66695,"byte_end":66696,"line_start":26,"line_end":26,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69502,"byte_end":69503,"line_start":112,"line_end":112,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69779,"byte_end":69780,"line_start":125,"line_end":125,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1.rs","byte_start":14852,"byte_end":14860,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":447}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":15443,"byte_end":15446,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":17348,"byte_end":17351,"line_start":91,"line_end":91,"column_start":28,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1004},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":17683,"byte_end":17686,"line_start":101,"line_end":101,"column_start":24,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1004},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/any.rs","byte_start":17979,"byte_end":17982,"line_start":112,"line_end":112,"column_start":32,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18425,"byte_end":18434,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18831,"byte_end":18840,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1027},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":18946,"byte_end":18955,"line_start":33,"line_end":33,"column_start":35,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1027},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19070,"byte_end":19079,"line_start":39,"line_end":39,"column_start":31,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1027},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19290,"byte_end":19293,"line_start":48,"line_end":48,"column_start":34,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19614,"byte_end":19623,"line_start":63,"line_end":63,"column_start":24,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1027},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/bit_string.rs","byte_start":19856,"byte_end":19865,"line_start":73,"line_end":73,"column_start":21,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1027},"to":{"krate":0,"index":918}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":23971,"byte_end":23981,"line_start":68,"line_end":68,"column_start":10,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24374,"byte_end":24384,"line_start":82,"line_end":82,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24491,"byte_end":24501,"line_start":88,"line_end":88,"column_start":36,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24618,"byte_end":24628,"line_start":94,"line_end":94,"column_start":31,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1049},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":24839,"byte_end":24842,"line_start":103,"line_end":103,"column_start":35,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":25020,"byte_end":25030,"line_start":112,"line_end":112,"column_start":24,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1049},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/integer.rs","byte_start":25263,"byte_end":25273,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1049},"to":{"krate":0,"index":918}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":26775,"byte_end":26779,"line_start":10,"line_end":10,"column_start":27,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":27066,"byte_end":27069,"line_start":24,"line_end":24,"column_start":25,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":27180,"byte_end":27184,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1071},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/null.rs","byte_start":27409,"byte_end":27413,"line_start":40,"line_end":40,"column_start":17,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1071},"to":{"krate":0,"index":918}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28226,"byte_end":28237,"line_start":13,"line_end":13,"column_start":10,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28636,"byte_end":28647,"line_start":27,"line_end":27,"column_start":22,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28755,"byte_end":28766,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":28885,"byte_end":28896,"line_start":39,"line_end":39,"column_start":31,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1084},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":29113,"byte_end":29116,"line_start":48,"line_end":48,"column_start":36,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":29453,"byte_end":29464,"line_start":63,"line_end":63,"column_start":24,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1084},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/octet_string.rs","byte_start":29697,"byte_end":29708,"line_start":73,"line_end":73,"column_start":21,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1084},"to":{"krate":0,"index":918}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/oid.rs","byte_start":29950,"byte_end":29966,"line_start":8,"line_end":8,"column_start":27,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":4,"index":207},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/oid.rs","byte_start":30191,"byte_end":30207,"line_start":17,"line_end":17,"column_start":20,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":4,"index":207},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/oid.rs","byte_start":30528,"byte_end":30544,"line_start":29,"line_end":29,"column_start":21,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":4,"index":207},"to":{"krate":0,"index":918}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/optional.rs","byte_start":31372,"byte_end":31378,"line_start":5,"line_end":5,"column_start":31,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":39951},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/optional.rs","byte_start":31631,"byte_end":31637,"line_start":18,"line_end":18,"column_start":23,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":39951},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33065,"byte_end":33073,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":33914,"byte_end":33922,"line_start":59,"line_end":59,"column_start":22,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1106},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34024,"byte_end":34032,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1106},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34240,"byte_end":34243,"line_start":74,"line_end":74,"column_start":33,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1004},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34412,"byte_end":34420,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/asn1/sequence.rs","byte_start":34653,"byte_end":34661,"line_start":93,"line_end":93,"column_start":21,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":918}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/byte_slice.rs","byte_start":35231,"byte_end":35240,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/byte_slice.rs","byte_start":35881,"byte_end":35890,"line_start":45,"line_end":45,"column_start":22,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1128},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":36509,"byte_end":36516,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/decoder.rs","byte_start":40892,"byte_end":40899,"line_start":164,"line_end":164,"column_start":29,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1151},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/encoder.rs","byte_start":42594,"byte_end":42601,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":49536,"byte_end":49541,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50460,"byte_end":50465,"line_start":51,"line_end":51,"column_start":23,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50720,"byte_end":50725,"line_start":63,"line_end":63,"column_start":26,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":50890,"byte_end":50895,"line_start":72,"line_end":72,"column_start":42,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":51024,"byte_end":51029,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":52883,"byte_end":52892,"line_start":160,"line_end":160,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/error.rs","byte_start":53110,"byte_end":53119,"line_start":168,"line_end":168,"column_start":23,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1180},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/header.rs","byte_start":55158,"byte_end":55164,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/header.rs","byte_start":55531,"byte_end":55537,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1220},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/header.rs","byte_start":55930,"byte_end":55936,"line_start":42,"line_end":42,"column_start":20,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1220},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56575,"byte_end":56581,"line_start":14,"line_end":14,"column_start":6,"column_end":12},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":56912,"byte_end":56918,"line_start":31,"line_end":31,"column_start":14,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57157,"byte_end":57163,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57307,"byte_end":57313,"line_start":50,"line_end":50,"column_start":19,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57460,"byte_end":57466,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57621,"byte_end":57627,"line_start":66,"line_end":66,"column_start":22,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":695},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57754,"byte_end":57760,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":57851,"byte_end":57857,"line_start":80,"line_end":80,"column_start":20,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":58130,"byte_end":58136,"line_start":98,"line_end":98,"column_start":25,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":58349,"byte_end":58355,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1235},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":59647,"byte_end":59653,"line_start":145,"line_end":145,"column_start":20,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1235},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/length.rs","byte_start":60358,"byte_end":60364,"line_start":170,"line_end":170,"column_start":23,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":63539,"byte_end":63542,"line_start":56,"line_end":56,"column_start":22,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1256},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":64186,"byte_end":64189,"line_start":77,"line_end":77,"column_start":6,"column_end":9},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65362,"byte_end":65365,"line_start":111,"line_end":111,"column_start":24,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1256},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65503,"byte_end":65506,"line_start":117,"line_end":117,"column_start":20,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1256},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65714,"byte_end":65717,"line_start":127,"line_end":127,"column_start":23,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1256},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/tag.rs","byte_start":65850,"byte_end":65853,"line_start":133,"line_end":133,"column_start":21,"column_end":24},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1256},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66290,"byte_end":66295,"line_start":14,"line_end":14,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":66695,"byte_end":66696,"line_start":26,"line_end":26,"column_start":31,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":910},"to":{"krate":0,"index":904}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69022,"byte_end":69031,"line_start":100,"line_end":100,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":904},"to":{"krate":0,"index":920}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69502,"byte_end":69503,"line_start":112,"line_end":112,"column_start":27,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":913}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/der-0.1.0/src/traits.rs","byte_start":69779,"byte_end":69780,"line_start":125,"line_end":125,"column_start":24,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":933},"to":{"krate":0,"index":918}}]}
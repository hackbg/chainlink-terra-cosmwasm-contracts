{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ecdsa","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"digest\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"hmac\"","--cfg","feature=\"sign\"","--cfg","feature=\"std\"","--cfg","feature=\"verify\"","--cfg","feature=\"zeroize\"","-C","metadata=0f8d8963953ac37e","-C","extra-filename=-0f8d8963953ac37e","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","elliptic_curve=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libelliptic_curve-cdfe387bbc3609d9.rmeta","--extern","hmac=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libhmac-ac9d4948a49f8b1a.rmeta","--extern","signature=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libsignature-2b633ce9df295efc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libecdsa-0f8d8963953ac37e.rmeta"},"prelude":{"crate_id":{"name":"ecdsa","disambiguator":[10095924235346771483,13530389282245231814]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":5,"id":{"name":"elliptic_curve","disambiguator":[12962610352709599449,1092650790515722109]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":6,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":7,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":8,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":9,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":10,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":13,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":14,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":15,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":16,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":18,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":20,"id":{"name":"subtle","disambiguator":[13649248947348070893,10545555751276563020]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":21,"id":{"name":"generic_array","disambiguator":[2843115902605017426,8992412963017954804]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":22,"id":{"name":"typenum","disambiguator":[15595204929548488895,11009855742131221505]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":23,"id":{"name":"zeroize","disambiguator":[4196693835647716122,2424233725925652009]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":24,"id":{"name":"ff","disambiguator":[2127753199578883533,6038891583446360077]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":25,"id":{"name":"bitvec","disambiguator":[12843394802284785757,18049944760944282035]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":26,"id":{"name":"radium","disambiguator":[6170578490148099913,11385662121544404573]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":27,"id":{"name":"wyz","disambiguator":[14075336805396516078,8175419829704857618]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":28,"id":{"name":"funty","disambiguator":[18100334673436176153,12213058834818999383]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":29,"id":{"name":"rand_core","disambiguator":[15262903449215184178,1965405531746979256]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":30,"id":{"name":"getrandom","disambiguator":[17970065197973694116,6812716713039249432]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":31,"id":{"name":"cfg_if","disambiguator":[18066125678311518643,11358915899814267326]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":32,"id":{"name":"libc","disambiguator":[2521045491498281214,2123948796851982599]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":33,"id":{"name":"group","disambiguator":[4491951580228129931,2167256649219017635]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":34,"id":{"name":"pkcs8","disambiguator":[4005606756325313909,11473494331770028794]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":35,"id":{"name":"der","disambiguator":[6620283982502722200,2601874819529451539]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":36,"id":{"name":"const_oid","disambiguator":[16652256300093258142,3482606670295155140]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","num":37,"id":{"name":"digest","disambiguator":[11815551155626523553,13150518862568951459]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","num":38,"id":{"name":"signature","disambiguator":[11852001358081360889,258583192709905972]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","num":39,"id":{"name":"hmac","disambiguator":[14461085160494243860,6945854892547497893]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","num":40,"id":{"name":"crypto_mac","disambiguator":[18287248403066418544,2337432805662306154]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":0,"byte_end":12265,"line_start":1,"line_end":376,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2749,"byte_end":2763,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2772,"byte_end":2785,"line_start":80,"line_end":80,"column_start":32,"column_end":45},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":770},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2793,"byte_end":2805,"line_start":80,"line_end":80,"column_start":53,"column_end":65},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":219},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2820,"byte_end":2825,"line_start":80,"line_end":80,"column_start":80,"column_end":85},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2891,"byte_end":2900,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":128},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2909,"byte_end":2914,"line_start":83,"line_end":83,"column_start":27,"column_end":32},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3005,"byte_end":3015,"line_start":87,"line_end":87,"column_start":15,"column_end":25},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3111,"byte_end":3123,"line_start":91,"line_end":91,"column_start":17,"column_end":29},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":874},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3229,"byte_end":3238,"line_start":95,"line_end":95,"column_start":25,"column_end":34},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":0,"byte_end":12265,"line_start":1,"line_end":376,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":88},{"krate":0,"index":160},{"krate":0,"index":229},{"krate":0,"index":381},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":594},{"krate":0,"index":601},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":636}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in\n [FIPS 186-4] (Digital Signature Standard)","sig":null,"attributes":[{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ [FIPS 186-4] (Digital Signature Standard)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":71,"byte_end":116,"line_start":2,"line_end":2,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":117,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ## About","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":121,"byte_end":133,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":134,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate provides generic ECDSA support which can be used in the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":138,"byte_end":208,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ following ways:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":209,"byte_end":228,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":229,"byte_end":232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - Generic implementation of ECDSA usable with the following crates:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":233,"byte_end":304,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/   - [`k256`] (secp256k1)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":305,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/   - [`p256`] (NIST P-256)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":334,"byte_end":363,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ - ECDSA signature types alone which can be used to provide interoperability","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":364,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   between other crates that provide an ECDSA implementation:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":444,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/   - [`p384`] (NIST P-384)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":509,"byte_end":538,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":539,"byte_end":542,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Any crates which provide an implementation of ECDSA for a particular","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":543,"byte_end":615,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ elliptic curve can leverage the types from this crate, along with the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":616,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ [`k256`], [`p256`], and/or [`p384`] crates to expose ECDSA functionality in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":690,"byte_end":769,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a generic, interoperable way by leveraging the [`Signature`] type with in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":770,"byte_end":847,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ conjunction with the [`signature::Signer`] and [`signature::Verifier`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":848,"byte_end":922,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ traits.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":923,"byte_end":934,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":935,"byte_end":938,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For example, the [`ring-compat`] crate implements the [`signature::Signer`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":939,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ and [`signature::Verifier`] traits in conjunction with the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1019,"byte_end":1081,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/ [`p256::ecdsa::Signature`] and [`p384::ecdsa::Signature`] types to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1082,"byte_end":1152,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ wrap the ECDSA implementations from [*ring*] in a generic, interoperable","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1153,"byte_end":1229,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ API.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1230,"byte_end":1238,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1243,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1281,"byte_end":1284,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Rust **1.46+** or higher.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1285,"byte_end":1314,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1315,"byte_end":1318,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Minimum supported Rust version may be changed in the future, but it will be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1319,"byte_end":1398,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ accompanied with a minor version bump.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1399,"byte_end":1441,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1442,"byte_end":1445,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [FIPS 186-4]: https://csrc.nist.gov/publications/detail/fips/186/4/final","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1446,"byte_end":1522,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ [`k256`]: https://docs.rs/k256","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1523,"byte_end":1557,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ [`p256`]: https://docs.rs/p256","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1558,"byte_end":1592,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ [`p256::ecdsa::Signature`]: https://docs.rs/p256/latest/p256/ecdsa/type.Signature.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1593,"byte_end":1683,"line_start":39,"line_end":39,"column_start":1,"column_end":91}},{"value":"/ [`p384`]: https://docs.rs/p384","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1684,"byte_end":1718,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ [`p384::ecdsa::Signature`]: https://docs.rs/p384/latest/p384/ecdsa/type.Signature.html","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1719,"byte_end":1809,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ [`ring-compat`]: https://docs.rs/ring-compat","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1810,"byte_end":1858,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ [*ring*]: https://docs.rs/ring","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1859,"byte_end":1893,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"no_std","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1895,"byte_end":1905,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1945,"byte_end":1968,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":1969,"byte_end":2009,"line_start":48,"line_end":48,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"asn1","qualname":"::asn1","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" Support for ECDSA signatures encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"/ Support for ECDSA signatures encoded as ASN.1 DER.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":12267,"byte_end":12321,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13375,"byte_end":13386,"line_start":37,"line_end":37,"column_start":10,"column_end":21},"name":"MaxOverhead","qualname":"::asn1::MaxOverhead","value":"U9","parent":null,"children":[],"decl_id":null,"docs":" Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:\n 9-bytes.","sig":null,"attributes":[{"value":"/ Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":12908,"byte_end":12987,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ 9-bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":12988,"byte_end":13000,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13001,"byte_end":13004,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Includes 3-byte ASN.1 DER header:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13005,"byte_end":13042,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13043,"byte_end":13046,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `SEQUENCE` tag (0x30)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13047,"byte_end":13088,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ - 2-byte: length","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13089,"byte_end":13109,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13110,"byte_end":13113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ...followed by two ASN.1 `INTEGER` values, which each have a header whose","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13114,"byte_end":13191,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ maximum length is the following:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13192,"byte_end":13228,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13229,"byte_end":13232,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `INTEGER` tag (0x02)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13233,"byte_end":13273,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ - 1-byte: length","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13274,"byte_end":13294,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/ - 1-byte: zero to indicate value is positive (`INTEGER` is signed)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13295,"byte_end":13365,"line_start":36,"line_end":36,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13484,"byte_end":13491,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"MaxSize","qualname":"::asn1::MaxSize","value":"<<<C as elliptic_curve::Curve>::FieldSize as Add>::Output as\nAdd<MaxOverhead>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13394,"byte_end":13474,"line_start":39,"line_end":39,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13916,"byte_end":13925,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"Signature","qualname":"::asn1::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" ASN.1 DER-encoded signature.","sig":null,"attributes":[{"value":"/ ASN.1 DER-encoded signature.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13812,"byte_end":13844,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13845,"byte_end":13848,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Generic over the scalar size of the elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":13849,"byte_end":13904,"line_start":54,"line_end":54,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":14989,"byte_end":14992,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"len","qualname":"<Signature<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the signature in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the signature in bytes","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":14933,"byte_end":14977,"line_start":93,"line_end":93,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":15100,"byte_end":15108,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature<C>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this signature as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow this signature as a byte slice","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":15047,"byte_end":15088,"line_start":98,"line_end":98,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":15275,"byte_end":15283,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Signature<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as a boxed byte slice\n","sig":null,"attributes":[{"value":"/ Serialize this signature as a boxed byte slice","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":15183,"byte_end":15233,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":15238,"byte_end":15263,"line_start":104,"line_end":104,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hazmat","qualname":"::hazmat","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":139},{"krate":0,"index":144},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":157}],"decl_id":null,"docs":" Low-level ECDSA primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"hazmat\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2315,"byte_end":2341,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/ Low-level ECDSA primitives.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25004,"byte_end":25035,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25036,"byte_end":25039,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Warning: Hazmat!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25040,"byte_end":25069,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25070,"byte_end":25073,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ YOU PROBABLY DON'T WANT TO USE THESE!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25074,"byte_end":25115,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25116,"byte_end":25119,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These primitives are easy-to-misuse low-level interfaces intended to be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25120,"byte_end":25195,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ implemented by elliptic curve crates and consumed only by this crate!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25196,"byte_end":25269,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25270,"byte_end":25273,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If you are an end user / non-expert in cryptography, do not use these!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25274,"byte_end":25348,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ Failure to use them correctly can lead to catastrophic failures including","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25349,"byte_end":25426,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ FULL PRIVATE KEY RECOVERY!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":25427,"byte_end":25457,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":134},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26451,"byte_end":26464,"line_start":40,"line_end":40,"column_start":11,"column_end":24},"name":"SignPrimitive","qualname":"::hazmat::SignPrimitive","value":"SignPrimitive<C>","parent":null,"children":[{"krate":0,"index":137}],"decl_id":null,"docs":" Try to sign the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Try to sign the given prehashed message using ECDSA.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26094,"byte_end":26150,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26151,"byte_end":26154,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on a type with access","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26155,"byte_end":26221,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ to the secret scalar via `&self`, such as particular curve's `Scalar` type,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26222,"byte_end":26301,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ or potentially a key handle to a hardware device.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26302,"byte_end":26355,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26356,"byte_end":26386,"line_start":38,"line_end":38,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27007,"byte_end":27025,"line_start":54,"line_end":54,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"::hazmat::SignPrimitive::try_sign_prehashed","value":"pub fn try_sign_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                          Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<Signature<C>, Error>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26671,"byte_end":26709,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26714,"byte_end":26717,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26722,"byte_end":26758,"line_start":49,"line_end":49,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26763,"byte_end":26766,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ - `ephemeral_scalar`: ECDSA `k` value. MUST BE UNIFORMLY RANDOM!!!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26771,"byte_end":26841,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ - `hashed_msg`: scalar computed from a hashed message digest to be signed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26846,"byte_end":26924,"line_start":52,"line_end":52,"column_start":5,"column_end":83}},{"value":"/   MUST BE OUTPUT OF A CRYPTOGRAPHICALLY SECURE DIGEST ALGORITHM!!!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":26929,"byte_end":26999,"line_start":53,"line_end":53,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":139},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27400,"byte_end":27424,"line_start":65,"line_end":65,"column_start":11,"column_end":35},"name":"RecoverableSignPrimitive","qualname":"::hazmat::RecoverableSignPrimitive","value":"RecoverableSignPrimitive<C>","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" [`SignPrimitive`] for signature implementations that can provide public key\n recovery implementation.\n","sig":null,"attributes":[{"value":"/ [`SignPrimitive`] for signature implementations that can provide public key","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27196,"byte_end":27275,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ recovery implementation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27276,"byte_end":27304,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27305,"byte_end":27335,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27963,"byte_end":27993,"line_start":78,"line_end":78,"column_start":8,"column_end":38},"name":"try_sign_recoverable_prehashed","qualname":"::hazmat::RecoverableSignPrimitive::try_sign_recoverable_prehashed","value":"pub fn try_sign_recoverable_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                                      Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<(Signature<C>, bool), Error>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27631,"byte_end":27669,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27674,"byte_end":27677,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Accepts the same arguments as [`SignPrimitive::try_sign_prehashed`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27682,"byte_end":27753,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ but returns a boolean flag which indicates whether or not the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27758,"byte_end":27823,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ y-coordinate of the computed 𝐑 = 𝑘×𝑮 point is odd, which can be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27828,"byte_end":27905,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ incorporated into recoverable signatures.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":27910,"byte_end":27955,"line_start":77,"line_end":77,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29114,"byte_end":29129,"line_start":111,"line_end":111,"column_start":11,"column_end":26},"name":"VerifyPrimitive","qualname":"::hazmat::VerifyPrimitive","value":"VerifyPrimitive<C>","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" Verify the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Verify the given prehashed message using ECDSA.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28779,"byte_end":28830,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28831,"byte_end":28834,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on type which can access","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28835,"byte_end":28904,"line_start":106,"line_end":106,"column_start":1,"column_end":70}},{"value":"/ the affine point represeting the public key via `&self`, such as a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28905,"byte_end":28975,"line_start":107,"line_end":107,"column_start":1,"column_end":71}},{"value":"/ particular curve's `AffinePoint` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28976,"byte_end":29018,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29019,"byte_end":29049,"line_start":109,"line_end":109,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29664,"byte_end":29680,"line_start":125,"line_end":125,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"::hazmat::VerifyPrimitive::verify_prehashed","value":"pub fn verify_prehashed(&Self, &Scalar<C>, &Signature<C>) -> Result<(), Error>","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Verify the prehashed message against the provided signature","sig":null,"attributes":[{"value":"/ Verify the prehashed message against the provided signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29336,"byte_end":29399,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29404,"byte_end":29407,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29412,"byte_end":29448,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29453,"byte_end":29456,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ - `verify_key`: public key to verify the signature against","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29461,"byte_end":29523,"line_start":122,"line_end":122,"column_start":5,"column_end":67}},{"value":"/ - `hashed_msg`: prehashed message to be verified","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29528,"byte_end":29580,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/ - `signature`: signature to be verified against the key and message","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29585,"byte_end":29656,"line_start":124,"line_end":124,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":155},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30356,"byte_end":30371,"line_start":144,"line_end":144,"column_start":11,"column_end":26},"name":"DigestPrimitive","qualname":"::hazmat::DigestPrimitive","value":"DigestPrimitive: Curve","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":" Bind a preferred [`Digest`] algorithm to an elliptic curve type.","sig":null,"attributes":[{"value":"/ Bind a preferred [`Digest`] algorithm to an elliptic curve type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29794,"byte_end":29862,"line_start":132,"line_end":132,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29863,"byte_end":29866,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Generally there is a preferred variety of the SHA-2 family used with ECDSA","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29867,"byte_end":29945,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ for a particular elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29946,"byte_end":29982,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29983,"byte_end":29986,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to specify it, and with it receive a blanket impl of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":29987,"byte_end":30066,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ [`PrehashSignature`], used by [`signature_derive`][1]) for the [`Signature`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30067,"byte_end":30147,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ type for a particular elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30148,"byte_end":30189,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30190,"byte_end":30193,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/RustCrypto/traits/tree/master/signature/derive","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30194,"byte_end":30268,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30269,"byte_end":30295,"line_start":142,"line_end":142,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":156},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30532,"byte_end":30538,"line_start":147,"line_end":147,"column_start":10,"column_end":16},"name":"Digest","qualname":"::hazmat::DigestPrimitive::Digest","value":"type Digest: Digest;","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Preferred digest to use when computing ECDSA signatures for this\n elliptic curve. This should be a member of the SHA-2 family.\n","sig":null,"attributes":[{"value":"/ Preferred digest to use when computing ECDSA signatures for this","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30385,"byte_end":30453,"line_start":145,"line_end":145,"column_start":5,"column_end":73}},{"value":"/ elliptic curve. This should be a member of the SHA-2 family.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30458,"byte_end":30522,"line_start":146,"line_end":146,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":160},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc6979","qualname":"::rfc6979","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225}],"decl_id":null,"docs":" Support for computing deterministic ECDSA ephemeral scalar (`k`).","sig":null,"attributes":[{"value":"cfg(feature = \"sign\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2409,"byte_end":2433,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ Support for computing deterministic ECDSA ephemeral scalar (`k`).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":30769,"byte_end":30838,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":30839,"byte_end":30842,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implementation of the algorithm described in RFC 6979 (Section 3.2):","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":30843,"byte_end":30915,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ <https://tools.ietf.org/html/rfc6979#section-3>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":30916,"byte_end":30967,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":217},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":31375,"byte_end":31385,"line_start":19,"line_end":19,"column_start":8,"column_end":18},"name":"generate_k","qualname":"::rfc6979::generate_k","value":"pub fn generate_k<C, D>(&NonZeroScalar<C>, D, &[u8])\n-> Zeroizing<NonZeroScalar<C>> where C: ProjectiveArithmetic,\nD: FixedOutput<OutputSize = C::FieldSize> + BlockInput + Clone + Default +\nReset + Update, FieldBytes<C>: From<Scalar<C>> + for<'r> From<&'r Scalar<C>>,\nScalar<C>: PrimeField<Repr = FieldBytes<C>> + FromDigest<C> + Invert<Output =\nScalar<C>> + Zeroize","parent":null,"children":[],"decl_id":null,"docs":" Generate ephemeral scalar `k` from the secret scalar and a digest of the\n input message.\n","sig":null,"attributes":[{"value":"/ Generate ephemeral scalar `k` from the secret scalar and a digest of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":31272,"byte_end":31348,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ input message.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":31349,"byte_end":31367,"line_start":18,"line_end":18,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":229},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":377}],"decl_id":null,"docs":" ECDSA signing key. Generic over elliptic curves.","sig":null,"attributes":[{"value":"cfg(feature = \"sign\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2500,"byte_end":2524,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/ ECDSA signing key. Generic over elliptic curves.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":34777,"byte_end":34829,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":34830,"byte_end":34833,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":34834,"byte_end":34915,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ [`SignPrimitive`] impl on its associated `Scalar` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":34916,"byte_end":34975,"line_start":4,"line_end":4,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36050,"byte_end":36060,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":338}],"decl_id":null,"docs":" ECDSA signing key\n","sig":null,"attributes":[{"value":"/ ECDSA signing key","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36017,"byte_end":36038,"line_start":49,"line_end":49,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36795,"byte_end":36801,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\n              RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36728,"byte_end":36783,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37006,"byte_end":37016,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey<C>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize signing key from a raw scalar serialized as a byte slice.\n","sig":null,"attributes":[{"value":"/ Initialize signing key from a raw scalar serialized as a byte slice.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36922,"byte_end":36994,"line_start":82,"line_end":82,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37351,"byte_end":37361,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"verify_key","qualname":"<SigningKey<C>>::verify_key","value":"pub fn verify_key(&Self) -> VerifyingKey<C> where AffinePoint<C>: Copy +\nClone + Debug + Default, ProjectivePoint<C>: From<AffinePoint<C>>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37185,"byte_end":37254,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"verify\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37259,"byte_end":37285,"line_start":90,"line_end":90,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37652,"byte_end":37660,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37598,"byte_end":37640,"line_start":102,"line_end":102,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":381},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"verify","qualname":"::verify","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":649},{"krate":0,"index":468},{"krate":0,"index":477},{"krate":0,"index":482},{"krate":0,"index":486},{"krate":0,"index":490},{"krate":0,"index":494},{"krate":0,"index":498},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":509}],"decl_id":null,"docs":" ECDSA verification key (i.e. public key). Generic over elliptic curves.","sig":null,"attributes":[{"value":"cfg(feature = \"verify\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2588,"byte_end":2614,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ ECDSA verification key (i.e. public key). Generic over elliptic curves.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":44205,"byte_end":44280,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":44281,"byte_end":44284,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":44285,"byte_end":44366,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ [`VerifyPrimitive`] impl on its associated `AffinePoint` type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":44367,"byte_end":44433,"line_start":4,"line_end":4,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":45204,"byte_end":45216,"line_start":35,"line_end":35,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":641}],"decl_id":null,"docs":" ECDSA verify key\n","sig":null,"attributes":[{"value":"/ ECDSA verify key","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":45142,"byte_end":45162,"line_start":33,"line_end":33,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":45964,"byte_end":45979,"line_start":56,"line_end":56,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":45889,"byte_end":45952,"line_start":55,"line_end":55,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46222,"byte_end":46240,"line_start":63,"line_end":63,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey<C>>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an [`EncodedPoint`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46153,"byte_end":46210,"line_start":62,"line_end":62,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46578,"byte_end":46594,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"to_encoded_point","qualname":"<VerifyingKey<C>>::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally\n applying point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46456,"byte_end":46530,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ applying point compression.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46535,"byte_end":46566,"line_start":70,"line_end":70,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":590},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3718,"byte_end":3731,"line_start":116,"line_end":116,"column_start":10,"column_end":23},"name":"SignatureSize","qualname":"::SignatureSize","value":"<<C as elliptic_curve::Curve>::FieldSize as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a fixed sized signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of a fixed sized signature for the given elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3643,"byte_end":3708,"line_start":115,"line_end":115,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":592},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3861,"byte_end":3875,"line_start":119,"line_end":119,"column_start":10,"column_end":24},"name":"SignatureBytes","qualname":"::SignatureBytes","value":"GenericArray<u8, SignatureSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size byte array containing an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Fixed-size byte array containing an ECDSA signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3796,"byte_end":3851,"line_start":118,"line_end":118,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4563,"byte_end":4572,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" ECDSA signatures (fixed-size).","sig":null,"attributes":[{"value":"/ ECDSA signatures (fixed-size).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3918,"byte_end":3952,"line_start":121,"line_end":121,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3953,"byte_end":3956,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Generic over elliptic curve types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3957,"byte_end":3995,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":3996,"byte_end":3999,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ These signatures are serialized as fixed-sized big endian scalar values","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4000,"byte_end":4075,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ with no additional framing:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4076,"byte_end":4107,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4108,"byte_end":4111,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - `r`: field element size for the given curve, big-endian","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4112,"byte_end":4173,"line_start":128,"line_end":128,"column_start":1,"column_end":62}},{"value":"/ - `s`: field element size for the given curve, big-endian","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4174,"byte_end":4235,"line_start":129,"line_end":129,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4236,"byte_end":4239,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ For example, in a curve with a 256-bit modulus like NIST P-256 or","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4240,"byte_end":4309,"line_start":131,"line_end":131,"column_start":1,"column_end":70}},{"value":"/ secp256k1, `r` and `s` will both be 32-bytes, resulting in a signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4310,"byte_end":4384,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ with a total of 64-bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4385,"byte_end":4414,"line_start":133,"line_end":133,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4415,"byte_end":4418,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ASN.1 is also supported via the [`Signature::from_asn1`] and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4419,"byte_end":4483,"line_start":135,"line_end":135,"column_start":1,"column_end":65}},{"value":"/ [`Signature::to_asn1`] methods.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4484,"byte_end":4519,"line_start":136,"line_end":136,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4915,"byte_end":4927,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"from_scalars","qualname":"<Signature<C>>::from_scalars","value":"pub fn from_scalars<impl Into<FieldBytes<C>>: Into<FieldBytes<C>>,\n                    impl Into<FieldBytes<C>>: Into<FieldBytes<C>>>(impl Into<FieldBytes<C>>,\n                                                                   impl Into<FieldBytes<C>>)\n-> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Signature`] from the serialized `r` and `s` scalar values\n which comprise the signature.\n","sig":null,"attributes":[{"value":"/ Create a [`Signature`] from the serialized `r` and `s` scalar values","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4793,"byte_end":4865,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ which comprise the signature.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4870,"byte_end":4903,"line_start":151,"line_end":151,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":5154,"byte_end":5163,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"from_asn1","qualname":"<Signature<C>>::from_asn1","value":"pub fn from_asn1(&[u8]) -> Result<Self, Error> where C::FieldSize: Add +\nArrayLength<u8>, asn1::MaxSize<C>: ArrayLength<u8>,\n<C::FieldSize as Add>::Output: Add<asn1::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature from ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Parse a signature from ASN.1 DER","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":5106,"byte_end":5142,"line_start":159,"line_end":159,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":5524,"byte_end":5531,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"to_asn1","qualname":"<Signature<C>>::to_asn1","value":"pub fn to_asn1(&Self) -> asn1::Signature<C> where C::FieldSize: Add +\nArrayLength<u8>, asn1::MaxSize<C>: ArrayLength<u8>,\n<C::FieldSize as Add>::Output: Add<asn1::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Serialize this signature as ASN.1 DER","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":5471,"byte_end":5512,"line_start":169,"line_end":169,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6254,"byte_end":6255,"line_start":191,"line_end":191,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature<C>>::r","value":"pub fn r(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `r` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `r` component of this signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6199,"byte_end":6242,"line_start":190,"line_end":190,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6577,"byte_end":6578,"line_start":198,"line_end":198,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature<C>>::s","value":"pub fn s(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `s` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `s` component of this signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6522,"byte_end":6565,"line_start":197,"line_end":197,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":7048,"byte_end":7059,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature<C>>::normalize_s","value":"pub fn normalize_s(&mut Self) -> Result<bool, Error> where\nScalar<C>: NormalizeLow","parent":null,"children":[],"decl_id":null,"docs":" Normalize signature into \"low S\" form as described in\n [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize signature into \"low S\" form as described in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6845,"byte_end":6902,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"/ [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6907,"byte_end":6952,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6957,"byte_end":6960,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":6965,"byte_end":7036,"line_start":207,"line_end":207,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":629},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9777,"byte_end":9796,"line_start":313,"line_end":313,"column_start":11,"column_end":30},"name":"CheckSignatureBytes","qualname":"::CheckSignatureBytes","value":"CheckSignatureBytes: Curve","parent":null,"children":[{"krate":0,"index":630}],"decl_id":null,"docs":" Ensure a signature is well-formed.\n","sig":null,"attributes":[{"value":"/ Ensure a signature is well-formed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9728,"byte_end":9766,"line_start":312,"line_end":312,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10368,"byte_end":10389,"line_start":327,"line_end":327,"column_start":8,"column_end":29},"name":"check_signature_bytes","qualname":"::CheckSignatureBytes::check_signature_bytes","value":"pub fn check_signature_bytes(&SignatureBytes<Self>) -> Result<(), Error>","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Validate that the given signature is well-formed.","sig":null,"attributes":[{"value":"/ Validate that the given signature is well-formed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9858,"byte_end":9911,"line_start":317,"line_end":317,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9916,"byte_end":9919,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This trait is auto-impl'd for curves which impl the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9924,"byte_end":9979,"line_start":319,"line_end":319,"column_start":5,"column_end":60}},{"value":"/ `elliptic_curve::ProjectiveArithmetic` trait, which validates that the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9984,"byte_end":10058,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ `r` and `s` components of the signature are in range of the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10063,"byte_end":10126,"line_start":321,"line_end":321,"column_start":5,"column_end":68}},{"value":"/ scalar field.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10131,"byte_end":10148,"line_start":322,"line_end":322,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10153,"byte_end":10156,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Note that this trait is not for verifying a signature, but allows for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10161,"byte_end":10234,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ asserting properties of it which allow infallible conversions","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10239,"byte_end":10304,"line_start":325,"line_end":325,"column_start":5,"column_end":70}},{"value":"/ (e.g. accessors for the `r` and `s` components)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10309,"byte_end":10360,"line_start":326,"line_end":326,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":636},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11885,"byte_end":11897,"line_start":368,"line_end":368,"column_start":11,"column_end":23},"name":"NormalizeLow","qualname":"::NormalizeLow","value":"NormalizeLow: Sized","parent":null,"children":[{"krate":0,"index":637}],"decl_id":null,"docs":" Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described\n in [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11670,"byte_end":11749,"line_start":364,"line_end":364,"column_start":1,"column_end":80}},{"value":"/ in [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11750,"byte_end":11798,"line_start":365,"line_end":365,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11799,"byte_end":11802,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11803,"byte_end":11874,"line_start":367,"line_end":367,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":12226,"byte_end":12239,"line_start":375,"line_end":375,"column_start":8,"column_end":21},"name":"normalize_low","qualname":"::NormalizeLow::normalize_low","value":"pub fn normalize_low(&Self) -> (Self, bool)","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Normalize scalar to the lower half of the field (i.e. negate it if it's\n larger than half the curve's order).\n Returns a tuple with the new scalar and a boolean indicating whether the given scalar\n was in the higher half.","sig":null,"attributes":[{"value":"/ Normalize scalar to the lower half of the field (i.e. negate it if it's","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11911,"byte_end":11986,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ larger than half the curve's order).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11991,"byte_end":12031,"line_start":370,"line_end":370,"column_start":5,"column_end":45}},{"value":"/ Returns a tuple with the new scalar and a boolean indicating whether the given scalar","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":12036,"byte_end":12125,"line_start":371,"line_end":371,"column_start":5,"column_end":94}},{"value":"/ was in the higher half.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":12130,"byte_end":12157,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":12162,"byte_end":12165,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ May be implemented to work in variable time.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":12170,"byte_end":12218,"line_start":374,"line_end":374,"column_start":5,"column_end":53}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":14362,"byte_end":14371,"line_start":72,"line_end":72,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":14749,"byte_end":14758,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":16833,"byte_end":16842,"line_start":153,"line_end":153,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":17101,"byte_end":17110,"line_start":165,"line_end":165,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":17514,"byte_end":17523,"line_start":180,"line_end":180,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":20134,"byte_end":20143,"line_start":262,"line_end":262,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28235,"byte_end":28236,"line_start":86,"line_end":86,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30607,"byte_end":30616,"line_start":151,"line_end":151,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":32784,"byte_end":32792,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36405,"byte_end":36415,"line_start":64,"line_end":64,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37757,"byte_end":37767,"line_start":108,"line_end":108,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":38238,"byte_end":38248,"line_start":125,"line_end":125,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":39228,"byte_end":39238,"line_start":150,"line_end":150,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":39815,"byte_end":39825,"line_start":167,"line_end":167,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":40972,"byte_end":40982,"line_start":199,"line_end":199,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":41623,"byte_end":41633,"line_start":220,"line_end":220,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":42141,"byte_end":42153,"line_start":239,"line_end":239,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":45469,"byte_end":45481,"line_start":45,"line_end":45,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46741,"byte_end":46753,"line_start":76,"line_end":76,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":47386,"byte_end":47398,"line_start":93,"line_end":93,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":47987,"byte_end":47999,"line_start":108,"line_end":108,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":48583,"byte_end":48595,"line_start":123,"line_end":123,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":48944,"byte_end":48956,"line_start":135,"line_end":135,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":49299,"byte_end":49308,"line_start":147,"line_end":147,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":49642,"byte_end":49651,"line_start":159,"line_end":159,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":49975,"byte_end":49987,"line_start":171,"line_end":171,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":50416,"byte_end":50428,"line_start":183,"line_end":183,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4693,"byte_end":4702,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":5965,"byte_end":5974,"line_start":183,"line_end":183,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":7601,"byte_end":7610,"line_start":227,"line_end":227,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":7817,"byte_end":7826,"line_start":237,"line_end":237,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8001,"byte_end":8010,"line_start":247,"line_end":247,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8178,"byte_end":8187,"line_start":255,"line_end":255,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8510,"byte_end":8519,"line_start":270,"line_end":270,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8973,"byte_end":8982,"line_start":289,"line_end":289,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10909,"byte_end":10910,"line_start":342,"line_end":342,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2223,"byte_end":2227,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2400,"byte_end":2406,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2490,"byte_end":2497,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":160}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2581,"byte_end":2585,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":229}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":2673,"byte_end":2679,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":381}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":14362,"byte_end":14371,"line_start":72,"line_end":72,"column_start":34,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":38,"index":60}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":14749,"byte_end":14758,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":16833,"byte_end":16842,"line_start":153,"line_end":153,"column_start":25,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":17101,"byte_end":17110,"line_start":165,"line_end":165,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":17514,"byte_end":17523,"line_start":180,"line_end":180,"column_start":28,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/asn1.rs","byte_start":20134,"byte_end":20143,"line_start":262,"line_end":262,"column_start":41,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":55},"to":{"krate":38,"index":63}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":28235,"byte_end":28236,"line_start":86,"line_end":86,"column_start":33,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":146},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30373,"byte_end":30378,"line_start":144,"line_end":144,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":5,"index":219},"to":{"krate":0,"index":155}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/hazmat.rs","byte_start":30607,"byte_end":30616,"line_start":151,"line_end":151,"column_start":30,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":653},"to":{"krate":38,"index":63}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/rfc6979.rs","byte_start":32784,"byte_end":32792,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":36405,"byte_end":36415,"line_start":64,"line_end":64,"column_start":9,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":37757,"byte_end":37767,"line_start":108,"line_end":108,"column_start":32,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":335},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":38238,"byte_end":38248,"line_start":125,"line_end":125,"column_start":46,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":335},"to":{"krate":38,"index":87}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":39228,"byte_end":39238,"line_start":150,"line_end":150,"column_start":45,"column_end":55},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":335},"to":{"krate":38,"index":83}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":39815,"byte_end":39825,"line_start":167,"line_end":167,"column_start":56,"column_end":66},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":335},"to":{"krate":38,"index":98}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":40972,"byte_end":40982,"line_start":199,"line_end":199,"column_start":44,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":335},"to":{"krate":38,"index":92}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":41623,"byte_end":41633,"line_start":220,"line_end":220,"column_start":36,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":335},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/sign.rs","byte_start":42141,"byte_end":42153,"line_start":239,"line_end":239,"column_start":34,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":638},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":45469,"byte_end":45481,"line_start":45,"line_end":45,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":46741,"byte_end":46753,"line_start":76,"line_end":76,"column_start":48,"column_end":60},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":638},"to":{"krate":38,"index":119}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":47386,"byte_end":47398,"line_start":93,"line_end":93,"column_start":47,"column_end":59},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":638},"to":{"krate":38,"index":116}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":47987,"byte_end":47999,"line_start":108,"line_end":108,"column_start":36,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":770},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":48583,"byte_end":48595,"line_start":123,"line_end":123,"column_start":32,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":638},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":48944,"byte_end":48956,"line_start":135,"line_end":135,"column_start":33,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":638},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":49299,"byte_end":49308,"line_start":147,"line_end":147,"column_start":35,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":854},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":49642,"byte_end":49651,"line_start":159,"line_end":159,"column_start":36,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":854},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":49975,"byte_end":49987,"line_start":171,"line_end":171,"column_start":16,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":638},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/verify.rs","byte_start":50416,"byte_end":50428,"line_start":183,"line_end":183,"column_start":23,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":638},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":4693,"byte_end":4702,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":5965,"byte_end":5974,"line_start":183,"line_end":183,"column_start":9,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":7601,"byte_end":7610,"line_start":227,"line_end":227,"column_start":34,"column_end":43},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":653},"to":{"krate":38,"index":60}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":7817,"byte_end":7826,"line_start":237,"line_end":237,"column_start":25,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8001,"byte_end":8010,"line_start":247,"line_end":247,"column_start":18,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2859}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8178,"byte_end":8187,"line_start":255,"line_end":255,"column_start":19,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8510,"byte_end":8519,"line_start":270,"line_end":270,"column_start":28,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":8973,"byte_end":8982,"line_start":289,"line_end":289,"column_start":41,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":9798,"byte_end":9803,"line_start":313,"line_end":313,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":5,"index":219},"to":{"krate":0,"index":629}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":10909,"byte_end":10910,"line_start":342,"line_end":342,"column_start":33,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":633},"to":{"krate":0,"index":629}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.10.2/src/lib.rs","byte_start":11899,"byte_end":11904,"line_start":368,"line_end":368,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":636}}]}
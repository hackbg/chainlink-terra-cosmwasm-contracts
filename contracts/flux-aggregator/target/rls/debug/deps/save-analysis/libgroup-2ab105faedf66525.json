{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","group","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2ab105faedf66525","-C","extra-filename=-2ab105faedf66525","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","ff=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libff-155f0c74f3e6dbaa.rmeta","--extern","rand_core=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/librand_core-068c259e0461f3fc.rmeta","--extern","subtle=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libsubtle-2fa1dd64c20bf922.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libgroup-2ab105faedf66525.rmeta"},"prelude":{"crate_id":{"name":"group","disambiguator":[4491951580228129931,2167256649219017635]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":4,"id":{"name":"ff","disambiguator":[2127753199578883533,6038891583446360077]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":5,"id":{"name":"bitvec","disambiguator":[12843394802284785757,18049944760944282035]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":6,"id":{"name":"radium","disambiguator":[6170578490148099913,11385662121544404573]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":7,"id":{"name":"wyz","disambiguator":[14075336805396516078,8175419829704857618]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":8,"id":{"name":"funty","disambiguator":[18100334673436176153,12213058834818999383]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":9,"id":{"name":"rand_core","disambiguator":[15262903449215184178,1965405531746979256]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":10,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":11,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":13,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":15,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":16,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":18,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":19,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":20,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":21,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":22,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":23,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":24,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":25,"id":{"name":"getrandom","disambiguator":[17970065197973694116,6812716713039249432]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[18066125678311518643,11358915899814267326]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[2521045491498281214,2123948796851982599]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","num":28,"id":{"name":"subtle","disambiguator":[13649248947348070893,10545555751276563020]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":0,"byte_end":6065,"line_start":1,"line_end":171,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":0,"byte_end":6065,"line_start":1,"line_end":171,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":102},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":173},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":191}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":65,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cofactor","qualname":"::cofactor","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":91},{"krate":0,"index":94}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6395,"byte_end":6408,"line_start":10,"line_end":10,"column_start":11,"column_end":24},"name":"CofactorGroup","qualname":"::cofactor::CofactorGroup","value":"CofactorGroup: Group + GroupEncoding + GroupOps<<Self as CofactorGroup>::Subgroup> +\nGroupOpsOwned<<Self as CofactorGroup>::Subgroup>","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" This trait represents an element of a cryptographic group with a large prime-order\n subgroup and a comparatively-small cofactor.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a cryptographic group with a large prime-order","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6249,"byte_end":6335,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ subgroup and a comparatively-small cofactor.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6336,"byte_end":6384,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6724,"byte_end":6732,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"Subgroup","qualname":"::cofactor::CofactorGroup::Subgroup","value":"type Subgroup: PrimeGroup<Scalar = Self::Scalar> + Into<Self>;","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" The large prime-order subgroup in which cryptographic operations are performed.\n If `Self` implements `PrimeGroup`, then `Self::Subgroup` may be `Self`.\n","sig":null,"attributes":[{"value":"/ The large prime-order subgroup in which cryptographic operations are performed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6551,"byte_end":6634,"line_start":16,"line_end":16,"column_start":5,"column_end":88}},{"value":"/ If `Self` implements `PrimeGroup`, then `Self::Subgroup` may be `Self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6639,"byte_end":6714,"line_start":17,"line_end":17,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7282,"byte_end":7296,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"clear_cofactor","qualname":"::cofactor::CofactorGroup::clear_cofactor","value":"pub fn clear_cofactor(&Self) -> Self::Subgroup","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Maps `self` to the prime-order subgroup by multiplying this element by some\n `k`-multiple of the cofactor.","sig":null,"attributes":[{"value":"/ Maps `self` to the prime-order subgroup by multiplying this element by some","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6787,"byte_end":6866,"line_start":20,"line_end":20,"column_start":5,"column_end":84}},{"value":"/ `k`-multiple of the cofactor.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6871,"byte_end":6904,"line_start":21,"line_end":21,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6909,"byte_end":6912,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The value `k` does not vary between inputs for a given implementation, but may","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6917,"byte_end":6999,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ vary between different implementations of `CofactorGroup` because some groups have","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7004,"byte_end":7090,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ more efficient methods of clearing the cofactor when `k` is allowed to be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7095,"byte_end":7172,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/ different than `1`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7177,"byte_end":7200,"line_start":26,"line_end":26,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7205,"byte_end":7208,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements [`PrimeGroup`], this returns `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7213,"byte_end":7274,"line_start":28,"line_end":28,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7482,"byte_end":7495,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"into_subgroup","qualname":"::cofactor::CofactorGroup::into_subgroup","value":"pub fn into_subgroup(Self) -> CtOption<Self::Subgroup>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Returns `self` if it is contained in the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Returns `self` if it is contained in the prime-order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7328,"byte_end":7394,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7399,"byte_end":7402,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements [`PrimeGroup`], this returns `Some(self)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7407,"byte_end":7474,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7733,"byte_end":7747,"line_start":41,"line_end":41,"column_start":8,"column_end":22},"name":"is_small_order","qualname":"::cofactor::CofactorGroup::is_small_order","value":"pub fn is_small_order(&Self) -> Choice","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Determines if this element is of small order.","sig":null,"attributes":[{"value":"/ Determines if this element is of small order.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7536,"byte_end":7585,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7590,"byte_end":7593,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7598,"byte_end":7610,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ - `true` if `self` is in the torsion subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7615,"byte_end":7665,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"/ - `false` if `self` is not in the torsion subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7670,"byte_end":7725,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8159,"byte_end":8174,"line_start":52,"line_end":52,"column_start":8,"column_end":23},"name":"is_torsion_free","qualname":"::cofactor::CofactorGroup::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> Choice","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Determines if this element is \"torsion free\", i.e., is contained in the\n prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determines if this element is \"torsion free\", i.e., is contained in the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7822,"byte_end":7897,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ prime-order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7902,"byte_end":7927,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7932,"byte_end":7935,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Returns:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7940,"byte_end":7952,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/ - `true` if `self` has zero torsion component and is in the prime-order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":7957,"byte_end":8042,"line_start":49,"line_end":49,"column_start":5,"column_end":90}},{"value":"/ - `false` if `self` has non-zero torsion component and is not in the prime-order","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8047,"byte_end":8131,"line_start":50,"line_end":50,"column_start":5,"column_end":89}},{"value":"/   subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8136,"byte_end":8151,"line_start":51,"line_end":51,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8764,"byte_end":8777,"line_start":71,"line_end":71,"column_start":11,"column_end":24},"name":"CofactorCurve","qualname":"::cofactor::CofactorCurve","value":"CofactorCurve: Curve<AffineRepr = <Self as CofactorCurve>::Affine> + CofactorGroup","parent":null,"children":[{"krate":0,"index":92}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8640,"byte_end":8712,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8713,"byte_end":8753,"line_start":70,"line_end":70,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8862,"byte_end":8868,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Affine","qualname":"::cofactor::CofactorCurve::Affine","value":"type Affine: CofactorCurveAffine<Curve = Self, Scalar = Self::Scalar>\n        + Mul<Self::Scalar, Output = Self>\n        + for<'r> Mul<Self::Scalar, Output = Self>;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9146,"byte_end":9165,"line_start":81,"line_end":81,"column_start":11,"column_end":30},"name":"CofactorCurveAffine","qualname":"::cofactor::CofactorCurveAffine","value":"CofactorCurveAffine: GroupEncoding + Copy + Clone + Sized + Send + Sync + fmt::Debug + PartialEq +\nEq + 'static + Neg<Output = Self> + Mul<<Self as CofactorCurveAffine>::Scalar,\nOutput = <Self as CofactorCurveAffine>::Curve> +\nfor<'r> Mul<<Self as CofactorCurveAffine>::Scalar, Output =\n<Self as CofactorCurveAffine>::Curve>","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9025,"byte_end":9094,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9095,"byte_end":9135,"line_start":80,"line_end":80,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9557,"byte_end":9563,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::cofactor::CofactorCurveAffine::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9586,"byte_end":9591,"line_start":100,"line_end":100,"column_start":10,"column_end":15},"name":"Curve","qualname":"::cofactor::CofactorCurveAffine::Curve","value":"type Curve: CofactorCurve<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9693,"byte_end":9701,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"identity","qualname":"::cofactor::CofactorCurveAffine::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9651,"byte_end":9685,"line_start":102,"line_end":102,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9776,"byte_end":9785,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"generator","qualname":"::cofactor::CofactorCurveAffine::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9718,"byte_end":9768,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9903,"byte_end":9914,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::cofactor::CofactorCurveAffine::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9802,"byte_end":9868,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9873,"byte_end":9895,"line_start":109,"line_end":109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":10000,"byte_end":10008,"line_start":113,"line_end":113,"column_start":8,"column_end":16},"name":"to_curve","qualname":"::cofactor::CofactorCurveAffine::to_curve","value":"pub fn to_curve(&Self) -> Self::Curve","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Converts this element to its curve representation.\n","sig":null,"attributes":[{"value":"/ Converts this element to its curve representation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9938,"byte_end":9992,"line_start":112,"line_end":112,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prime","qualname":"::prime","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10246,"byte_end":10256,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"PrimeGroup","qualname":"::prime::PrimeGroup","value":"PrimeGroup: Group + GroupEncoding","parent":null,"children":[],"decl_id":null,"docs":" This trait represents an element of a prime-order cryptographic group.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a prime-order cryptographic group.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10161,"byte_end":10235,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10408,"byte_end":10418,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::prime::PrimeCurve","value":"PrimeCurve: Curve<AffineRepr = <Self as PrimeCurve>::Affine> + PrimeGroup","parent":null,"children":[{"krate":0,"index":131}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10284,"byte_end":10356,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10357,"byte_end":10397,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":131},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10493,"byte_end":10499,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Affine","qualname":"::prime::PrimeCurve::Affine","value":"type Affine: PrimeCurveAffine<Curve = Self, Scalar = Self::Scalar>\n        + Mul<Self::Scalar, Output = Self>\n        + for<'r> Mul<Self::Scalar, Output = Self>;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10774,"byte_end":10790,"line_start":21,"line_end":21,"column_start":11,"column_end":27},"name":"PrimeCurveAffine","qualname":"::prime::PrimeCurveAffine","value":"PrimeCurveAffine: GroupEncoding + Copy + Clone + Sized + Send + Sync + fmt::Debug + PartialEq +\nEq + 'static + Neg<Output = Self> + Mul<<Self as PrimeCurveAffine>::Scalar,\nOutput = <Self as PrimeCurveAffine>::Curve> +\nfor<'r> Mul<<Self as PrimeCurveAffine>::Scalar, Output =\n<Self as PrimeCurveAffine>::Curve>","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Affine representation of an elliptic curve point guaranteed to be\n in the correct prime order subgroup.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point guaranteed to be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10653,"byte_end":10722,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ in the correct prime order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10723,"byte_end":10763,"line_start":20,"line_end":20,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11147,"byte_end":11153,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::prime::PrimeCurveAffine::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11176,"byte_end":11181,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"name":"Curve","qualname":"::prime::PrimeCurveAffine::Curve","value":"type Curve: PrimeCurve<Affine = Self, Scalar = Self::Scalar>;","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11280,"byte_end":11288,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"identity","qualname":"::prime::PrimeCurveAffine::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Returns the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11238,"byte_end":11272,"line_start":39,"line_end":39,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11363,"byte_end":11372,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"generator","qualname":"::prime::PrimeCurveAffine::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Returns a fixed generator of unknown exponent.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of unknown exponent.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11305,"byte_end":11355,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11490,"byte_end":11501,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::prime::PrimeCurveAffine::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Determines if this point represents the point at infinity; the\n additive identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point represents the point at infinity; the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11389,"byte_end":11455,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/ additive identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11460,"byte_end":11482,"line_start":46,"line_end":46,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11587,"byte_end":11595,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"to_curve","qualname":"::prime::PrimeCurveAffine::to_curve","value":"pub fn to_curve(&Self) -> Self::Curve","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Converts this element to its curve representation.\n","sig":null,"attributes":[{"value":"/ Converts this element to its curve representation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11525,"byte_end":11579,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":593,"byte_end":601,"line_start":27,"line_end":27,"column_start":11,"column_end":19},"name":"GroupOps","qualname":"::GroupOps","value":"GroupOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + AddAssign<Rhs> +\nSubAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for types with a group operation.\n","sig":null,"attributes":[{"value":"/ A helper trait for types with a group operation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":530,"byte_end":582,"line_start":26,"line_end":26,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":950,"byte_end":963,"line_start":38,"line_end":38,"column_start":11,"column_end":24},"name":"GroupOpsOwned","qualname":"::GroupOpsOwned","value":"GroupOpsOwned<Rhs = Self, Output = Self>: for<'r> GroupOps<&'r Rhs, Output>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for references with a group operation.\n","sig":null,"attributes":[{"value":"/ A helper trait for references with a group operation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":882,"byte_end":939,"line_start":37,"line_end":37,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1211,"byte_end":1220,"line_start":42,"line_end":42,"column_start":11,"column_end":20},"name":"ScalarMul","qualname":"::ScalarMul","value":"ScalarMul<Rhs, Output = Self>: Mul<Rhs, Output = Output> + MulAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for types implementing group scalar multiplication.\n","sig":null,"attributes":[{"value":"/ A helper trait for types implementing group scalar multiplication.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1130,"byte_end":1200,"line_start":41,"line_end":41,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":164},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1481,"byte_end":1495,"line_start":48,"line_end":48,"column_start":11,"column_end":25},"name":"ScalarMulOwned","qualname":"::ScalarMulOwned","value":"ScalarMulOwned<Rhs, Output = Self>: for<'r> ScalarMul<&'r Rhs, Output>","parent":null,"children":[],"decl_id":null,"docs":" A helper trait for references implementing group scalar multiplication.\n","sig":null,"attributes":[{"value":"/ A helper trait for references implementing group scalar multiplication.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1395,"byte_end":1470,"line_start":47,"line_end":47,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1731,"byte_end":1736,"line_start":52,"line_end":52,"column_start":11,"column_end":16},"name":"Group","qualname":"::Group","value":"Group: Clone + Copy + fmt::Debug + Eq + Sized + Send + Sync + 'static + Sum +\nfor<'a> Sum<&'a Self> + Neg<Output = Self> + GroupOps + GroupOpsOwned +\nScalarMul<<Self as Group>::Scalar> + ScalarMulOwned<<Self as Group>::Scalar>","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" This trait represents an element of a cryptographic group.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a cryptographic group.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1658,"byte_end":1720,"line_start":51,"line_end":51,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":175},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2092,"byte_end":2098,"line_start":70,"line_end":70,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::Group::Scalar","value":"type Scalar: PrimeField;","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Scalars modulo the order of this group's scalar field.\n","sig":null,"attributes":[{"value":"/ Scalars modulo the order of this group's scalar field.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2024,"byte_end":2082,"line_start":69,"line_end":69,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2320,"byte_end":2326,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"random","qualname":"::Group::random","value":"pub fn random<impl RngCore: RngCore>(impl RngCore) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random from the non-identity elements of\n this group.","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random from the non-identity elements of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2117,"byte_end":2200,"line_start":72,"line_end":72,"column_start":5,"column_end":88}},{"value":"/ this group.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2205,"byte_end":2220,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2225,"byte_end":2228,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This function is non-deterministic, and samples from the user-provided RNG.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2233,"byte_end":2312,"line_start":75,"line_end":75,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2439,"byte_end":2447,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"identity","qualname":"::Group::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Returns the additive identity, also known as the \"neutral element\".\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, also known as the \"neutral element\".","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2360,"byte_end":2431,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2530,"byte_end":2539,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"generator","qualname":"::Group::generator","value":"pub fn generator() -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Returns a fixed generator of the prime-order subgroup.\n","sig":null,"attributes":[{"value":"/ Returns a fixed generator of the prime-order subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2464,"byte_end":2522,"line_start":81,"line_end":81,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2609,"byte_end":2620,"line_start":85,"line_end":85,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::Group::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Determines if this point is the identity.\n","sig":null,"attributes":[{"value":"/ Determines if this point is the identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2556,"byte_end":2601,"line_start":84,"line_end":84,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2693,"byte_end":2699,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"double","qualname":"::Group::double","value":"pub fn double(&Self) -> Self","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2644,"byte_end":2669,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2674,"byte_end":2685,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2797,"byte_end":2802,"line_start":93,"line_end":93,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: Group + GroupOps<<Self as Curve>::AffineRepr> +\nGroupOpsOwned<<Self as Curve>::AffineRepr>","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":" Efficient representation of an elliptic curve point guaranteed.\n","sig":null,"attributes":[{"value":"/ Efficient representation of an elliptic curve point guaranteed.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2719,"byte_end":2786,"line_start":92,"line_end":92,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":183},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2969,"byte_end":2979,"line_start":97,"line_end":97,"column_start":10,"column_end":20},"name":"AffineRepr","qualname":"::Curve::AffineRepr","value":"type AffineRepr;","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" The affine representation for this elliptic curve.\n","sig":null,"attributes":[{"value":"/ The affine representation for this elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2905,"byte_end":2959,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3117,"byte_end":3132,"line_start":101,"line_end":101,"column_start":8,"column_end":23},"name":"batch_normalize","qualname":"::Curve::batch_normalize","value":"pub fn batch_normalize(&[Self], &mut [Self::AffineRepr])","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Converts a batch of projective elements into affine elements. This function will\n panic if `p.len() != q.len()`.\n","sig":null,"attributes":[{"value":"/ Converts a batch of projective elements into affine elements. This function will","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2986,"byte_end":3070,"line_start":99,"line_end":99,"column_start":5,"column_end":89}},{"value":"/ panic if `p.len() != q.len()`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3075,"byte_end":3109,"line_start":100,"line_end":100,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3383,"byte_end":3392,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"to_affine","qualname":"::Curve::to_affine","value":"pub fn to_affine(&Self) -> Self::AffineRepr","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Converts this element into its affine representation.\n","sig":null,"attributes":[{"value":"/ Converts this element into its affine representation.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3318,"byte_end":3375,"line_start":109,"line_end":109,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3434,"byte_end":3447,"line_start":113,"line_end":113,"column_start":11,"column_end":24},"name":"GroupEncoding","qualname":"::GroupEncoding","value":"GroupEncoding: Sized","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4364,"byte_end":4368,"line_start":134,"line_end":134,"column_start":10,"column_end":14},"name":"Repr","qualname":"::GroupEncoding::Repr","value":"type Repr: Default + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The encoding of group elements.","sig":null,"attributes":[{"value":"/ The encoding of group elements.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3461,"byte_end":3496,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3501,"byte_end":3504,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The `Default` implementation is not required to return a valid point encoding. The","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3509,"byte_end":3595,"line_start":116,"line_end":116,"column_start":5,"column_end":91}},{"value":"/ bound is present to enable encodings to be constructed generically:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3600,"byte_end":3671,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3676,"byte_end":3683,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # use group::GroupEncoding;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3688,"byte_end":3719,"line_start":119,"line_end":119,"column_start":5,"column_end":36}},{"value":"/ # use subtle::CtOption;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3724,"byte_end":3751,"line_start":120,"line_end":120,"column_start":5,"column_end":32}},{"value":"/ # struct G;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3756,"byte_end":3771,"line_start":121,"line_end":121,"column_start":5,"column_end":20}},{"value":"/ # impl GroupEncoding for G {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3776,"byte_end":3808,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/ #     type Repr = [u8; 0];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3813,"byte_end":3843,"line_start":123,"line_end":123,"column_start":5,"column_end":35}},{"value":"/ #     fn from_bytes(bytes: &Self::Repr) -> CtOption<Self> { unimplemented!() }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3848,"byte_end":3930,"line_start":124,"line_end":124,"column_start":5,"column_end":87}},{"value":"/ #     fn from_bytes_unchecked(bytes: &Self::Repr) -> CtOption<Self> { unimplemented!() }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3935,"byte_end":4027,"line_start":125,"line_end":125,"column_start":5,"column_end":97}},{"value":"/ #     fn to_bytes(&self) -> Self::Repr { unimplemented!() }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4032,"byte_end":4095,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4100,"byte_end":4107,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # let buf = &[0u8; 0][..];","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4112,"byte_end":4142,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ let mut encoding = <G as GroupEncoding>::Repr::default();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4147,"byte_end":4208,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"/ encoding.as_mut().copy_from_slice(buf);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4213,"byte_end":4256,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4261,"byte_end":4268,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ It is recommended that the default should be the all-zeroes encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4281,"byte_end":4354,"line_start":133,"line_end":133,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4482,"byte_end":4492,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::GroupEncoding::from_bytes","value":"pub fn from_bytes(&Self::Repr) -> CtOption<Self>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to deserialize a group element from its encoding.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize a group element from its encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4412,"byte_end":4474,"line_start":136,"line_end":136,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4835,"byte_end":4855,"line_start":144,"line_end":144,"column_start":8,"column_end":28},"name":"from_bytes_unchecked","qualname":"::GroupEncoding::from_bytes_unchecked","value":"pub fn from_bytes_unchecked(&Self::Repr) -> CtOption<Self>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to deserialize a group element, not checking if the element is valid.","sig":null,"attributes":[{"value":"/ Attempts to deserialize a group element, not checking if the element is valid.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4537,"byte_end":4619,"line_start":139,"line_end":139,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4624,"byte_end":4627,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ **This is dangerous to call unless you trust the bytes you are reading; otherwise,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4632,"byte_end":4718,"line_start":141,"line_end":141,"column_start":5,"column_end":91}},{"value":"/ API invariants may be broken.** Please consider using","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4723,"byte_end":4780,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ [`GroupEncoding::from_bytes`] instead.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4785,"byte_end":4827,"line_start":143,"line_end":143,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5085,"byte_end":5093,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::GroupEncoding::to_bytes","value":"pub fn to_bytes(&Self) -> Self::Repr","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Converts this element into its byte encoding. This may or may not support\n encoding the identity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its byte encoding. This may or may not support","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4900,"byte_end":4977,"line_start":146,"line_end":146,"column_start":5,"column_end":82}},{"value":"/ encoding the identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":4982,"byte_end":5008,"line_start":147,"line_end":147,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":191},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5233,"byte_end":5253,"line_start":154,"line_end":154,"column_start":11,"column_end":31},"name":"UncompressedEncoding","qualname":"::UncompressedEncoding","value":"UncompressedEncoding: Sized","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":" Affine representation of a point on an elliptic curve that has a defined uncompressed\n encoding.\n","sig":null,"attributes":[{"value":"/ Affine representation of a point on an elliptic curve that has a defined uncompressed","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5119,"byte_end":5208,"line_start":152,"line_end":152,"column_start":1,"column_end":90}},{"value":"/ encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5209,"byte_end":5222,"line_start":153,"line_end":153,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5272,"byte_end":5284,"line_start":155,"line_end":155,"column_start":10,"column_end":22},"name":"Uncompressed","qualname":"::UncompressedEncoding::Uncompressed","value":"type Uncompressed: Default + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5406,"byte_end":5423,"line_start":158,"line_end":158,"column_start":8,"column_end":25},"name":"from_uncompressed","qualname":"::UncompressedEncoding::from_uncompressed","value":"pub fn from_uncompressed(&Self::Uncompressed) -> CtOption<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Attempts to deserialize an element from its uncompressed encoding.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize an element from its uncompressed encoding.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5328,"byte_end":5398,"line_start":157,"line_end":157,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5822,"byte_end":5849,"line_start":166,"line_end":166,"column_start":8,"column_end":35},"name":"from_uncompressed_unchecked","qualname":"::UncompressedEncoding::from_uncompressed_unchecked","value":"pub fn from_uncompressed_unchecked(&Self::Uncompressed) -> CtOption<Self>","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Attempts to deserialize an uncompressed element, not checking if the element is in\n the correct subgroup.","sig":null,"attributes":[{"value":"/ Attempts to deserialize an uncompressed element, not checking if the element is in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5476,"byte_end":5562,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"/ the correct subgroup.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5567,"byte_end":5592,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5597,"byte_end":5600,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ **This is dangerous to call unless you trust the bytes you are reading; otherwise,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5605,"byte_end":5691,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ API invariants may be broken.** Please consider using","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5696,"byte_end":5753,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"/ [`UncompressedEncoding::from_uncompressed`] instead.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5758,"byte_end":5814,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":6018,"byte_end":6033,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"to_uncompressed","qualname":"::UncompressedEncoding::to_uncompressed","value":"pub fn to_uncompressed(&Self) -> Self::Uncompressed","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Converts this element into its uncompressed encoding, so long as it's not\n the point at infinity.\n","sig":null,"attributes":[{"value":"/ Converts this element into its uncompressed encoding, so long as it's not","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5902,"byte_end":5979,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ the point at infinity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5984,"byte_end":6010,"line_start":169,"line_end":169,"column_start":5,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":774,"byte_end":775,"line_start":32,"line_end":32,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1081,"byte_end":1082,"line_start":39,"line_end":39,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1337,"byte_end":1338,"line_start":44,"line_end":44,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1608,"byte_end":1609,"line_start":49,"line_end":49,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":361,"byte_end":369,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":379,"byte_end":384,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":102}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6414,"byte_end":6419,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6426,"byte_end":6439,"line_start":12,"line_end":12,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6446,"byte_end":6454,"line_start":13,"line_end":13,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":141},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":6496,"byte_end":6509,"line_start":14,"line_end":14,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":148},"to":{"krate":0,"index":85}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8783,"byte_end":8788,"line_start":72,"line_end":72,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":182},"to":{"krate":0,"index":91}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":8837,"byte_end":8850,"line_start":72,"line_end":72,"column_start":59,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":85},"to":{"krate":0,"index":91}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9171,"byte_end":9184,"line_start":82,"line_end":82,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9191,"byte_end":9195,"line_start":83,"line_end":83,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2859},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9202,"byte_end":9207,"line_start":84,"line_end":84,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2470},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9214,"byte_end":9219,"line_start":85,"line_end":85,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9226,"byte_end":9230,"line_start":86,"line_end":86,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2849},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9237,"byte_end":9241,"line_start":87,"line_end":87,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2861},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9253,"byte_end":9258,"line_start":88,"line_end":88,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8894},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9265,"byte_end":9274,"line_start":89,"line_end":89,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2500},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9281,"byte_end":9283,"line_start":90,"line_end":90,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2505},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9304,"byte_end":9307,"line_start":92,"line_end":92,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2943},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9329,"byte_end":9332,"line_start":93,"line_end":93,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2926},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/cofactor.rs","byte_start":9433,"byte_end":9436,"line_start":94,"line_end":94,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2926},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10258,"byte_end":10263,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10266,"byte_end":10279,"line_start":9,"line_end":9,"column_start":31,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10420,"byte_end":10425,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":182},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10471,"byte_end":10481,"line_start":13,"line_end":13,"column_start":74,"column_end":84},"kind":"SuperTrait","from":{"krate":0,"index":129},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10796,"byte_end":10809,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10816,"byte_end":10820,"line_start":23,"line_end":23,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2859},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10827,"byte_end":10832,"line_start":24,"line_end":24,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2470},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10839,"byte_end":10844,"line_start":25,"line_end":25,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10851,"byte_end":10855,"line_start":26,"line_end":26,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2849},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10862,"byte_end":10866,"line_start":27,"line_end":27,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2861},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10878,"byte_end":10883,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8894},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10890,"byte_end":10899,"line_start":29,"line_end":29,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2500},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10906,"byte_end":10908,"line_start":30,"line_end":30,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2505},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10929,"byte_end":10932,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2943},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":10954,"byte_end":10957,"line_start":33,"line_end":33,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2926},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/prime.rs","byte_start":11052,"byte_end":11055,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2926},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":634,"byte_end":637,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2916},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":662,"byte_end":665,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2921},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":690,"byte_end":699,"line_start":28,"line_end":28,"column_start":61,"column_end":70},"kind":"SuperTrait","from":{"krate":1,"index":2947},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":707,"byte_end":716,"line_start":28,"line_end":28,"column_start":78,"column_end":87},"kind":"SuperTrait","from":{"krate":1,"index":2951},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":774,"byte_end":775,"line_start":32,"line_end":32,"column_start":48,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1000,"byte_end":1008,"line_start":38,"line_end":38,"column_start":61,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":141},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1081,"byte_end":1082,"line_start":39,"line_end":39,"column_start":53,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1242,"byte_end":1245,"line_start":42,"line_end":42,"column_start":42,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":2926},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1270,"byte_end":1279,"line_start":42,"line_end":42,"column_start":70,"column_end":79},"kind":"SuperTrait","from":{"krate":1,"index":2955},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1337,"byte_end":1338,"line_start":44,"line_end":44,"column_start":49,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":161},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1525,"byte_end":1534,"line_start":48,"line_end":48,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":157},"to":{"krate":0,"index":164}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1608,"byte_end":1609,"line_start":49,"line_end":49,"column_start":54,"column_end":55},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":169},"to":{"krate":0,"index":164}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1742,"byte_end":1747,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2470},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1754,"byte_end":1758,"line_start":54,"line_end":54,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2859},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1770,"byte_end":1775,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8894},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1782,"byte_end":1784,"line_start":56,"line_end":56,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2505},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1791,"byte_end":1796,"line_start":57,"line_end":57,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1803,"byte_end":1807,"line_start":58,"line_end":58,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2849},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1814,"byte_end":1818,"line_start":59,"line_end":59,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2861},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1839,"byte_end":1842,"line_start":61,"line_end":61,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":7113},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1857,"byte_end":1860,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":7113},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1877,"byte_end":1880,"line_start":63,"line_end":63,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2943},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1902,"byte_end":1910,"line_start":64,"line_end":64,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":141},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1917,"byte_end":1930,"line_start":65,"line_end":65,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":148},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1937,"byte_end":1946,"line_start":66,"line_end":66,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":157},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":1978,"byte_end":1992,"line_start":67,"line_end":67,"column_start":7,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":164},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2808,"byte_end":2813,"line_start":94,"line_end":94,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2816,"byte_end":2824,"line_start":94,"line_end":94,"column_start":13,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":141},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":2856,"byte_end":2869,"line_start":94,"line_end":94,"column_start":53,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":148},"to":{"krate":0,"index":182}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":3449,"byte_end":3454,"line_start":113,"line_end":113,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/group-0.8.0/src/lib.rs","byte_start":5255,"byte_end":5260,"line_start":154,"line_end":154,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2854},"to":{"krate":0,"index":191}}]}
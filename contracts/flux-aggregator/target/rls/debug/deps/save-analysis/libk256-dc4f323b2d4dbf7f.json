{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","k256","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"arithmetic\"","--cfg","feature=\"default\"","--cfg","feature=\"digest\"","--cfg","feature=\"ecdsa\"","--cfg","feature=\"ecdsa-core\"","--cfg","feature=\"pkcs8\"","--cfg","feature=\"sha2\"","--cfg","feature=\"sha256\"","--cfg","feature=\"std\"","--cfg","feature=\"zeroize\"","-C","metadata=dc4f323b2d4dbf7f","-C","extra-filename=-dc4f323b2d4dbf7f","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--extern","cfg_if=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libcfg_if-621b92c8c202d759.rmeta","--extern","ecdsa_core=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libecdsa-0f8d8963953ac37e.rmeta","--extern","elliptic_curve=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libelliptic_curve-cdfe387bbc3609d9.rmeta","--extern","sha2=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libsha2-4378464efee549b8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libk256-dc4f323b2d4dbf7f.rmeta"},"prelude":{"crate_id":{"name":"k256","disambiguator":[7991146506723395621,13662542764480845641]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":4,"id":{"name":"elliptic_curve","disambiguator":[12962610352709599449,1092650790515722109]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":5,"id":{"name":"alloc","disambiguator":[4001252548733048619,17242313319436819942]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":6,"id":{"name":"std","disambiguator":[10283585399922801530,3113815793436671734]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":7,"id":{"name":"libc","disambiguator":[5352780060018682353,5212160423076132458]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":8,"id":{"name":"unwind","disambiguator":[17147711338457548981,6939542792032145917]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":9,"id":{"name":"cfg_if","disambiguator":[2842547253401849104,13491194742958542480]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":10,"id":{"name":"hashbrown","disambiguator":[743652736616489669,1287960927584068912]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16292678807852148020,5791869870655771082]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9404817637945341771,5464406936793117880]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":13,"id":{"name":"std_detect","disambiguator":[17888196348013287212,15275907588461469564]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":14,"id":{"name":"addr2line","disambiguator":[1276787031323089283,14926302036319710225]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":15,"id":{"name":"gimli","disambiguator":[3988411805964943353,12607049771423756955]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":16,"id":{"name":"object","disambiguator":[2565427104194196404,14362732384292144629]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[11025534897254923617,14932093111515565771]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":18,"id":{"name":"adler","disambiguator":[6421578182970509025,18151391361782090522]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[6900026989174100552,1126691905217298232]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":20,"id":{"name":"subtle","disambiguator":[13649248947348070893,10545555751276563020]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":21,"id":{"name":"generic_array","disambiguator":[2843115902605017426,8992412963017954804]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":22,"id":{"name":"typenum","disambiguator":[15595204929548488895,11009855742131221505]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":23,"id":{"name":"zeroize","disambiguator":[4196693835647716122,2424233725925652009]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":24,"id":{"name":"ff","disambiguator":[2127753199578883533,6038891583446360077]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":25,"id":{"name":"bitvec","disambiguator":[12843394802284785757,18049944760944282035]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":26,"id":{"name":"radium","disambiguator":[6170578490148099913,11385662121544404573]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":27,"id":{"name":"wyz","disambiguator":[14075336805396516078,8175419829704857618]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":28,"id":{"name":"funty","disambiguator":[18100334673436176153,12213058834818999383]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":29,"id":{"name":"rand_core","disambiguator":[15262903449215184178,1965405531746979256]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":30,"id":{"name":"getrandom","disambiguator":[17970065197973694116,6812716713039249432]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","num":31,"id":{"name":"cfg_if","disambiguator":[18066125678311518643,11358915899814267326]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":32,"id":{"name":"libc","disambiguator":[2521045491498281214,2123948796851982599]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":33,"id":{"name":"group","disambiguator":[4491951580228129931,2167256649219017635]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":34,"id":{"name":"pkcs8","disambiguator":[4005606756325313909,11473494331770028794]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":35,"id":{"name":"der","disambiguator":[6620283982502722200,2601874819529451539]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":36,"id":{"name":"const_oid","disambiguator":[16652256300093258142,3482606670295155140]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","num":37,"id":{"name":"digest","disambiguator":[11815551155626523553,13150518862568951459]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","num":38,"id":{"name":"ecdsa","disambiguator":[10095924235346771483,13530389282245231814]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","num":39,"id":{"name":"signature","disambiguator":[11852001358081360889,258583192709905972]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","num":40,"id":{"name":"hmac","disambiguator":[14461085160494243860,6945854892547497893]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","num":41,"id":{"name":"crypto_mac","disambiguator":[18287248403066418544,2337432805662306154]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","num":42,"id":{"name":"sha2","disambiguator":[4845292581609176579,17354008811375486299]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","num":43,"id":{"name":"block_buffer","disambiguator":[7300277867098391491,9789664017212379998]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","num":44,"id":{"name":"opaque_debug","disambiguator":[12244708370773904289,12878298131593829713]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","num":45,"id":{"name":"cpufeatures","disambiguator":[11584142461511734604,9220515001620625460]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":0,"byte_end":5062,"line_start":1,"line_end":149,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":39,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81525,"byte_end":81534,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":635}},{"kind":"Use","ref_id":{"krate":39,"index":128},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81543,"byte_end":81548,"line_start":76,"line_end":76,"column_start":39,"column_end":44},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":635}},{"kind":"Use","ref_id":{"krate":37,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81610,"byte_end":81616,"line_start":79,"line_end":79,"column_start":32,"column_end":38},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":635}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81666,"byte_end":81676,"line_start":82,"line_end":82,"column_start":22,"column_end":32},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":635}},{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81686,"byte_end":81698,"line_start":82,"line_end":82,"column_start":42,"column_end":54},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":635}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2430,"byte_end":2444,"line_start":67,"line_end":67,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2512,"byte_end":2523,"line_start":71,"line_end":71,"column_start":13,"column_end":24},"alias_span":null,"name":"AffinePoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2541,"byte_end":2556,"line_start":72,"line_end":72,"column_start":17,"column_end":32},"alias_span":null,"name":"ProjectivePoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2571,"byte_end":2584,"line_start":73,"line_end":73,"column_start":14,"column_end":27},"alias_span":null,"name":"NonZeroScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1378},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2586,"byte_end":2592,"line_start":73,"line_end":73,"column_start":29,"column_end":35},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2594,"byte_end":2604,"line_start":73,"line_end":73,"column_start":37,"column_end":47},"alias_span":null,"name":"ScalarBits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2778,"byte_end":2783,"line_start":81,"line_end":81,"column_start":25,"column_end":30},"alias_span":null,"name":"pkcs8","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":0,"byte_end":5062,"line_start":1,"line_end":149,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":635},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"decl_id":null,"docs":" Pure Rust implementation of the [secp256k1] (K-256) elliptic curve,\n including support for the\n [Elliptic Curve Digital Signature Algorithm (ECDSA)][ECDSA],\n [Elliptic Curve Diffie-Hellman (ECDH)][ECDH], and general purpose\n elliptic curve/field arithmetic which can be used to implement\n protocols based on group operations.","sig":null,"attributes":[{"value":"/ Pure Rust implementation of the [secp256k1] (K-256) elliptic curve,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ including support for the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":72,"byte_end":101,"line_start":2,"line_end":2,"column_start":1,"column_end":30}},{"value":"/ [Elliptic Curve Digital Signature Algorithm (ECDSA)][ECDSA],","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":102,"byte_end":166,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ [Elliptic Curve Diffie-Hellman (ECDH)][ECDH], and general purpose","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":167,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ elliptic curve/field arithmetic which can be used to implement","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":237,"byte_end":303,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/ protocols based on group operations.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":304,"byte_end":344,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":345,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## About secp256k1 (K-256)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":349,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":380,"byte_end":383,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ secp256k1 is a Koblitz curve commonly used in cryptocurrency applications.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":384,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ The \"K-256\" name follows NIST notation where P = prime fields,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":463,"byte_end":529,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ B = binary fields, and K = Koblitz curves (defined over F₂).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":530,"byte_end":596,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":597,"byte_end":600,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The curve is specified as `secp256k1` by Certicom's SECG in","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":601,"byte_end":664,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ \"SEC 2: Recommended Elliptic Curve Domain Parameters\":","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":665,"byte_end":723,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":724,"byte_end":727,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec2-v2.pdf>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":728,"byte_end":766,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":767,"byte_end":770,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## ⚠️ Security Warning","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":771,"byte_end":801,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":802,"byte_end":805,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The elliptic curve arithmetic contained in this crate has never been","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":806,"byte_end":878,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ independently audited!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":879,"byte_end":905,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":906,"byte_end":909,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This crate has been designed with the goal of ensuring that secret-dependent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":910,"byte_end":990,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ operations are performed in constant time (using the `subtle` crate and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":991,"byte_end":1066,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ constant-time formulas). However, it has not been thoroughly assessed to ensure","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1067,"byte_end":1150,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/ that generated assembly is constant time on common CPU architectures.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1151,"byte_end":1224,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1225,"byte_end":1228,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ USE AT YOUR OWN RISK!","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1229,"byte_end":1254,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1255,"byte_end":1258,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1259,"byte_end":1296,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1297,"byte_end":1300,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Rust **1.46** or higher.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1301,"byte_end":1329,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1330,"byte_end":1333,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Minimum supported Rust version may be changed in the future, but it will be","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1334,"byte_end":1413,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ accompanied with a minor version bump.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1414,"byte_end":1456,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1457,"byte_end":1460,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [secp256k1]: https://en.bitcoin.it/wiki/Secp256k1","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1461,"byte_end":1514,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ [ECDSA]: https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1515,"byte_end":1600,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ [ECDH]: https://en.wikipedia.org/wiki/Elliptic-curve_Diffie%E2%80%93Hellman","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1601,"byte_end":1680,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"no_std","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1682,"byte_end":1692,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1973,"byte_end":1996,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":1997,"byte_end":2060,"line_start":50,"line_end":50,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":6885,"byte_end":6896,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"AffinePoint","qualname":"::arithmetic::affine::AffinePoint","value":"AffinePoint {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"decl_id":null,"docs":" A point on the secp256k1 curve in affine coordinates.\n","sig":null,"attributes":[{"value":"/ A point on the secp256k1 curve in affine coordinates.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":6732,"byte_end":6789,"line_start":16,"line_end":16,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":7074,"byte_end":7083,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"generator","qualname":"<AffinePoint>::generator","value":"pub fn generator() -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the base point of SECP256k1.\n","sig":null,"attributes":[{"value":"/ Returns the base point of SECP256k1.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":7022,"byte_end":7062,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8140,"byte_end":8148,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"identity","qualname":"<AffinePoint>::identity","value":"pub fn identity() -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the identity of the group: the point at infinity.\n","sig":null,"attributes":[{"value":"/ Returns the identity of the group: the point at infinity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8067,"byte_end":8128,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8366,"byte_end":8377,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<AffinePoint>::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this point the identity point?\n","sig":null,"attributes":[{"value":"/ Is this point the identity point?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8317,"byte_end":8354,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16179,"byte_end":16191,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"FieldElement","qualname":"::arithmetic::field::FieldElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" An element in the finite field used for curve coordinates.\n","sig":null,"attributes":[{"value":"/ An element in the finite field used for curve coordinates.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16075,"byte_end":16137,"line_start":42,"line_end":42,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16283,"byte_end":16287,"line_start":48,"line_end":48,"column_start":18,"column_end":22},"name":"zero","qualname":"<FieldElement>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero element.\n","sig":null,"attributes":[{"value":"/ Returns the zero element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16236,"byte_end":16265,"line_start":47,"line_end":47,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16408,"byte_end":16411,"line_start":53,"line_end":53,"column_start":18,"column_end":21},"name":"one","qualname":"<FieldElement>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16350,"byte_end":16390,"line_start":52,"line_end":52,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16638,"byte_end":16645,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement10x26` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement10x26` is zero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16473,"byte_end":16523,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16528,"byte_end":16531,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16536,"byte_end":16549,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16554,"byte_end":16557,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16562,"byte_end":16626,"line_start":61,"line_end":61,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16901,"byte_end":16907,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<FieldElement>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement10x26` is odd in the SEC1 sense: `self mod 2 == 1`.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement10x26` is odd in the SEC1 sense: `self mod 2 == 1`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16701,"byte_end":16787,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16792,"byte_end":16795,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16800,"byte_end":16813,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16818,"byte_end":16821,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16826,"byte_end":16889,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17451,"byte_end":17461,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement>::from_bytes","value":"pub fn from_bytes(&FieldBytes) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse the given byte array as an SEC1-encoded field element.","sig":null,"attributes":[{"value":"/ Attempts to parse the given byte array as an SEC1-encoded field element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17249,"byte_end":17325,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17330,"byte_end":17333,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns None if the byte array does not contain a big-endian integer in the range","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17338,"byte_end":17423,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ [0, p).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17428,"byte_end":17439,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17631,"byte_end":17639,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this field element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17567,"byte_end":17619,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17878,"byte_end":17884,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement>::negate","value":"pub fn negate(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns -self, treating it as a value of given magnitude.\n The provided magnitude must be equal or greater than the actual magnitude of `self`.\n","sig":null,"attributes":[{"value":"/ Returns -self, treating it as a value of given magnitude.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17712,"byte_end":17773,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ The provided magnitude must be equal or greater than the actual magnitude of `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17778,"byte_end":17866,"line_start":95,"line_end":95,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18083,"byte_end":18092,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"normalize","qualname":"<FieldElement>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fully normalizes the field element.\n Brings the magnitude to 1 and modulo reduces the value.\n","sig":null,"attributes":[{"value":"/ Fully normalizes the field element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":17968,"byte_end":18007,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/ Brings the magnitude to 1 and modulo reduces the value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18012,"byte_end":18071,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18303,"byte_end":18317,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<FieldElement>::normalize_weak","value":"pub fn normalize_weak(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalizes the field element.\n Brings the magnitude to 1, but does not guarantee the value to be less than the modulus.\n","sig":null,"attributes":[{"value":"/ Weakly normalizes the field element.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18154,"byte_end":18194,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/ Brings the magnitude to 1, but does not guarantee the value to be less than the modulus.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18199,"byte_end":18291,"line_start":107,"line_end":107,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18455,"byte_end":18473,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<FieldElement>::normalizes_to_zero","value":"pub fn normalizes_to_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Checks if the field element becomes zero if normalized.\n","sig":null,"attributes":[{"value":"/ Checks if the field element becomes zero if normalized.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18384,"byte_end":18443,"line_start":112,"line_end":112,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18644,"byte_end":18654,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"mul_single","qualname":"<FieldElement>::mul_single","value":"pub fn mul_single(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies by a single-limb integer.\n Multiplies the magnitude by the same value.\n","sig":null,"attributes":[{"value":"/ Multiplies by a single-limb integer.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18540,"byte_end":18580,"line_start":117,"line_end":117,"column_start":5,"column_end":45}},{"value":"/ Multiplies the magnitude by the same value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18585,"byte_end":18632,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18792,"byte_end":18798,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"double","qualname":"<FieldElement>::double","value":"pub fn double(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns 2*self.\n Doubles the magnitude.\n","sig":null,"attributes":[{"value":"/ Returns 2*self.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18730,"byte_end":18749,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"/ Doubles the magnitude.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18754,"byte_end":18780,"line_start":124,"line_end":124,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19025,"byte_end":19028,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"mul","qualname":"<FieldElement>::mul","value":"pub fn mul(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self * rhs mod p\n Brings the magnitude to 1 (but doesn't normalize the result).\n The magnitudes of arguments should be <= 8.\n","sig":null,"attributes":[{"value":"/ Returns self * rhs mod p","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18863,"byte_end":18891,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ Brings the magnitude to 1 (but doesn't normalize the result).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18896,"byte_end":18961,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/ The magnitudes of arguments should be <= 8.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":18966,"byte_end":19013,"line_start":131,"line_end":131,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19261,"byte_end":19267,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement>::square","value":"pub fn square(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self * self\n Brings the magnitude to 1 (but doesn't normalize the result).\n The magnitudes of arguments should be <= 8.\n","sig":null,"attributes":[{"value":"/ Returns self * self","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19104,"byte_end":19127,"line_start":136,"line_end":136,"column_start":5,"column_end":28}},{"value":"/ Brings the magnitude to 1 (but doesn't normalize the result).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19132,"byte_end":19197,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/ The magnitudes of arguments should be <= 8.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19202,"byte_end":19249,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19657,"byte_end":19663,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of self, if self is non-zero.\n The result has magnitude 1, but is not normalized.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of self, if self is non-zero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19518,"byte_end":19586,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ The result has magnitude 1, but is not normalized.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":19591,"byte_end":19645,"line_start":153,"line_end":153,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":20897,"byte_end":20901,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<FieldElement>::sqrt","value":"pub fn sqrt(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the square root of self mod p, or `None` if no square root exists.\n The result has magnitude 1, but is not normalized.\n","sig":null,"attributes":[{"value":"/ Returns the square root of self mod p, or `None` if no square root exists.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":20748,"byte_end":20826,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/ The result has magnitude 1, but is not normalized.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":20831,"byte_end":20885,"line_start":186,"line_end":186,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":41697,"byte_end":41712,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::arithmetic::projective::ProjectivePoint","value":"ProjectivePoint {  }","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230}],"decl_id":null,"docs":" A point on the secp256k1 curve in projective coordinates.\n","sig":null,"attributes":[{"value":"/ A point on the secp256k1 curve in projective coordinates.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":41540,"byte_end":41601,"line_start":30,"line_end":30,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":43111,"byte_end":43119,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"name":"identity","qualname":"<ProjectivePoint>::identity","value":"pub const fn identity() -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity of SECP256k1, also known as the \"neutral element\" or\n \"point at infinity\".\n","sig":null,"attributes":[{"value":"/ Returns the additive identity of SECP256k1, also known as the \"neutral element\" or","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42978,"byte_end":43064,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ \"point at infinity\".","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":43069,"byte_end":43093,"line_start":82,"line_end":82,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":43352,"byte_end":43361,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"generator","qualname":"<ProjectivePoint>::generator","value":"pub fn generator() -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the base point of SECP256k1.\n","sig":null,"attributes":[{"value":"/ Returns the base point of SECP256k1.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":43300,"byte_end":43340,"line_start":91,"line_end":91,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":43533,"byte_end":43542,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"to_affine","qualname":"<ProjectivePoint>::to_affine","value":"pub fn to_affine(&Self) -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the affine representation of this point, or `None` if it is the identity.\n","sig":null,"attributes":[{"value":"/ Returns the affine representation of this point, or `None` if it is the identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":43436,"byte_end":43521,"line_start":96,"line_end":96,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":47127,"byte_end":47133,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Doubles this point.\n","sig":null,"attributes":[{"value":"/ Doubles this point.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":47078,"byte_end":47101,"line_start":196,"line_end":196,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":47106,"byte_end":47115,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":48540,"byte_end":48552,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"endomorphism","qualname":"<ProjectivePoint>::endomorphism","value":"pub fn endomorphism(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates SECP256k1 endomorphism: `self * lambda`.\n","sig":null,"attributes":[{"value":"/ Calculates SECP256k1 endomorphism: `self * lambda`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":48473,"byte_end":48528,"line_start":240,"line_end":240,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1354},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198496,"byte_end":11198506,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"Scalar4x64","qualname":"::arithmetic::scalar::scalar_4x64::Scalar4x64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A scalar with arithmetic modulo curve order, represented as 4 64-bit limbs (little-endian).\n","sig":null,"attributes":[{"value":"/ A scalar with arithmetic modulo curve order, represented as 4 64-bit limbs (little-endian).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198296,"byte_end":11198391,"line_start":140,"line_end":140,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198587,"byte_end":11198591,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"zero","qualname":"<Scalar4x64>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero scalar.\n","sig":null,"attributes":[{"value":"/ Returns the zero scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198541,"byte_end":11198569,"line_start":146,"line_end":146,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198700,"byte_end":11198703,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"name":"one","qualname":"<Scalar4x64>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198642,"byte_end":11198682,"line_start":151,"line_end":151,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198843,"byte_end":11198858,"line_start":157,"line_end":157,"column_start":12,"column_end":27},"name":"truncate_to_u32","qualname":"<Scalar4x64>::truncate_to_u32","value":"pub fn truncate_to_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Truncates the scalar to a `u32` value. All the higher bits are discarded.\n","sig":null,"attributes":[{"value":"/ Truncates the scalar to a `u32` value. All the higher bits are discarded.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198754,"byte_end":11198831,"line_start":156,"line_end":156,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200323,"byte_end":11200333,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Scalar4x64>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse the given byte array as an SEC1-encoded scalar.","sig":null,"attributes":[{"value":"/ Attempts to parse the given byte array as an SEC1-encoded scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200122,"byte_end":11200191,"line_start":178,"line_end":178,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200196,"byte_end":11200199,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Returns None if the byte array does not contain a big-endian integer in the range","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200204,"byte_end":11200289,"line_start":180,"line_end":180,"column_start":5,"column_end":90}},{"value":"/ [0, modulus).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200294,"byte_end":11200311,"line_start":181,"line_end":181,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11201079,"byte_end":11201097,"line_start":198,"line_end":198,"column_start":12,"column_end":30},"name":"from_bytes_reduced","qualname":"<Scalar4x64>::from_bytes_reduced","value":"pub fn from_bytes_reduced(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the given byte array as a scalar.","sig":null,"attributes":[{"value":"/ Parses the given byte array as a scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200937,"byte_end":11200981,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200986,"byte_end":11200989,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Subtracts the modulus when the byte array is larger than the modulus.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11200994,"byte_end":11201067,"line_start":197,"line_end":197,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11201761,"byte_end":11201769,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar4x64>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this scalar.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11201704,"byte_end":11201749,"line_start":211,"line_end":211,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202172,"byte_end":11202179,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar4x64>::is_high","value":"pub fn is_high(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202110,"byte_end":11202160,"line_start":221,"line_end":221,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202354,"byte_end":11202361,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar4x64>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this scalar equal to 0?\n","sig":null,"attributes":[{"value":"/ Is this scalar equal to 0?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202312,"byte_end":11202342,"line_start":227,"line_end":227,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202550,"byte_end":11202556,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Scalar4x64>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.\n","sig":null,"attributes":[{"value":"/ If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202475,"byte_end":11202538,"line_start":232,"line_end":232,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202659,"byte_end":11202665,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"negate","qualname":"<Scalar4x64>::negate","value":"pub fn negate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates the scalar.\n","sig":null,"attributes":[{"value":"/ Negates the scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202624,"byte_end":11202647,"line_start":237,"line_end":237,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202858,"byte_end":11202861,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"add","qualname":"<Scalar4x64>::add","value":"pub fn add(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sums two scalars.\n","sig":null,"attributes":[{"value":"/ Sums two scalars.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11202825,"byte_end":11202846,"line_start":243,"line_end":243,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11203176,"byte_end":11203179,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"sub","qualname":"<Scalar4x64>::sub","value":"pub fn sub(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtracts one scalar from the other.\n","sig":null,"attributes":[{"value":"/ Subtracts one scalar from the other.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11203124,"byte_end":11203164,"line_start":250,"line_end":250,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11205305,"byte_end":11205308,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"mul","qualname":"<Scalar4x64>::mul","value":"pub fn mul(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two scalars.\n","sig":null,"attributes":[{"value":"/ Multiplies two scalars.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11205266,"byte_end":11205293,"line_start":295,"line_end":295,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11205953,"byte_end":11205959,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"rshift","qualname":"<Scalar4x64>::rshift","value":"pub fn rshift(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Right shifts a scalar by given number of bits.\n Constant time in the scalar argument, but not in the shift argument.\n","sig":null,"attributes":[{"value":"/ Right shifts a scalar by given number of bits.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11205814,"byte_end":11205864,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/ Constant time in the scalar argument, but not in the shift argument.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11205869,"byte_end":11205941,"line_start":310,"line_end":310,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11206821,"byte_end":11206840,"line_start":341,"line_end":341,"column_start":12,"column_end":31},"name":"conditional_add_bit","qualname":"<Scalar4x64>::conditional_add_bit","value":"pub fn conditional_add_bit(&Self, usize, Choice) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11207394,"byte_end":11207407,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"mul_shift_var","qualname":"<Scalar4x64>::mul_shift_var","value":"pub fn mul_shift_var(&Self, &Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":497},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59388,"byte_end":59401,"line_start":38,"line_end":38,"column_start":10,"column_end":23},"name":"NonZeroScalar","qualname":"::arithmetic::scalar::NonZeroScalar","value":"elliptic_curve::scalar::NonZeroScalar<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" Non-zero scalar value.\n","sig":null,"attributes":[{"value":"/ Non-zero scalar value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59352,"byte_end":59378,"line_start":37,"line_end":37,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":498},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59512,"byte_end":59522,"line_start":41,"line_end":41,"column_start":10,"column_end":20},"name":"ScalarBits","qualname":"::arithmetic::scalar::ScalarBits","value":"elliptic_curve::scalar::ScalarBits<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 field element serialized as bits.\n","sig":null,"attributes":[{"value":"/ secp256k1 field element serialized as bits.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59455,"byte_end":59502,"line_start":40,"line_end":40,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1378},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59732,"byte_end":59738,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::arithmetic::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" An element in the finite field modulo curve order.\n","sig":null,"attributes":[{"value":"/ An element in the finite field modulo curve order.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59573,"byte_end":59627,"line_start":43,"line_end":43,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62603,"byte_end":62607,"line_start":161,"line_end":161,"column_start":18,"column_end":22},"name":"zero","qualname":"<Scalar>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero scalar.\n","sig":null,"attributes":[{"value":"/ Returns the zero scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62557,"byte_end":62585,"line_start":160,"line_end":160,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62722,"byte_end":62725,"line_start":166,"line_end":166,"column_start":18,"column_end":21},"name":"one","qualname":"<Scalar>::one","value":"pub const fn one() -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62664,"byte_end":62704,"line_start":165,"line_end":165,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62828,"byte_end":62835,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Checks if the scalar is zero.\n","sig":null,"attributes":[{"value":"/ Checks if the scalar is zero.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62783,"byte_end":62816,"line_start":170,"line_end":170,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62978,"byte_end":62993,"line_start":176,"line_end":176,"column_start":12,"column_end":27},"name":"truncate_to_u32","qualname":"<Scalar>::truncate_to_u32","value":"pub fn truncate_to_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the scalar truncated to a 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Returns the value of the scalar truncated to a 32-bit unsigned integer.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62891,"byte_end":62966,"line_start":175,"line_end":175,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63456,"byte_end":63474,"line_start":189,"line_end":189,"column_start":12,"column_end":30},"name":"from_bytes_reduced","qualname":"<Scalar>::from_bytes_reduced","value":"pub fn from_bytes_reduced(&FieldBytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the given byte array as a scalar.","sig":null,"attributes":[{"value":"/ Parses the given byte array as a scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63314,"byte_end":63358,"line_start":186,"line_end":186,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63363,"byte_end":63366,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Subtracts the modulus when the byte array is larger than the modulus.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63371,"byte_end":63444,"line_start":188,"line_end":188,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63634,"byte_end":63642,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this scalar.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63577,"byte_end":63622,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63765,"byte_end":63772,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar>::is_high","value":"pub fn is_high(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63703,"byte_end":63753,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63863,"byte_end":63869,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"negate","qualname":"<Scalar>::negate","value":"pub fn negate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates the scalar.\n","sig":null,"attributes":[{"value":"/ Negates the scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63828,"byte_end":63851,"line_start":203,"line_end":203,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63967,"byte_end":63970,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"add","qualname":"<Scalar>::add","value":"pub fn add(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo adds two scalars\n","sig":null,"attributes":[{"value":"/ Modulo adds two scalars","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":63928,"byte_end":63955,"line_start":208,"line_end":208,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64109,"byte_end":64112,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"sub","qualname":"<Scalar>::sub","value":"pub fn sub(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo subtracts one scalar from the other.\n","sig":null,"attributes":[{"value":"/ Modulo subtracts one scalar from the other.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64050,"byte_end":64097,"line_start":213,"line_end":213,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64238,"byte_end":64241,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"mul","qualname":"<Scalar>::mul","value":"pub fn mul(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo multiplies two scalars.\n","sig":null,"attributes":[{"value":"/ Modulo multiplies two scalars.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64192,"byte_end":64226,"line_start":218,"line_end":218,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64363,"byte_end":64369,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"square","qualname":"<Scalar>::square","value":"pub fn square(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modulo squares the scalar.\n","sig":null,"attributes":[{"value":"/ Modulo squares the scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64321,"byte_end":64351,"line_start":223,"line_end":223,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64498,"byte_end":64504,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"rshift","qualname":"<Scalar>::rshift","value":"pub fn rshift(&Self, usize) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Right shifts the scalar. Note: not constant-time in `shift`.\n","sig":null,"attributes":[{"value":"/ Right shifts the scalar. Note: not constant-time in `shift`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64422,"byte_end":64486,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64811,"byte_end":64817,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the scalar.\n","sig":null,"attributes":[{"value":"/ Inverts the scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":64776,"byte_end":64799,"line_start":242,"line_end":242,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":66764,"byte_end":66779,"line_start":301,"line_end":301,"column_start":12,"column_end":27},"name":"generate_biased","qualname":"<Scalar>::generate_biased","value":"pub fn generate_biased<impl CryptoRng + RngCore: CryptoRng +\n                       RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a (nearly) uniformly-random scalar, generated in constant time.\n","sig":null,"attributes":[{"value":"/ Returns a (nearly) uniformly-random scalar, generated in constant time.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":66677,"byte_end":66752,"line_start":300,"line_end":300,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":67291,"byte_end":67307,"line_start":311,"line_end":311,"column_start":12,"column_end":28},"name":"generate_vartime","qualname":"<Scalar>::generate_vartime","value":"pub fn generate_vartime<impl RngCore: RngCore>(impl RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a uniformly-random scalar, generated using rejection sampling.\n","sig":null,"attributes":[{"value":"/ Returns a uniformly-random scalar, generated using rejection sampling.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":67138,"byte_end":67212,"line_start":309,"line_end":309,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":67748,"byte_end":67767,"line_start":324,"line_end":324,"column_start":12,"column_end":31},"name":"conditional_add_bit","qualname":"<Scalar>::conditional_add_bit","value":"pub fn conditional_add_bit(&Self, usize, Choice) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `flag` evaluates to `true`, adds `(1 << bit)` to `self`.\n","sig":null,"attributes":[{"value":"/ If `flag` evaluates to `true`, adds `(1 << bit)` to `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":67673,"byte_end":67736,"line_start":323,"line_end":323,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68049,"byte_end":68062,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"mul_shift_var","qualname":"<Scalar>::mul_shift_var","value":"pub fn mul_shift_var(&Self, &Scalar, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies `self` by `b` (without modulo reduction) divide the result by `2^shift`\n (rounding to the nearest integer).\n Variable time in `shift`.\n","sig":null,"attributes":[{"value":"/ Multiplies `self` by `b` (without modulo reduction) divide the result by `2^shift`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":67874,"byte_end":67960,"line_start":328,"line_end":328,"column_start":5,"column_end":91}},{"value":"/ (rounding to the nearest integer).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":67965,"byte_end":68003,"line_start":329,"line_end":329,"column_start":5,"column_end":43}},{"value":"/ Variable time in `shift`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68008,"byte_end":68037,"line_start":330,"line_end":330,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":635},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":737},{"krate":0,"index":746},{"krate":0,"index":899},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1030}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA).","sig":null,"attributes":[{"value":"cfg(feature = \"ecdsa-core\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2198,"byte_end":2228,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78435,"byte_end":78490,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78491,"byte_end":78494,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains support for computing and verifying ECDSA signatures.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78495,"byte_end":78573,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ To use it, you will need to enable one of the two following Cargo features:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78574,"byte_end":78653,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78654,"byte_end":78657,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `ecdsa-core`: provides only the [`Signature`] type (which represents an","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78658,"byte_end":78735,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   ECDSA/secp256k1 signature). Does not require the `arithmetic` feature.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78736,"byte_end":78812,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/   This is useful for 3rd-party crates which wish to use the `Signature`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78813,"byte_end":78888,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/   type for interoperability purposes (particularly in conjunction with the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78889,"byte_end":78967,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/   [`signature::Signer`] trait). Example use cases for this include other","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":78968,"byte_end":79044,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/   software implementations of ECDSA/secp256k1 and wrappers for cloud KMS","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79045,"byte_end":79121,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/   services or hardware devices (HSM or crypto hardware wallet).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79122,"byte_end":79189,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ - `ecdsa`: provides `ecdsa-core` features plus the [`SigningKey`] and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79190,"byte_end":79263,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   [`VerifyingKey`] types which natively implement ECDSA/secp256k1 signing and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79264,"byte_end":79345,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/   verification.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79346,"byte_end":79365,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79366,"byte_end":79369,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Additionally, this crate contains support for computing ECDSA signatures","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79370,"byte_end":79446,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ using either the SHA-256 (standard) or Keccak-256 (Ethereum) digest","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79447,"byte_end":79518,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ functions, which are gated under the following Cargo features:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79519,"byte_end":79585,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79586,"byte_end":79589,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `sha256`: compute signatures using NIST's standard SHA-256 digest","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79590,"byte_end":79661,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/   function. Unless you are computing signatures for Ethereum, this is","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79662,"byte_end":79735,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   almost certainly what you want.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79736,"byte_end":79773,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/ - `keccak256`: compute signatures using the Keccak-256 digest function,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79774,"byte_end":79849,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/   an incompatible variant of the SHA-3 algorithm used exclusively by","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79850,"byte_end":79922,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/   Ethereum.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79923,"byte_end":79938,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79939,"byte_end":79942,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Most users of this library who want to sign/verify signatures will want to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":79943,"byte_end":80021,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ enable the `ecdsa` and `sha256` Cargo features.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80022,"byte_end":80073,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80074,"byte_end":80077,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Ethereum Support","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80078,"byte_end":80101,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80102,"byte_end":80105,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This crate natively supports Ethereum-style recoverable signatures.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80106,"byte_end":80177,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ Please see the toplevel documentation of the [`recoverable`] module","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80178,"byte_end":80249,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ for more information.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80250,"byte_end":80275,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80276,"byte_end":80279,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Signing/Verification Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80280,"byte_end":80315,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80316,"byte_end":80319,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This example requires the `ecdsa` and `sha256` Cargo features are enabled:","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80320,"byte_end":80398,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80399,"byte_end":80402,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80403,"byte_end":80410,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"ecdsa\", feature = \"sha256\"))]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80411,"byte_end":80467,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/ # {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80468,"byte_end":80475,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use k256::{","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80476,"byte_end":80491,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     ecdsa::{SigningKey, Signature, signature::Signer},","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80492,"byte_end":80550,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/     SecretKey,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80551,"byte_end":80569,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80570,"byte_end":80576,"line_start":47,"line_end":47,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80577,"byte_end":80634,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80635,"byte_end":80638,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Signing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80639,"byte_end":80653,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // Serialize with `::to_bytes()`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80654,"byte_end":80740,"line_start":51,"line_end":51,"column_start":1,"column_end":87}},{"value":"/ let message = b\"ECDSA proves knowledge of a secret number in the context of a single message\";","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80741,"byte_end":80839,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80840,"byte_end":80843,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Note: the signature type must be annotated or otherwise inferrable as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80844,"byte_end":80920,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ // `Signer` has many impls of the `Signer` trait (for both regular and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80921,"byte_end":80995,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ // recoverable signature types).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":80996,"byte_end":81032,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/ let signature: Signature = signing_key.sign(message);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81033,"byte_end":81090,"line_start":57,"line_end":57,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81091,"byte_end":81094,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Verification","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81095,"byte_end":81114,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ use k256::{EncodedPoint, ecdsa::{VerifyingKey, signature::Verifier}};","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81115,"byte_end":81188,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81189,"byte_end":81192,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let verify_key = VerifyingKey::from(&signing_key); // Serialize with `::to_encoded_point()`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81193,"byte_end":81288,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ assert!(verify_key.verify(message, &signature).is_ok());","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81289,"byte_end":81349,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81350,"byte_end":81357,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81358,"byte_end":81365,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":636},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"recoverable","qualname":"::ecdsa::recoverable","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":702},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735}],"decl_id":null,"docs":" Ethereum-style \"recoverable signatures\".","sig":null,"attributes":[{"value":"/ Ethereum-style \"recoverable signatures\".","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":82808,"byte_end":82852,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":82853,"byte_end":82856,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These signatures include an additional [`Id`] field which allows for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":82857,"byte_end":82929,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ recovery of the [`VerifyingKey`] which can be used to verify them.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":82930,"byte_end":83000,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83001,"byte_end":83004,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is helpful in cases where a hash/fingerprint of a [`VerifyingKey`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83005,"byte_end":83080,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ for a given signature in known in advance.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83081,"byte_end":83127,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83128,"byte_end":83131,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Signing/Recovery Example","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83132,"byte_end":83163,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83164,"byte_end":83167,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ NOTE: make sure to enable both the `ecdsa` and `keccak256` features of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83168,"byte_end":83242,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ this crate for the example to work.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83243,"byte_end":83282,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83283,"byte_end":83286,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83287,"byte_end":83294,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"ecdsa\", feature = \"keccak256\"))]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83295,"byte_end":83354,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/ # {","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83355,"byte_end":83362,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use k256::{","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83363,"byte_end":83378,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     ecdsa::{SigningKey, recoverable, signature::Signer},","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83379,"byte_end":83439,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/     EncodedPoint","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83440,"byte_end":83460,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83461,"byte_end":83467,"line_start":20,"line_end":20,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83468,"byte_end":83525,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83526,"byte_end":83529,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Signing","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83530,"byte_end":83544,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // Serialize with `::to_bytes()`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83545,"byte_end":83631,"line_start":24,"line_end":24,"column_start":1,"column_end":87}},{"value":"/ let verify_key = signing_key.verify_key();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83632,"byte_end":83678,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ let message = b\"ECDSA proves knowledge of a secret number in the context of a single message\";","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83679,"byte_end":83777,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83778,"byte_end":83781,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Note: the signature type must be annotated or otherwise inferrable as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83782,"byte_end":83858,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ // `Signer` has many impls of the `Signer` trait (for both regular and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83859,"byte_end":83933,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ // recoverable signature types).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83934,"byte_end":83970,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ let signature: recoverable::Signature = signing_key.sign(message);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":83971,"byte_end":84041,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ let recovered_key = signature.recover_verify_key(message).expect(\"couldn't recover pubkey\");","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84042,"byte_end":84138,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84139,"byte_end":84142,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&verify_key, &recovered_key);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84143,"byte_end":84187,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84188,"byte_end":84195,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84196,"byte_end":84203,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":701},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84775,"byte_end":84779,"line_start":58,"line_end":58,"column_start":11,"column_end":15},"name":"SIZE","qualname":"::ecdsa::recoverable::SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of an Ethereum-style recoverable signature in bytes\n","sig":null,"attributes":[{"value":"/ Size of an Ethereum-style recoverable signature in bytes","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84704,"byte_end":84764,"line_start":57,"line_end":57,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85186,"byte_end":85195,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::recoverable::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":1399}],"decl_id":null,"docs":" Ethereum-style \"recoverable signatures\" which allow for the recovery of\n the signer's [`VerifyingKey`] from the signature itself.","sig":null,"attributes":[{"value":"/ Ethereum-style \"recoverable signatures\" which allow for the recovery of","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84794,"byte_end":84869,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ the signer's [`VerifyingKey`] from the signature itself.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84870,"byte_end":84930,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84931,"byte_end":84934,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This format consists of [`Signature`] followed by a 1-byte recovery [`Id`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":84935,"byte_end":85013,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ (65-bytes total):","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85014,"byte_end":85035,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85036,"byte_end":85039,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ - `r`: 32-byte integer, big endian","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85040,"byte_end":85078,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/ - `s`: 32-byte integer, big endian","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85079,"byte_end":85117,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ - `v`: 1-byte recovery [`Id`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85118,"byte_end":85151,"line_start":68,"line_end":68,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85509,"byte_end":85512,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"pub fn new(&super::Signature, Id) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new recoverable ECDSA/secp256k1 signature from a regular\n fixed-size signature and an associated recovery [`Id`].","sig":null,"attributes":[{"value":"/ Create a new recoverable ECDSA/secp256k1 signature from a regular","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85245,"byte_end":85314,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ fixed-size signature and an associated recovery [`Id`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85319,"byte_end":85378,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85383,"byte_end":85386,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is an \"unchecked\" conversion and assumes the provided [`Id`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85391,"byte_end":85460,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ is valid for this signature.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85465,"byte_end":85497,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85887,"byte_end":85898,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"recovery_id","qualname":"<Signature>::recovery_id","value":"pub fn recovery_id(Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Get the recovery [`Id`] for this signature\n","sig":null,"attributes":[{"value":"/ Get the recovery [`Id`] for this signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85829,"byte_end":85875,"line_start":90,"line_end":90,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":86999,"byte_end":87025,"line_start":118,"line_end":118,"column_start":12,"column_end":38},"name":"from_digest_trial_recovery","qualname":"<Signature>::from_digest_trial_recovery","value":"pub fn from_digest_trial_recovery<D>(&VerifyingKey, D, &super::Signature)\n-> Result<Self, Error> where D: Clone + Digest<OutputSize = U32>","parent":null,"children":[],"decl_id":null,"docs":" Given a public key, message digest, and signature, use trial recovery\n to determine if a suitable recovery ID exists, or return an error\n otherwise.\n","sig":null,"attributes":[{"value":"/ Given a public key, message digest, and signature, use trial recovery","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":86738,"byte_end":86811,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ to determine if a suitable recovery ID exists, or return an error","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":86816,"byte_end":86885,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ otherwise.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":86890,"byte_end":86904,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":86909,"byte_end":86934,"line_start":116,"line_end":116,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88542,"byte_end":88572,"line_start":159,"line_end":159,"column_start":12,"column_end":42},"name":"recover_verify_key_from_digest","qualname":"<Signature>::recover_verify_key_from_digest","value":"pub fn recover_verify_key_from_digest<D>(&Self, D)\n-> Result<VerifyingKey, Error> where D: Digest<OutputSize = U32>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`] from the provided precomputed [`Digest`].\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88314,"byte_end":88380,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`] from the provided precomputed [`Digest`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88385,"byte_end":88447,"line_start":156,"line_end":156,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88452,"byte_end":88477,"line_start":157,"line_end":157,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":89054,"byte_end":89090,"line_start":171,"line_end":171,"column_start":12,"column_end":48},"name":"recover_verify_key_from_digest_bytes","qualname":"<Signature>::recover_verify_key_from_digest_bytes","value":"pub fn recover_verify_key_from_digest_bytes(&Self, &FieldBytes)\n-> Result<VerifyingKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`] from the raw bytes of a message digest.\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88767,"byte_end":88833,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`] from the raw bytes of a message digest.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88838,"byte_end":88898,"line_start":167,"line_end":167,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88903,"byte_end":88928,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"allow(non_snake_case, clippy :: many_single_char_names)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":88986,"byte_end":89042,"line_start":170,"line_end":170,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":89996,"byte_end":89997,"line_start":197,"line_end":197,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature>::r","value":"pub fn r(&Self) -> NonZeroScalar","parent":null,"children":[],"decl_id":null,"docs":" Parse the `r` component of this signature to a [`NonZeroScalar`]\n","sig":null,"attributes":[{"value":"/ Parse the `r` component of this signature to a [`NonZeroScalar`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":89833,"byte_end":89901,"line_start":194,"line_end":194,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":89906,"byte_end":89931,"line_start":195,"line_end":195,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90371,"byte_end":90372,"line_start":205,"line_end":205,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature>::s","value":"pub fn s(&Self) -> NonZeroScalar","parent":null,"children":[],"decl_id":null,"docs":" Parse the `s` component of this signature to a [`NonZeroScalar`]\n","sig":null,"attributes":[{"value":"/ Parse the `s` component of this signature to a [`NonZeroScalar`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90208,"byte_end":90276,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90281,"byte_end":90306,"line_start":203,"line_end":203,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1405},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92553,"byte_end":92555,"line_start":276,"line_end":276,"column_start":12,"column_end":14},"name":"Id","qualname":"::ecdsa::recoverable::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier used to compute a [`VerifyingKey`] from a [`Signature`].","sig":null,"attributes":[{"value":"/ Identifier used to compute a [`VerifyingKey`] from a [`Signature`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91923,"byte_end":91994,"line_start":264,"line_end":264,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91995,"byte_end":91998,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ In practice these values are always either `0` or `1`, and indicate","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91999,"byte_end":92070,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"/ whether or not the y-coordinate of the original [`VerifyingKey`] is odd.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92071,"byte_end":92147,"line_start":267,"line_end":267,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92148,"byte_end":92151,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ While values `2` and `3` are also defined to capture whether `r`","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92152,"byte_end":92220,"line_start":269,"line_end":269,"column_start":1,"column_end":69}},{"value":"/ overflowed the curve's order, this crate does *not* support them.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92221,"byte_end":92290,"line_start":270,"line_end":270,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92291,"byte_end":92294,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ There is a vanishingly small chance of these values occurring outside","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92295,"byte_end":92368,"line_start":272,"line_end":272,"column_start":1,"column_end":74}},{"value":"/ of contrived examples, so for simplicity's sake handling these values","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92369,"byte_end":92442,"line_start":273,"line_end":273,"column_start":1,"column_end":74}},{"value":"/ is unsupported and will return an `Error` when parsing the `Id`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92443,"byte_end":92511,"line_start":274,"line_end":274,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92648,"byte_end":92651,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<Id>::new","value":"pub fn new(u8) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Id`] from the given byte value\n","sig":null,"attributes":[{"value":"/ Create a new [`Id`] from the given byte value","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92587,"byte_end":92636,"line_start":279,"line_end":279,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":97940,"byte_end":97950,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::ecdsa::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":847}],"decl_id":null,"docs":" ECDSA/secp256k1 signing key\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signing key","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":97848,"byte_end":97879,"line_start":28,"line_end":28,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98098,"byte_end":98104,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\n              RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98031,"byte_end":98086,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98304,"byte_end":98314,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`SigningKey`] from a raw scalar value (big endian).\n","sig":null,"attributes":[{"value":"/ Initialize [`SigningKey`] from a raw scalar value (big endian).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98225,"byte_end":98292,"line_start":43,"line_end":43,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98564,"byte_end":98574,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"verify_key","qualname":"<SigningKey>::verify_key","value":"pub fn verify_key(&Self) -> VerifyingKey","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98483,"byte_end":98552,"line_start":50,"line_end":50,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98774,"byte_end":98782,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98720,"byte_end":98762,"line_start":57,"line_end":57,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1413},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":105685,"byte_end":105697,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::ecdsa::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":1414}],"decl_id":null,"docs":" ECDSA/secp256k1 verification key (i.e. public key)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 verification key (i.e. public key)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":105531,"byte_end":105585,"line_start":22,"line_end":22,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":105891,"byte_end":105906,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":105816,"byte_end":105879,"line_start":31,"line_end":31,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106191,"byte_end":106209,"line_start":38,"line_end":38,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1 [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1 [`EncodedPoint`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106053,"byte_end":106114,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106507,"byte_end":106515,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<VerifyingKey>::to_bytes","value":"pub fn to_bytes(&Self) -> CompressedPoint","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1-encoded bytestring\n (with point compression applied)\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1-encoded bytestring","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106390,"byte_end":106454,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ (with point compression applied)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106459,"byte_end":106495,"line_start":44,"line_end":44,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81905,"byte_end":81914,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Signature","qualname":"::ecdsa::Signature","value":"ecdsa_core::Signature<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" ECDSA/secp256k1 signature (fixed-size)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signature (fixed-size)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81853,"byte_end":81895,"line_start":91,"line_end":91,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":82011,"byte_end":82024,"line_start":95,"line_end":95,"column_start":10,"column_end":23},"name":"Asn1Signature","qualname":"::ecdsa::Asn1Signature","value":"ecdsa_core::asn1::Signature<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" ECDSA/secp256k1 signature (ASN.1 DER encoded)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signature (ASN.1 DER encoded)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81952,"byte_end":82001,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3326,"byte_end":3335,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"","parent":null,"children":[],"decl_id":null,"docs":" K-256 (secp256k1) elliptic curve.","sig":null,"attributes":[{"value":"/ K-256 (secp256k1) elliptic curve.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2820,"byte_end":2857,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2858,"byte_end":2861,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Specified in Certicom's SECG in \"SEC 2: Recommended Elliptic Curve Domain Parameters\":","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2862,"byte_end":2952,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2953,"byte_end":2956,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec2-v2.pdf>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2957,"byte_end":2995,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2996,"byte_end":2999,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The curve's equation is `y² = x³ + 7` over a ~256-bit prime field.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3000,"byte_end":3072,"line_start":91,"line_end":91,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3073,"byte_end":3076,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ It's primarily notable for usage in Bitcoin and other cryptocurrencies,","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3077,"byte_end":3152,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ particularly in conjunction with the Elliptic Curve Digital Signature","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3153,"byte_end":3226,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/ Algorithm (ECDSA).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3227,"byte_end":3249,"line_start":95,"line_end":95,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1064},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3897,"byte_end":3912,"line_start":117,"line_end":117,"column_start":10,"column_end":25},"name":"CompressedPoint","qualname":"::CompressedPoint","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Compressed SEC1-encoded secp256k1 (K-256) point.\n","sig":null,"attributes":[{"value":"/ Compressed SEC1-encoded secp256k1 (K-256) point.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3835,"byte_end":3887,"line_start":116,"line_end":116,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4079,"byte_end":4089,"line_start":122,"line_end":122,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"elliptic_curve::FieldBytes<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) field element serialized as bytes.","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) field element serialized as bytes.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3926,"byte_end":3982,"line_start":119,"line_end":119,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3983,"byte_end":3986,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Byte array containing a serialized field element value (base field or scalar).","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3987,"byte_end":4069,"line_start":121,"line_end":121,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":1067},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4189,"byte_end":4201,"line_start":125,"line_end":125,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::EncodedPoint","value":"elliptic_curve::sec1::EncodedPoint<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" SEC1-encoded secp256k1 (K-256) curve point.\n","sig":null,"attributes":[{"value":"/ SEC1-encoded secp256k1 (K-256) curve point.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4132,"byte_end":4179,"line_start":124,"line_end":124,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1068},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4326,"byte_end":4335,"line_start":129,"line_end":129,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::PublicKey","value":"elliptic_curve::PublicKey<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) public key.\n","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) public key.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4252,"byte_end":4285,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4286,"byte_end":4316,"line_start":128,"line_end":128,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1069},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4499,"byte_end":4508,"line_start":134,"line_end":134,"column_start":10,"column_end":19},"name":"SecretKey","qualname":"::SecretKey","value":"elliptic_curve::SecretKey<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) secret key.\n","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) secret key.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4377,"byte_end":4410,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"zeroize\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4411,"byte_end":4438,"line_start":132,"line_end":132,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1070},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4686,"byte_end":4697,"line_start":139,"line_end":139,"column_start":10,"column_end":21},"name":"SecretBytes","qualname":"::SecretBytes","value":"elliptic_curve::secret_key::SecretBytes<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" Bytes containing a secp256k1 secret scalar.\n","sig":null,"attributes":[{"value":"/ Bytes containing a secp256k1 secret scalar.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4550,"byte_end":4597,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"zeroize\")","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":4598,"byte_end":4625,"line_start":137,"line_end":137,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":7004,"byte_end":7015,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8461,"byte_end":8472,"line_start":63,"line_end":63,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8855,"byte_end":8866,"line_start":73,"line_end":73,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9123,"byte_end":9134,"line_start":81,"line_end":81,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9217,"byte_end":9228,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9333,"byte_end":9344,"line_start":93,"line_end":93,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9380,"byte_end":9391,"line_start":95,"line_end":95,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":10083,"byte_end":10094,"line_start":118,"line_end":118,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":11461,"byte_end":11472,"line_start":153,"line_end":153,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":11859,"byte_end":11871,"line_start":167,"line_end":167,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":12072,"byte_end":12083,"line_start":174,"line_end":174,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":12258,"byte_end":12269,"line_start":182,"line_end":182,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":12535,"byte_end":12546,"line_start":195,"line_end":195,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11169887,"byte_end":11169903,"line_start":18,"line_end":18,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11186353,"byte_end":11186369,"line_start":458,"line_end":458,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11186462,"byte_end":11186478,"line_start":464,"line_end":464,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11187006,"byte_end":11187022,"line_start":480,"line_end":480,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11187334,"byte_end":11187350,"line_start":491,"line_end":491,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11188278,"byte_end":11188294,"line_start":27,"line_end":27,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11191461,"byte_end":11191477,"line_start":132,"line_end":132,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11191570,"byte_end":11191586,"line_start":138,"line_end":138,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11192279,"byte_end":11192295,"line_start":156,"line_end":156,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11192623,"byte_end":11192639,"line_start":166,"line_end":166,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16217,"byte_end":16229,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":22666,"byte_end":22678,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":22788,"byte_end":22800,"line_start":236,"line_end":236,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":22893,"byte_end":22905,"line_start":242,"line_end":242,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23088,"byte_end":23100,"line_start":248,"line_end":248,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23407,"byte_end":23419,"line_start":262,"line_end":262,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23599,"byte_end":23611,"line_start":270,"line_end":270,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23919,"byte_end":23931,"line_start":284,"line_end":284,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":24111,"byte_end":24123,"line_start":292,"line_end":292,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":24260,"byte_end":24272,"line_start":299,"line_end":299,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":35560,"byte_end":35571,"line_start":75,"line_end":75,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":35771,"byte_end":35782,"line_start":85,"line_end":85,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":39934,"byte_end":39949,"line_start":206,"line_end":206,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":40282,"byte_end":40297,"line_start":222,"line_end":222,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":40461,"byte_end":40476,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":40602,"byte_end":40617,"line_start":236,"line_end":236,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":41481,"byte_end":41490,"line_start":26,"line_end":26,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":41808,"byte_end":41823,"line_start":39,"line_end":39,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42117,"byte_end":42132,"line_start":50,"line_end":50,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42309,"byte_end":42324,"line_start":56,"line_end":56,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42675,"byte_end":42690,"line_start":66,"line_end":66,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42818,"byte_end":42833,"line_start":72,"line_end":72,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42931,"byte_end":42946,"line_start":78,"line_end":78,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42956,"byte_end":42971,"line_start":80,"line_end":80,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":48709,"byte_end":48724,"line_start":250,"line_end":250,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49197,"byte_end":49212,"line_start":275,"line_end":275,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49359,"byte_end":49374,"line_start":283,"line_end":283,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49668,"byte_end":49683,"line_start":297,"line_end":297,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49868,"byte_end":49883,"line_start":305,"line_end":305,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50073,"byte_end":50088,"line_start":313,"line_end":313,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50240,"byte_end":50255,"line_start":319,"line_end":319,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50396,"byte_end":50411,"line_start":325,"line_end":325,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50792,"byte_end":50807,"line_start":341,"line_end":341,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50995,"byte_end":51010,"line_start":349,"line_end":349,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51160,"byte_end":51175,"line_start":355,"line_end":355,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51305,"byte_end":51320,"line_start":361,"line_end":361,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51487,"byte_end":51502,"line_start":367,"line_end":367,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51643,"byte_end":51658,"line_start":373,"line_end":373,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52043,"byte_end":52058,"line_start":389,"line_end":389,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52248,"byte_end":52263,"line_start":397,"line_end":397,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52415,"byte_end":52430,"line_start":403,"line_end":403,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52571,"byte_end":52586,"line_start":409,"line_end":409,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52967,"byte_end":52982,"line_start":425,"line_end":425,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":53170,"byte_end":53185,"line_start":433,"line_end":433,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":53335,"byte_end":53350,"line_start":439,"line_end":439,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":53480,"byte_end":53495,"line_start":445,"line_end":445,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198524,"byte_end":11198534,"line_start":145,"line_end":145,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208641,"byte_end":11208651,"line_start":390,"line_end":390,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208744,"byte_end":11208754,"line_start":396,"line_end":396,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208855,"byte_end":11208865,"line_start":402,"line_end":402,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208973,"byte_end":11208983,"line_start":408,"line_end":408,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11209154,"byte_end":11209164,"line_start":414,"line_end":414,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11209414,"byte_end":11209424,"line_start":423,"line_end":423,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11209590,"byte_end":11209604,"line_start":432,"line_end":432,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59768,"byte_end":59774,"line_start":48,"line_end":48,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":60980,"byte_end":60986,"line_start":94,"line_end":94,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":1388},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62356,"byte_end":62362,"line_start":147,"line_end":147,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62457,"byte_end":62463,"line_start":153,"line_end":153,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62544,"byte_end":62550,"line_start":159,"line_end":159,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68273,"byte_end":68279,"line_start":338,"line_end":338,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68551,"byte_end":68557,"line_start":349,"line_end":349,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68837,"byte_end":68843,"line_start":365,"line_end":365,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69020,"byte_end":69026,"line_start":371,"line_end":371,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69136,"byte_end":69142,"line_start":377,"line_end":377,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69240,"byte_end":69246,"line_start":383,"line_end":383,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69264,"byte_end":69270,"line_start":385,"line_end":385,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69491,"byte_end":69497,"line_start":401,"line_end":401,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69928,"byte_end":69934,"line_start":425,"line_end":425,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70079,"byte_end":70085,"line_start":433,"line_end":433,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70210,"byte_end":70216,"line_start":439,"line_end":439,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70335,"byte_end":70341,"line_start":445,"line_end":445,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70627,"byte_end":70633,"line_start":461,"line_end":461,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70778,"byte_end":70784,"line_start":469,"line_end":469,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70909,"byte_end":70915,"line_start":475,"line_end":475,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71033,"byte_end":71039,"line_start":481,"line_end":481,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71325,"byte_end":71331,"line_start":497,"line_end":497,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71476,"byte_end":71482,"line_start":505,"line_end":505,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71607,"byte_end":71613,"line_start":511,"line_end":511,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71733,"byte_end":71743,"line_start":517,"line_end":517,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71846,"byte_end":71856,"line_start":523,"line_end":523,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71955,"byte_end":71965,"line_start":529,"line_end":529,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":72087,"byte_end":72093,"line_start":536,"line_end":536,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85229,"byte_end":85238,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90625,"byte_end":90634,"line_start":211,"line_end":211,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90749,"byte_end":90758,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90841,"byte_end":90850,"line_start":223,"line_end":223,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91079,"byte_end":91088,"line_start":230,"line_end":230,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91185,"byte_end":91194,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91312,"byte_end":91321,"line_start":239,"line_end":239,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91689,"byte_end":91698,"line_start":253,"line_end":253,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92578,"byte_end":92580,"line_start":278,"line_end":278,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92934,"byte_end":92936,"line_start":294,"line_end":294,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/normalize.rs","byte_start":94938,"byte_end":94944,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98014,"byte_end":98024,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98933,"byte_end":98943,"line_start":64,"line_end":64,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":99235,"byte_end":99245,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":99544,"byte_end":99554,"line_start":85,"line_end":85,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":99877,"byte_end":99887,"line_start":95,"line_end":95,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":100542,"byte_end":100552,"line_start":111,"line_end":111,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":100970,"byte_end":100980,"line_start":125,"line_end":125,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":101804,"byte_end":101814,"line_start":150,"line_end":150,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":101938,"byte_end":101948,"line_start":156,"line_end":156,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102072,"byte_end":102081,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102198,"byte_end":102207,"line_start":168,"line_end":168,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102332,"byte_end":102344,"line_start":174,"line_end":174,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102471,"byte_end":102483,"line_start":180,"line_end":180,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102613,"byte_end":102623,"line_start":186,"line_end":186,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102792,"byte_end":102802,"line_start":194,"line_end":194,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102949,"byte_end":102955,"line_start":200,"line_end":200,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":104315,"byte_end":104325,"line_start":242,"line_end":242,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":105797,"byte_end":105809,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106733,"byte_end":106745,"line_start":53,"line_end":53,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107007,"byte_end":107019,"line_start":63,"line_end":63,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107261,"byte_end":107273,"line_start":72,"line_end":72,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107534,"byte_end":107546,"line_start":82,"line_end":82,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107734,"byte_end":107746,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107892,"byte_end":107904,"line_start":94,"line_end":94,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":108059,"byte_end":108071,"line_start":100,"line_end":100,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":108263,"byte_end":108274,"line_start":108,"line_end":108,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":109052,"byte_end":109064,"line_start":136,"line_end":136,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":82255,"byte_end":82264,"line_start":101,"line_end":101,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3369,"byte_end":3378,"line_start":99,"line_end":99,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3480,"byte_end":3489,"line_start":104,"line_end":104,"column_start":45,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3551,"byte_end":3560,"line_start":106,"line_end":106,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3728,"byte_end":3737,"line_start":112,"line_end":112,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":2291,"byte_end":2296,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":635}},{"kind":"Mod","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":81375,"byte_end":81386,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":636}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":7004,"byte_end":7015,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8461,"byte_end":8472,"line_start":63,"line_end":63,"column_start":34,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1071},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":8855,"byte_end":8866,"line_start":73,"line_end":73,"column_start":25,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1071},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9123,"byte_end":9134,"line_start":81,"line_end":81,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9217,"byte_end":9228,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9333,"byte_end":9344,"line_start":93,"line_end":93,"column_start":13,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":9380,"byte_end":9391,"line_start":95,"line_end":95,"column_start":32,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1071},"to":{"krate":4,"index":216}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":10083,"byte_end":10094,"line_start":118,"line_end":118,"column_start":38,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1071},"to":{"krate":4,"index":186}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":11461,"byte_end":11472,"line_start":153,"line_end":153,"column_start":36,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1071},"to":{"krate":4,"index":189}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":11859,"byte_end":11871,"line_start":167,"line_end":167,"column_start":28,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1067},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":12072,"byte_end":12083,"line_start":174,"line_end":174,"column_start":29,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":12258,"byte_end":12269,"line_start":182,"line_end":182,"column_start":14,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/affine.rs","byte_start":12535,"byte_end":12546,"line_start":195,"line_end":195,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1071},"to":{"krate":23,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11169887,"byte_end":11169903,"line_start":18,"line_end":18,"column_start":6,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11186353,"byte_end":11186369,"line_start":458,"line_end":458,"column_start":18,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11186462,"byte_end":11186478,"line_start":464,"line_end":464,"column_start":34,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1144},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11187006,"byte_end":11187022,"line_start":480,"line_end":480,"column_start":25,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1144},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_5x52.rs","byte_start":11187334,"byte_end":11187350,"line_start":491,"line_end":491,"column_start":18,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1144},"to":{"krate":23,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11188278,"byte_end":11188294,"line_start":27,"line_end":27,"column_start":6,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11191461,"byte_end":11191477,"line_start":132,"line_end":132,"column_start":18,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11191570,"byte_end":11191586,"line_start":138,"line_end":138,"column_start":34,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1209},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11192279,"byte_end":11192295,"line_start":156,"line_end":156,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1209},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field/field_impl.rs","byte_start":11192623,"byte_end":11192639,"line_start":166,"line_end":166,"column_start":18,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1209},"to":{"krate":23,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":16217,"byte_end":16229,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":22666,"byte_end":22678,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":22788,"byte_end":22800,"line_start":236,"line_end":236,"column_start":18,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":22893,"byte_end":22905,"line_start":242,"line_end":242,"column_start":34,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1218},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23088,"byte_end":23100,"line_start":248,"line_end":248,"column_start":25,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1218},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23407,"byte_end":23419,"line_start":262,"line_end":262,"column_start":29,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23599,"byte_end":23611,"line_start":270,"line_end":270,"column_start":34,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":23919,"byte_end":23931,"line_start":284,"line_end":284,"column_start":29,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":24111,"byte_end":24123,"line_start":292,"line_end":292,"column_start":34,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/field.rs","byte_start":24260,"byte_end":24272,"line_start":299,"line_end":299,"column_start":18,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1218},"to":{"krate":23,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":35560,"byte_end":35571,"line_start":75,"line_end":75,"column_start":33,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":35771,"byte_end":35782,"line_start":85,"line_end":85,"column_start":6,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":39934,"byte_end":39949,"line_start":206,"line_end":206,"column_start":22,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":40282,"byte_end":40297,"line_start":222,"line_end":222,"column_start":23,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":40461,"byte_end":40476,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/mul.rs","byte_start":40602,"byte_end":40617,"line_start":236,"line_end":236,"column_start":29,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":41481,"byte_end":41490,"line_start":26,"line_end":26,"column_start":31,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1426},"to":{"krate":4,"index":231}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":41808,"byte_end":41823,"line_start":39,"line_end":39,"column_start":28,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42117,"byte_end":42132,"line_start":50,"line_end":50,"column_start":38,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1227},"to":{"krate":4,"index":186}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42309,"byte_end":42324,"line_start":56,"line_end":56,"column_start":34,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1227},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42675,"byte_end":42690,"line_start":66,"line_end":66,"column_start":25,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1227},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42818,"byte_end":42833,"line_start":72,"line_end":72,"column_start":20,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42931,"byte_end":42946,"line_start":78,"line_end":78,"column_start":13,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":42956,"byte_end":42971,"line_start":80,"line_end":80,"column_start":6,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":48709,"byte_end":48724,"line_start":250,"line_end":250,"column_start":16,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1227},"to":{"krate":33,"index":173}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49197,"byte_end":49212,"line_start":275,"line_end":275,"column_start":16,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1227},"to":{"krate":33,"index":182}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49359,"byte_end":49374,"line_start":283,"line_end":283,"column_start":18,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2827}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49668,"byte_end":49683,"line_start":297,"line_end":297,"column_start":31,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":49868,"byte_end":49883,"line_start":305,"line_end":305,"column_start":32,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50073,"byte_end":50088,"line_start":313,"line_end":313,"column_start":37,"column_end":52},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50240,"byte_end":50255,"line_start":319,"line_end":319,"column_start":38,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50396,"byte_end":50411,"line_start":325,"line_end":325,"column_start":27,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50792,"byte_end":50807,"line_start":341,"line_end":341,"column_start":28,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":50995,"byte_end":51010,"line_start":349,"line_end":349,"column_start":33,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51160,"byte_end":51175,"line_start":355,"line_end":355,"column_start":34,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51305,"byte_end":51320,"line_start":361,"line_end":361,"column_start":14,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":7113}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51487,"byte_end":51502,"line_start":367,"line_end":367,"column_start":39,"column_end":54},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":7113}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":51643,"byte_end":51658,"line_start":373,"line_end":373,"column_start":31,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52043,"byte_end":52058,"line_start":389,"line_end":389,"column_start":32,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52248,"byte_end":52263,"line_start":397,"line_end":397,"column_start":37,"column_end":52},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52415,"byte_end":52430,"line_start":403,"line_end":403,"column_start":38,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52571,"byte_end":52586,"line_start":409,"line_end":409,"column_start":27,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":52967,"byte_end":52982,"line_start":425,"line_end":425,"column_start":28,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":53170,"byte_end":53185,"line_start":433,"line_end":433,"column_start":33,"column_end":48},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":53335,"byte_end":53350,"line_start":439,"line_end":439,"column_start":34,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/projective.rs","byte_start":53480,"byte_end":53495,"line_start":445,"line_end":445,"column_start":14,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11198524,"byte_end":11198534,"line_start":145,"line_end":145,"column_start":6,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208641,"byte_end":11208651,"line_start":390,"line_end":390,"column_start":18,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1354},"to":{"krate":23,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208744,"byte_end":11208754,"line_start":396,"line_end":396,"column_start":20,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1354},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208855,"byte_end":11208865,"line_start":402,"line_end":402,"column_start":20,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1354},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11208973,"byte_end":11208983,"line_start":408,"line_end":408,"column_start":34,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1354},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11209154,"byte_end":11209164,"line_start":414,"line_end":414,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1354},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11209414,"byte_end":11209424,"line_start":423,"line_end":423,"column_start":27,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":498},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11209590,"byte_end":11209604,"line_start":432,"line_end":432,"column_start":6,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":59768,"byte_end":59774,"line_start":48,"line_end":48,"column_start":16,"column_end":22},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1378},"to":{"krate":24,"index":61}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":60980,"byte_end":60986,"line_start":94,"line_end":94,"column_start":21,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1378},"to":{"krate":24,"index":80}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62356,"byte_end":62362,"line_start":147,"line_end":147,"column_start":20,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62457,"byte_end":62463,"line_start":153,"line_end":153,"column_start":20,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":62544,"byte_end":62550,"line_start":159,"line_end":159,"column_start":6,"column_end":12},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68273,"byte_end":68279,"line_start":338,"line_end":338,"column_start":32,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1378},"to":{"krate":4,"index":756}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68551,"byte_end":68557,"line_start":349,"line_end":349,"column_start":21,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":68837,"byte_end":68843,"line_start":365,"line_end":365,"column_start":34,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1378},"to":{"krate":20,"index":66}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69020,"byte_end":69026,"line_start":371,"line_end":371,"column_start":25,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1378},"to":{"krate":20,"index":58}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69136,"byte_end":69142,"line_start":377,"line_end":377,"column_start":20,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69240,"byte_end":69246,"line_start":383,"line_end":383,"column_start":13,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69264,"byte_end":69270,"line_start":385,"line_end":385,"column_start":14,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69491,"byte_end":69497,"line_start":401,"line_end":401,"column_start":22,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":69928,"byte_end":69934,"line_start":425,"line_end":425,"column_start":23,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2916}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70079,"byte_end":70085,"line_start":433,"line_end":433,"column_start":28,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70210,"byte_end":70216,"line_start":439,"line_end":439,"column_start":29,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70335,"byte_end":70341,"line_start":445,"line_end":445,"column_start":22,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70627,"byte_end":70633,"line_start":461,"line_end":461,"column_start":23,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70778,"byte_end":70784,"line_start":469,"line_end":469,"column_start":28,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":70909,"byte_end":70915,"line_start":475,"line_end":475,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71033,"byte_end":71039,"line_start":481,"line_end":481,"column_start":22,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71325,"byte_end":71331,"line_start":497,"line_end":497,"column_start":23,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71476,"byte_end":71482,"line_start":505,"line_end":505,"column_start":28,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71607,"byte_end":71613,"line_start":511,"line_end":511,"column_start":29,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1378},"to":{"krate":1,"index":2955}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71733,"byte_end":71743,"line_start":517,"line_end":517,"column_start":24,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":498},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71846,"byte_end":71856,"line_start":523,"line_end":523,"column_start":23,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":71955,"byte_end":71965,"line_start":529,"line_end":529,"column_start":24,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/arithmetic/scalar.rs","byte_start":72087,"byte_end":72093,"line_start":536,"line_end":536,"column_start":18,"column_end":24},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1378},"to":{"krate":23,"index":41}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":85229,"byte_end":85238,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90625,"byte_end":90634,"line_start":211,"line_end":211,"column_start":43,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1398},"to":{"krate":39,"index":60}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90749,"byte_end":90758,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":2746}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":90841,"byte_end":90850,"line_start":223,"line_end":223,"column_start":16,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91079,"byte_end":91088,"line_start":230,"line_end":230,"column_start":13,"column_end":22},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":2505}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91185,"byte_end":91194,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":2500}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91312,"byte_end":91321,"line_start":239,"line_end":239,"column_start":25,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":91689,"byte_end":91698,"line_start":253,"line_end":253,"column_start":33,"column_end":42},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1026},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92578,"byte_end":92580,"line_start":278,"line_end":278,"column_start":6,"column_end":8},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/recoverable.rs","byte_start":92934,"byte_end":92936,"line_start":294,"line_end":294,"column_start":22,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1405},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/normalize.rs","byte_start":94938,"byte_end":94944,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1378},"to":{"krate":38,"index":636}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98014,"byte_end":98024,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":98933,"byte_end":98943,"line_start":64,"line_end":64,"column_start":34,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":846},"to":{"krate":39,"index":83}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":99235,"byte_end":99245,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":846},"to":{"krate":39,"index":92}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":99544,"byte_end":99554,"line_start":85,"line_end":85,"column_start":40,"column_end":50},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":846},"to":{"krate":39,"index":87}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":99877,"byte_end":99887,"line_start":95,"line_end":95,"column_start":53,"column_end":63},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":846},"to":{"krate":39,"index":87}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":100542,"byte_end":100552,"line_start":111,"line_end":111,"column_start":50,"column_end":60},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":846},"to":{"krate":39,"index":98}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":100970,"byte_end":100980,"line_start":125,"line_end":125,"column_start":63,"column_end":73},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":846},"to":{"krate":39,"index":98}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":101804,"byte_end":101814,"line_start":150,"line_end":150,"column_start":26,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":846},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":101938,"byte_end":101948,"line_start":156,"line_end":156,"column_start":27,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":846},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102072,"byte_end":102081,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102198,"byte_end":102207,"line_start":168,"line_end":168,"column_start":28,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102332,"byte_end":102344,"line_start":174,"line_end":174,"column_start":27,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102471,"byte_end":102483,"line_start":180,"line_end":180,"column_start":28,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102613,"byte_end":102623,"line_start":186,"line_end":186,"column_start":30,"column_end":40},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":846},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102792,"byte_end":102802,"line_start":194,"line_end":194,"column_start":31,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":846},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":102949,"byte_end":102955,"line_start":200,"line_end":200,"column_start":46,"column_end":52},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1378},"to":{"krate":38,"index":139}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/sign.rs","byte_start":104315,"byte_end":104325,"line_start":242,"line_end":242,"column_start":25,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":846},"to":{"krate":34,"index":174}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":105797,"byte_end":105809,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":106733,"byte_end":106745,"line_start":53,"line_end":53,"column_start":36,"column_end":48},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1413},"to":{"krate":39,"index":116}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107007,"byte_end":107019,"line_start":63,"line_end":63,"column_start":42,"column_end":54},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1413},"to":{"krate":39,"index":119}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107261,"byte_end":107273,"line_start":72,"line_end":72,"column_start":55,"column_end":67},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1413},"to":{"krate":39,"index":119}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107534,"byte_end":107546,"line_start":82,"line_end":82,"column_start":29,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107734,"byte_end":107746,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1067},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":107892,"byte_end":107904,"line_start":94,"line_end":94,"column_start":36,"column_end":48},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1413},"to":{"krate":4,"index":189}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":108059,"byte_end":108071,"line_start":100,"line_end":100,"column_start":33,"column_end":45},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1413},"to":{"krate":1,"index":2762}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":108263,"byte_end":108274,"line_start":108,"line_end":108,"column_start":37,"column_end":48},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1071},"to":{"krate":38,"index":151}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa/verify.rs","byte_start":109052,"byte_end":109064,"line_start":136,"line_end":136,"column_start":24,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1413},"to":{"krate":34,"index":177}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/ecdsa.rs","byte_start":82255,"byte_end":82264,"line_start":101,"line_end":101,"column_start":46,"column_end":55},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1426},"to":{"krate":38,"index":155}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3369,"byte_end":3378,"line_start":99,"line_end":99,"column_start":32,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1426},"to":{"krate":4,"index":752}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3480,"byte_end":3489,"line_start":104,"line_end":104,"column_start":45,"column_end":54},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1426},"to":{"krate":4,"index":219}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3551,"byte_end":3560,"line_start":106,"line_end":106,"column_start":58,"column_end":67},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1426},"to":{"krate":4,"index":214}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.7.3/src/lib.rs","byte_start":3728,"byte_end":3737,"line_start":112,"line_end":112,"column_start":46,"column_end":55},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1426},"to":{"krate":4,"index":760}}]}
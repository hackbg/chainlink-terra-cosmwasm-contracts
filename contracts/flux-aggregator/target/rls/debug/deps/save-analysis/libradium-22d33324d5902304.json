{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0","program":"/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","radium","--edition=2018","/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=22d33324d5902304","-C","extra-filename=-22d33324d5902304","--out-dir","/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","-C","linker=x86_64-linux-gnu-gcc","-L","dependency=/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/denis/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/denis/Documents/coding/hack/chainlink-terra-cosmwasm-contracts/contracts/flux-aggregator/target/rls/debug/deps/libradium-22d33324d5902304.rmeta"},"prelude":{"crate_id":{"name":"radium","disambiguator":[6170578490148099913,11385662121544404573]},"crate_root":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src","external_crates":[{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16381423150204372411,13484601183843768894]}},{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14897589902885170584,12420159477491062790]}}],"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":0,"byte_end":24604,"line_start":1,"line_end":775,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":0,"byte_end":24604,"line_start":1,"line_end":775,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":69},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":88}],"decl_id":null,"docs":" `radium` provides a series of helper traits providing a uniform API for\n interacting with both atomic types like\n [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","sig":null,"attributes":[{"value":"/ `radium` provides a series of helper traits providing a uniform API for","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":0,"byte_end":75,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/ interacting with both atomic types like","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":76,"byte_end":119,"line_start":2,"line_end":2,"column_start":1,"column_end":44}},{"value":"/ [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":120,"byte_end":179,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":180,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This crate is `#![no_std]`-compatible, and uses no non-core types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":184,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ For details, see the documentation for [`Radium`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":259,"byte_end":313,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":314,"byte_end":317,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":318,"byte_end":325,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":326,"byte_end":329,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ **@kneecaw** - <https://twitter.com/kneecaw/status/1132695060812849154>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":330,"byte_end":405,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ > Feelin' lazy: Has someone already written a helper trait abstracting","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":406,"byte_end":480,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ > operations over `AtomicUsize` and `Cell<usize>` for generic code which may","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":481,"byte_end":561,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ > not care about atomicity?","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":562,"byte_end":593,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":594,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ **@ManishEarth** - <https://twitter.com/ManishEarth/status/1132706585300496384>","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":598,"byte_end":681,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ > no but call the crate radium","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":682,"byte_end":716,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"/ >","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":717,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ > (since people didn't care that it was radioactive and used it in everything)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":723,"byte_end":805,"line_start":19,"line_end":19,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":806,"byte_end":809,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`AtomicUsize`]: core::sync::atomic::AtomicUsize","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":810,"byte_end":862,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":863,"byte_end":896,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":898,"byte_end":908,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":909,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2403,"byte_end":2409,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"Radium","qualname":"::Radium","value":"Radium<T>","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":" A maybe-atomic shared mutable fundamental type `T`.","sig":null,"attributes":[{"value":"/ A maybe-atomic shared mutable fundamental type `T`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1623,"byte_end":1678,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1679,"byte_end":1682,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by both the [atomic wrapper] type for `T`, and by","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1683,"byte_end":1762,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ [`Cell<T>`], providing a consistent interface for interacting with the two","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1763,"byte_end":1841,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1842,"byte_end":1852,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1853,"byte_end":1856,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This trait provides methods predicated on marker traits for the underlying","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1857,"byte_end":1935,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ fundamental. Only types which can be viewed as sequences of bits may use the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":1936,"byte_end":2016,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ functions for bit-wise arithmetic, and only types which can be used as","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2017,"byte_end":2091,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ integers may use the functions for numeric arithmetic. Use of these methods","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2092,"byte_end":2171,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ on insufficient underlying types (for example, `Radium::fetch_and` on an","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2172,"byte_end":2248,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ atomic or cell-wrapped pointer) will cause a compiler error.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2249,"byte_end":2313,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2314,"byte_end":2317,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [atomic wrapper]: core::sync::atomic","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2318,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2359,"byte_end":2392,"line_start":57,"line_end":57,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2464,"byte_end":2467,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"new","qualname":"::Radium::new","value":"pub fn new(T) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Creates a new value of this type.\n","sig":null,"attributes":[{"value":"/ Creates a new value of this type.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2419,"byte_end":2456,"line_start":59,"line_end":59,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2720,"byte_end":2725,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"fence","qualname":"::Radium::fence","value":"pub fn fence(Ordering)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" If the underlying value is atomic, calls [`fence`] with the given\n [`Ordering`]. Otherwise, does nothing.","sig":null,"attributes":[{"value":"/ If the underlying value is atomic, calls [`fence`] with the given","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2492,"byte_end":2561,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ [`Ordering`]. Otherwise, does nothing.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2566,"byte_end":2608,"line_start":63,"line_end":63,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2613,"byte_end":2616,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: core::sync::atomic::Ordering","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2621,"byte_end":2667,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/ [`fence`]: core::sync::atomic::fence","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2672,"byte_end":2712,"line_start":66,"line_end":66,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2947,"byte_end":2954,"line_start":73,"line_end":73,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::Radium::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2749,"byte_end":2805,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2810,"byte_end":2813,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This is safe because the mutable reference to `self` guarantees that no","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2818,"byte_end":2893,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ other references exist to this value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2898,"byte_end":2939,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3131,"byte_end":3141,"line_start":78,"line_end":78,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::Radium::into_inner","value":"pub fn into_inner(Self) -> T","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Consumes the wrapper and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the wrapper and returns the contained value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":2982,"byte_end":3039,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3044,"byte_end":3047,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This is safe as passing by value ensures no other references exist.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3052,"byte_end":3123,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3392,"byte_end":3396,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"load","qualname":"::Radium::load","value":"pub fn load(&Self, Ordering) -> T","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Load a value from this object.","sig":null,"attributes":[{"value":"/ Load a value from this object.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3159,"byte_end":3193,"line_start":80,"line_end":80,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3198,"byte_end":3201,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Ordering values are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3206,"byte_end":3258,"line_start":82,"line_end":82,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3263,"byte_end":3266,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::load`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3271,"byte_end":3307,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3312,"byte_end":3315,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::load`]: core::sync::atomic::AtomicUsize::load","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3320,"byte_end":3384,"line_start":86,"line_end":86,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3670,"byte_end":3675,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"store","qualname":"::Radium::store","value":"pub fn store(&Self, T, Ordering)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Store a value in this object.","sig":null,"attributes":[{"value":"/ Store a value in this object.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3432,"byte_end":3465,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3470,"byte_end":3473,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3478,"byte_end":3533,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3538,"byte_end":3541,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::store`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3546,"byte_end":3583,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3588,"byte_end":3591,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::store`]: core::sync::atomic::AtomicUsize::store","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3596,"byte_end":3662,"line_start":95,"line_end":95,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3964,"byte_end":3968,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"swap","qualname":"::Radium::swap","value":"pub fn swap(&Self, T, Ordering) -> T","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Swap with the value stored in this object.","sig":null,"attributes":[{"value":"/ Swap with the value stored in this object.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3716,"byte_end":3762,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3767,"byte_end":3770,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3775,"byte_end":3830,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3835,"byte_end":3838,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::swap`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3843,"byte_end":3879,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3884,"byte_end":3887,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::swap`]: core::sync::atomic::AtomicUsize::swap","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":3892,"byte_end":3956,"line_start":104,"line_end":104,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4509,"byte_end":4525,"line_start":118,"line_end":118,"column_start":8,"column_end":24},"name":"compare_and_swap","qualname":"::Radium::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T, Ordering) -> T","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4014,"byte_end":4086,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4091,"byte_end":4123,"line_start":108,"line_end":108,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4128,"byte_end":4131,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previously-stored value. If it is equal to","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4136,"byte_end":4213,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/ `current`, then the value was updated with `new`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4218,"byte_end":4271,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4276,"byte_end":4279,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4284,"byte_end":4339,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_and_swap`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4352,"byte_end":4400,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4405,"byte_end":4408,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_and_swap`]: core::sync::atomic::AtomicUsize::compare_and_swap","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4413,"byte_end":4501,"line_start":117,"line_end":117,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5144,"byte_end":5160,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"compare_exchange","qualname":"::Radium::compare_exchange","value":"pub fn compare_exchange(&Self, T, T, Ordering, Ordering) -> Result<T, T>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4581,"byte_end":4653,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4658,"byte_end":4690,"line_start":121,"line_end":121,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4695,"byte_end":4698,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The return value is a `Result` indicating whether the new value was","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4703,"byte_end":4774,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ written, and containing the previously-stored value. On success, this","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4779,"byte_end":4852,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ value is guaranteed to be equal to `current`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4857,"byte_end":4906,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4911,"byte_end":4914,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4919,"byte_end":4974,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4979,"byte_end":4982,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":4987,"byte_end":5035,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5040,"byte_end":5043,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange`]: core::sync::atomic::AtomicUsize::compare_exchange","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5048,"byte_end":5136,"line_start":131,"line_end":131,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5991,"byte_end":6012,"line_start":154,"line_end":154,"column_start":8,"column_end":29},"name":"compare_exchange_weak","qualname":"::Radium::compare_exchange_weak","value":"pub fn compare_exchange_weak(&Self, T, T, Ordering, Ordering) -> Result<T, T>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5295,"byte_end":5367,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5372,"byte_end":5404,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5409,"byte_end":5412,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Unlike `compare_exchange`, this function is allowed to spuriously fail","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5417,"byte_end":5491,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/ even when the comparison succeeds, which can result in more efficient","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5496,"byte_end":5569,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ code on some platforms. The return value is a `Result` indicating","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5574,"byte_end":5643,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ whether the new value was written, and containing the previously-stored","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5648,"byte_end":5723,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5728,"byte_end":5738,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5743,"byte_end":5746,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5751,"byte_end":5806,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5811,"byte_end":5814,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange_weak`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5819,"byte_end":5872,"line_start":151,"line_end":151,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5877,"byte_end":5880,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange_weak`]: core::sync::atomic::AtomicUsize::compare_exchange_weak","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":5885,"byte_end":5983,"line_start":153,"line_end":153,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6542,"byte_end":6551,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"fetch_and","qualname":"::Radium::fetch_and","value":"pub fn fetch_and(&Self, T, Ordering) -> T where T: marker::BitOps","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Performs a bitwise \"and\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"and\" on the currently-stored value and the argument","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6147,"byte_end":6222,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6227,"byte_end":6272,"line_start":163,"line_end":163,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6277,"byte_end":6280,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6285,"byte_end":6325,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6330,"byte_end":6333,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6338,"byte_end":6393,"line_start":167,"line_end":167,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6398,"byte_end":6401,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_and`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6406,"byte_end":6447,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6452,"byte_end":6455,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_and`]: core::sync::atomic::AtomicUsize::fetch_and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6460,"byte_end":6534,"line_start":171,"line_end":171,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7032,"byte_end":7042,"line_start":186,"line_end":186,"column_start":8,"column_end":18},"name":"fetch_nand","qualname":"::Radium::fetch_nand","value":"pub fn fetch_nand(&Self, T, Ordering) -> T where T: marker::BitOps","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Performs a bitwise \"nand\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"nand\" on the currently-stored value and the argument","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6633,"byte_end":6709,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6714,"byte_end":6759,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6764,"byte_end":6767,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6772,"byte_end":6812,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6817,"byte_end":6820,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6825,"byte_end":6880,"line_start":181,"line_end":181,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6885,"byte_end":6888,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_nand`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6893,"byte_end":6935,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6940,"byte_end":6943,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_nand`]: core::sync::atomic::AtomicUsize::fetch_nand","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":6948,"byte_end":7024,"line_start":185,"line_end":185,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7515,"byte_end":7523,"line_start":200,"line_end":200,"column_start":8,"column_end":16},"name":"fetch_or","qualname":"::Radium::fetch_or","value":"pub fn fetch_or(&Self, T, Ordering) -> T where T: marker::BitOps","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Performs a bitwise \"or\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"or\" on the currently-stored value and the argument","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7124,"byte_end":7198,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7203,"byte_end":7248,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7253,"byte_end":7256,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7261,"byte_end":7301,"line_start":193,"line_end":193,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7306,"byte_end":7309,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7314,"byte_end":7369,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7374,"byte_end":7377,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_or`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7382,"byte_end":7422,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7427,"byte_end":7430,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_or`]: core::sync::atomic::AtomicUsize::fetch_or","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7435,"byte_end":7507,"line_start":199,"line_end":199,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8000,"byte_end":8009,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"fetch_xor","qualname":"::Radium::fetch_xor","value":"pub fn fetch_xor(&Self, T, Ordering) -> T where T: marker::BitOps","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Performs a bitwise \"xor\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"xor\" on the currently-stored value and the argument","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7605,"byte_end":7680,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7685,"byte_end":7730,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7735,"byte_end":7738,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7743,"byte_end":7783,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7788,"byte_end":7791,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7796,"byte_end":7851,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7856,"byte_end":7859,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_xor`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7864,"byte_end":7905,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7910,"byte_end":7913,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_xor`]: core::sync::atomic::AtomicUsize::fetch_xor","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":7918,"byte_end":7992,"line_start":213,"line_end":213,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8471,"byte_end":8480,"line_start":228,"line_end":228,"column_start":8,"column_end":17},"name":"fetch_add","qualname":"::Radium::fetch_add","value":"pub fn fetch_add(&Self, T, Ordering) -> T where T: marker::NumericOps","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Adds `value` to the currently-stored value, wrapping on overflow, and\n stores the result in `self`.","sig":null,"attributes":[{"value":"/ Adds `value` to the currently-stored value, wrapping on overflow, and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8091,"byte_end":8164,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ stores the result in `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8169,"byte_end":8201,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8206,"byte_end":8209,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8214,"byte_end":8254,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8259,"byte_end":8262,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8267,"byte_end":8322,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8327,"byte_end":8330,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_add`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8335,"byte_end":8376,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8381,"byte_end":8384,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_add`]: core::sync::atomic::AtomicUsize::fetch_add","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8389,"byte_end":8463,"line_start":227,"line_end":227,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8954,"byte_end":8963,"line_start":242,"line_end":242,"column_start":8,"column_end":17},"name":"fetch_sub","qualname":"::Radium::fetch_sub","value":"pub fn fetch_sub(&Self, T, Ordering) -> T where T: marker::NumericOps","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Subtracts `value` from the currently-stored value, wrapping on\n underflow, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Subtracts `value` from the currently-stored value, wrapping on","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8566,"byte_end":8632,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/ underflow, and stores the result in `self`.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8637,"byte_end":8684,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8689,"byte_end":8692,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8697,"byte_end":8737,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8742,"byte_end":8745,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8750,"byte_end":8805,"line_start":237,"line_end":237,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8810,"byte_end":8813,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_sub`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8818,"byte_end":8859,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8864,"byte_end":8867,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_sub`]: core::sync::atomic::AtomicUsize::fetch_sub","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":8872,"byte_end":8946,"line_start":241,"line_end":241,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":69},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9093,"byte_end":9099,"line_start":248,"line_end":248,"column_start":9,"column_end":15},"name":"marker","qualname":"::marker","value":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Marker traits used by [`Radium`].\n","sig":null,"attributes":[{"value":"/ Marker traits used by [`Radium`].","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9047,"byte_end":9084,"line_start":247,"line_end":247,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":70},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10142,"byte_end":10148,"line_start":277,"line_end":277,"column_start":15,"column_end":21},"name":"BitOps","qualname":"::marker::BitOps","value":"BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic bitwise operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic bitwise operations.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9106,"byte_end":9159,"line_start":249,"line_end":249,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9164,"byte_end":9167,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_and`], [`fetch_nand`],","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9172,"byte_end":9248,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ [`fetch_or`], and [`fetch_xor`] maybe-atomic operations.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9253,"byte_end":9313,"line_start":252,"line_end":252,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9318,"byte_end":9321,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [`fetch_and`]: crate::Radium::fetch_and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9326,"byte_end":9369,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/ [`fetch_nand`]: crate::Radium::fetch_nand","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9374,"byte_end":9419,"line_start":255,"line_end":255,"column_start":5,"column_end":50}},{"value":"/ [`fetch_or`]: crate::Radium::fetch_or","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9424,"byte_end":9465,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/ [`fetch_xor`]: crate::Radium::fetch_xor","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9470,"byte_end":9513,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9518,"byte_end":9521,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ `bool` and all integer fundamental types implement this.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9526,"byte_end":9586,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9591,"byte_end":9594,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9599,"byte_end":9610,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9615,"byte_end":9647,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9652,"byte_end":9677,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9682,"byte_end":9729,"line_start":264,"line_end":264,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_or(&num, 2, Ordering::Relaxed);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9734,"byte_end":9783,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9788,"byte_end":9795,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9800,"byte_end":9803,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Pointers do not. This will cause a compiler error.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9808,"byte_end":9862,"line_start":268,"line_end":268,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9867,"byte_end":9870,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9875,"byte_end":9899,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9904,"byte_end":9936,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9941,"byte_end":9966,"line_start":272,"line_end":272,"column_start":5,"column_end":30}},{"value":"/ # use core::ptr;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9971,"byte_end":9991,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/ let ptr: AtomicPtr<usize> = Default::default();","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":9996,"byte_end":10047,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ Radium::fetch_or(&ptr, ptr::null_mut(), Ordering::Relaxed);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10052,"byte_end":10115,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10120,"byte_end":10127,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":71},"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":11055,"byte_end":11065,"line_start":304,"line_end":304,"column_start":15,"column_end":25},"name":"NumericOps","qualname":"::marker::NumericOps","value":"NumericOps: BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic arithmetic operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic arithmetic operations.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10157,"byte_end":10213,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10218,"byte_end":10221,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_add`] and","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10226,"byte_end":10289,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/ [`fetch_sub`] maybe-atomic operations.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10294,"byte_end":10336,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10341,"byte_end":10344,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`fetch_add`]: crate::Radium::fetch_add","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10349,"byte_end":10392,"line_start":284,"line_end":284,"column_start":5,"column_end":48}},{"value":"/ [`fetch_sub`]: crate::Radium::fetch_sub","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10397,"byte_end":10440,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10445,"byte_end":10448,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The integer types, such as `usize` and `i32`, implement this trait.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10453,"byte_end":10524,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10529,"byte_end":10532,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10537,"byte_end":10548,"line_start":289,"line_end":289,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10553,"byte_end":10585,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10590,"byte_end":10615,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(2);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10620,"byte_end":10667,"line_start":292,"line_end":292,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_add(&num, 2, Ordering::Relaxed);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10672,"byte_end":10722,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10727,"byte_end":10734,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10739,"byte_end":10742,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ `bool` and pointers do not. This will cause a compiler error.","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10747,"byte_end":10812,"line_start":296,"line_end":296,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10817,"byte_end":10820,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10825,"byte_end":10849,"line_start":298,"line_end":298,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10854,"byte_end":10886,"line_start":299,"line_end":299,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10891,"byte_end":10916,"line_start":300,"line_end":300,"column_start":5,"column_end":30}},{"value":"/ let bit: AtomicBool = AtomicBool::new(false);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10921,"byte_end":10970,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/ Radium::fetch_add(&bit, true, Ordering::Relaxed);","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":10975,"byte_end":11028,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":11033,"byte_end":11040,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]}],"impls":[{"id":31,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":17547,"byte_end":17557,"line_start":566,"line_end":566,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":18379,"byte_end":18383,"line_start":593,"line_end":593,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":19220,"byte_end":19229,"line_start":620,"line_end":620,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":21697,"byte_end":21701,"line_start":690,"line_end":690,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":11067,"byte_end":11073,"line_start":304,"line_end":304,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":70},"to":{"krate":0,"index":71}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":17547,"byte_end":17557,"line_start":566,"line_end":566,"column_start":23,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":8435},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":18379,"byte_end":18383,"line_start":593,"line_end":593,"column_start":23,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":3983},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":19220,"byte_end":19229,"line_start":620,"line_end":620,"column_start":28,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":8440},"to":{"krate":0,"index":51}},{"span":{"file_name":"/home/denis/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.3.0/src/lib.rs","byte_start":21697,"byte_end":21701,"line_start":690,"line_end":690,"column_start":28,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":3983},"to":{"krate":0,"index":51}}]}